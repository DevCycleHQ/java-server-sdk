name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    name: Version Bump and Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Get latest non-prerelease release
        id: latestrelease
        uses: cardinalby/git-get-release-action@v1
        with:
          latest: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
      - name: Get next minor version
        id: semverbump
        uses: WyriHaximus/github-action-next-semvers@v1.2.1
        with:
          version: ${{ steps.latestrelease.outputs.tag_name }}
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
          cache: 'gradle'
      - name: Update Version in the Project
        run: |
          sed -i '' "s/^version = \"[0-9].[0-9].[0-9]\"/version = \"${{steps.semverbump.outputs.patch}}\"/g" build.gradle
          sed -i '' "s/private String sdkVersion = \"[0-9]\.[0-9]\.[0-9]\";/private String sdkVersion = \"${{steps.semverbump.outputs.patch}}\";/g" src/main/java/com/devcycle/sdk/server/common/model/PlatformData.java
          sed -i '' "s/java-server-sdk:[0-9]\.[0-9]\.[0-9]/java-server-sdk:${{steps.semverbump.outputs.patch}}/g" ./example-cloud/build.gradle
          sed -i '' "s/java-server-sdk:[0-9]\.[0-9]\.[0-9]/java-server-sdk:${{steps.semverbump.outputs.patch}}/g" ./example-local/build.gradle
          sed -i '' "s/<java\.server\.sdk\.version>[0-9]\.[0-9]\.[0-9]<\/java\.server\.sdk\.version>/<java.server.sdk.version>${{steps.semverbump.outputs.patch}}<\/java.server.sdk.version>/g" ./benchmark/pom.xml
          sed -i '' "s/<version>[0-9]\.[0-9]\.[0-9]<\/version>/<version>${{steps.semverbump.outputs.patch}}<\/version>/g" ./README.md
          sed -i '' "s/java-server-sdk:[0-9]\.[0-9]\.[0-9]/java-server-sdk:${{steps.semverbump.outputs.patch}}/g" ./README.md
      - name: Commit and push
        run: |
          git config --global user.email "github-tracker-bot@taplytics.com"
          git config --global user.name "taplytics-robot"
          git add ./build.gradle
          git add ./src/main/java/com/devcycle/sdk/server/common/model/PlatformData.java
          git add ./example-cloud/build.gradle
          git add ./example-local/build.gradle
          git add ./benchmark/pom.xml
          git add ./README.md
          git commit -m "Release ${TAG_VERSION}"
          git push origin main
      - name: Build with Gradle
        run: ./gradlew build --no-daemon
      - name: Publish To Sonatype
        env:
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: ./gradlew publishJavaServerSDKPublicationToMavenRepository --no-daemon
      - name: Release SDK
        uses: DevCycleHQ/release-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}