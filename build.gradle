plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'java-library'

    id 'signing'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

group = 'com.devcycle'
archivesBaseName = "java-server-sdk"
version = '1.0.7.1'


repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8


task execute(type:JavaExec) {
    main = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}

ext {
    retrofit_version = "2.9.0"
    jackson_version = "2.13.3"
    swagger_annotations_version = '2.2.0'
    lombok_version = '1.18.24'
    okhttp_version = "4.9.3"

    junit_version = "4.13.2"
    mockito_core_version = '4.6.1'
}

dependencies {
    annotationProcessor("org.projectlombok:lombok:$lombok_version")

    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")

    implementation("com.squareup.retrofit2:retrofit:$retrofit_version") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation("com.squareup.retrofit2:converter-jackson:$retrofit_version") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    api("com.fasterxml.jackson.core:jackson-databind:$jackson_version")
    implementation("io.swagger.core.v3:swagger-annotations:$swagger_annotations_version")

    compileOnly("org.projectlombok:lombok:$lombok_version")

    testAnnotationProcessor("org.projectlombok:lombok:$lombok_version")
    testImplementation("junit:junit:$junit_version")
    testImplementation("org.mockito:mockito-core:$mockito_core_version")
    testImplementation("com.squareup.retrofit2:retrofit-mock:$retrofit_version")
    testCompileOnly("org.projectlombok:lombok:$lombok_version")
}
