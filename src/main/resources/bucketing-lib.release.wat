(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_f64 (func (param i32 i32 i32) (result f64)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $f64_i32_=>_f64 (func (param f64 i32) (result f64)))
 (type $i64_i64_i32_i64_i32_=>_i32 (func (param i64 i64 i32 i64 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (type $i32_i32_f64_=>_f64 (func (param i32 i32 f64) (result f64)))
 (type $i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Date.now" (func $~lib/bindings/dom/Date.now (result f64)))
 (import "env" "console.log" (func $~lib/bindings/dom/console.log (param i32)))
 (global $assembly/managers/platformDataManager/_platformData (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm (mut i32) (i32.const 0))
 (global $assembly/managers/configDataManager/_configData (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/assembly/JSON/NULL (mut i32) (i32.const 0))
 (global $~lib/date/_day (mut i32) (i32.const 0))
 (global $~lib/date/_month (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/assembly/JSON/_JSON.handler (mut i32) (i32.const 0))
 (global $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder (mut i32) (i32.const 0))
 (global $~lib/util/string/__fixmulShift (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 21616))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 39124))
 (memory $0 10000 50000)
 (data (i32.const 1036) "\1c")
 (data (i32.const 1048) "\01\00\00\00\06\00\00\00a\00n\00d")
 (data (i32.const 1068) "\1c")
 (data (i32.const 1080) "\01\00\00\00\04\00\00\00o\00r")
 (data (i32.const 1100) "\1c")
 (data (i32.const 1116) "\08\00\00\00 \04\00\00@\04")
 (data (i32.const 1132) ",")
 (data (i32.const 1144) "\03\00\00\00\10\00\00\00`\04\00\00`\04\00\00\08\00\00\00\02")
 (data (i32.const 1180) "\1c")
 (data (i32.const 1192) "\01\00\00\00\06\00\00\00a\00l\00l")
 (data (i32.const 1212) "\1c")
 (data (i32.const 1224) "\01\00\00\00\08\00\00\00u\00s\00e\00r")
 (data (i32.const 1244) "\1c")
 (data (i32.const 1256) "\01\00\00\00\n\00\00\00o\00p\00t\00I\00n")
 (data (i32.const 1276) "\1c")
 (data (i32.const 1292) "\0c\00\00\00\b0\04\00\00\d0\04\00\00\f0\04")
 (data (i32.const 1308) ",")
 (data (i32.const 1320) "\03\00\00\00\10\00\00\00\10\05\00\00\10\05\00\00\0c\00\00\00\03")
 (data (i32.const 1356) ",")
 (data (i32.const 1368) "\01\00\00\00\0e\00\00\00u\00s\00e\00r\00_\00i\00d")
 (data (i32.const 1404) "\1c")
 (data (i32.const 1416) "\01\00\00\00\n\00\00\00e\00m\00a\00i\00l")
 (data (i32.const 1436) "\1c")
 (data (i32.const 1448) "\01\00\00\00\04\00\00\00i\00p")
 (data (i32.const 1468) ",")
 (data (i32.const 1480) "\01\00\00\00\0e\00\00\00c\00o\00u\00n\00t\00r\00y")
 (data (i32.const 1516) ",")
 (data (i32.const 1528) "\01\00\00\00\10\00\00\00p\00l\00a\00t\00f\00o\00r\00m")
 (data (i32.const 1564) "<")
 (data (i32.const 1576) "\01\00\00\00\1e\00\00\00p\00l\00a\00t\00f\00o\00r\00m\00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 1628) ",")
 (data (i32.const 1640) "\01\00\00\00\14\00\00\00a\00p\00p\00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 1676) ",")
 (data (i32.const 1688) "\01\00\00\00\16\00\00\00d\00e\00v\00i\00c\00e\00M\00o\00d\00e\00l")
 (data (i32.const 1724) ",")
 (data (i32.const 1736) "\01\00\00\00\14\00\00\00c\00u\00s\00t\00o\00m\00D\00a\00t\00a")
 (data (i32.const 1772) "<")
 (data (i32.const 1788) "$\00\00\00`\05\00\00\90\05\00\00\b0\05\00\00\d0\05\00\00\00\06\00\000\06\00\00p\06\00\00\a0\06\00\00\d0\06")
 (data (i32.const 1836) ",")
 (data (i32.const 1848) "\03\00\00\00\10\00\00\00\00\07\00\00\00\07\00\00$\00\00\00\t")
 (data (i32.const 1884) "\1c")
 (data (i32.const 1896) "\01\00\00\00\02\00\00\00=")
 (data (i32.const 1916) "\1c")
 (data (i32.const 1928) "\01\00\00\00\04\00\00\00!\00=")
 (data (i32.const 1948) "\1c")
 (data (i32.const 1960) "\01\00\00\00\02\00\00\00>")
 (data (i32.const 1980) "\1c")
 (data (i32.const 1992) "\01\00\00\00\04\00\00\00>\00=")
 (data (i32.const 2012) "\1c")
 (data (i32.const 2024) "\01\00\00\00\02\00\00\00<")
 (data (i32.const 2044) "\1c")
 (data (i32.const 2056) "\01\00\00\00\04\00\00\00<\00=")
 (data (i32.const 2076) "\1c")
 (data (i32.const 2088) "\01\00\00\00\n\00\00\00e\00x\00i\00s\00t")
 (data (i32.const 2108) "\1c")
 (data (i32.const 2120) "\01\00\00\00\0c\00\00\00!\00e\00x\00i\00s\00t")
 (data (i32.const 2140) ",")
 (data (i32.const 2152) "\01\00\00\00\0e\00\00\00c\00o\00n\00t\00a\00i\00n")
 (data (i32.const 2188) ",")
 (data (i32.const 2200) "\01\00\00\00\10\00\00\00!\00c\00o\00n\00t\00a\00i\00n")
 (data (i32.const 2236) "<")
 (data (i32.const 2252) "(\00\00\00p\07\00\00\90\07\00\00\b0\07\00\00\d0\07\00\00\f0\07\00\00\10\08\00\000\08\00\00P\08\00\00p\08\00\00\a0\08")
 (data (i32.const 2300) ",")
 (data (i32.const 2312) "\03\00\00\00\10\00\00\00\d0\08\00\00\d0\08\00\00(\00\00\00\n")
 (data (i32.const 2348) "\1c")
 (data (i32.const 2360) "\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g")
 (data (i32.const 2380) ",")
 (data (i32.const 2392) "\01\00\00\00\0e\00\00\00B\00o\00o\00l\00e\00a\00n")
 (data (i32.const 2428) "\1c")
 (data (i32.const 2440) "\01\00\00\00\0c\00\00\00N\00u\00m\00b\00e\00r")
 (data (i32.const 2460) "\1c")
 (data (i32.const 2476) "\0c\00\00\00@\t\00\00`\t\00\00\90\t")
 (data (i32.const 2492) ",")
 (data (i32.const 2504) "\03\00\00\00\10\00\00\00\b0\t\00\00\b0\t\00\00\0c\00\00\00\03")
 (data (i32.const 2540) "\1c")
 (data (i32.const 2556) "\08\00\00\00 \04\00\00@\04")
 (data (i32.const 2572) ",")
 (data (i32.const 2584) "\03\00\00\00\10\00\00\00\00\n\00\00\00\n\00\00\08\00\00\00\02")
 (data (i32.const 2620) ",")
 (data (i32.const 2632) "\01\00\00\00\10\00\00\00s\00c\00h\00e\00d\00u\00l\00e")
 (data (i32.const 2668) ",")
 (data (i32.const 2680) "\01\00\00\00\0e\00\00\00g\00r\00a\00d\00u\00a\00l")
 (data (i32.const 2716) ",")
 (data (i32.const 2728) "\01\00\00\00\0e\00\00\00s\00t\00e\00p\00p\00e\00d")
 (data (i32.const 2764) "\1c")
 (data (i32.const 2780) "\0c\00\00\00P\n\00\00\80\n\00\00\b0\n")
 (data (i32.const 2796) ",")
 (data (i32.const 2808) "\03\00\00\00\10\00\00\00\e0\n\00\00\e0\n\00\00\0c\00\00\00\03")
 (data (i32.const 2844) "\1c")
 (data (i32.const 2856) "\01\00\00\00\0c\00\00\00l\00i\00n\00e\00a\00r")
 (data (i32.const 2876) ",")
 (data (i32.const 2888) "\01\00\00\00\10\00\00\00d\00i\00s\00c\00r\00e\00t\00e")
 (data (i32.const 2924) "\1c")
 (data (i32.const 2940) "\08\00\00\000\0b\00\00P\0b")
 (data (i32.const 2956) ",")
 (data (i32.const 2968) "\03\00\00\00\10\00\00\00\80\0b\00\00\80\0b\00\00\08\00\00\00\02")
 (data (i32.const 3004) "\1c")
 (data (i32.const 3020) "\08\00\00\00p\07\00\00\90\07")
 (data (i32.const 3036) ",")
 (data (i32.const 3048) "\03\00\00\00\10\00\00\00\d0\0b\00\00\d0\0b\00\00\08\00\00\00\02")
 (data (i32.const 3084) ",")
 (data (i32.const 3096) "\01\00\00\00\0e\00\00\00r\00e\00l\00e\00a\00s\00e")
 (data (i32.const 3132) ",")
 (data (i32.const 3144) "\01\00\00\00\14\00\00\00e\00x\00p\00e\00r\00i\00m\00e\00n\00t")
 (data (i32.const 3180) ",")
 (data (i32.const 3192) "\01\00\00\00\14\00\00\00p\00e\00r\00m\00i\00s\00s\00i\00o\00n")
 (data (i32.const 3228) "\1c")
 (data (i32.const 3240) "\01\00\00\00\06\00\00\00o\00p\00s")
 (data (i32.const 3260) ",")
 (data (i32.const 3276) "\10\00\00\00 \0c\00\00P\0c\00\00\80\0c\00\00\b0\0c")
 (data (i32.const 3308) ",")
 (data (i32.const 3320) "\03\00\00\00\10\00\00\00\d0\0c\00\00\d0\0c\00\00\10\00\00\00\04")
 (data (i32.const 3356) "\1c")
 (data (i32.const 3368) "\01\00\00\00\08\00\00\00J\00S\00O\00N")
 (data (i32.const 3388) ",")
 (data (i32.const 3404) "\10\00\00\00@\t\00\00`\t\00\00\90\t\00\000\0d")
 (data (i32.const 3436) ",")
 (data (i32.const 3448) "\03\00\00\00\10\00\00\00P\0d\00\00P\0d\00\00\10\00\00\00\04")
 (data (i32.const 3484) "\1c")
 (data (i32.const 3496) "\01\00\00\00\02\00\00\00.")
 (data (i32.const 3516) "<")
 (data (i32.const 3528) "\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 3580) "<")
 (data (i32.const 3592) "\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 3708) "<")
 (data (i32.const 3720) "\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 3772) ",")
 (data (i32.const 3784) "\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 3852) "<")
 (data (i32.const 3864) "\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 3916) "\1c")
 (data (i32.const 3928) "\01")
 (data (i32.const 3948) ",")
 (data (i32.const 3960) "\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 3996) ",")
 (data (i32.const 4008) "\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 4044) ",")
 (data (i32.const 4056) "\01\00\00\00\1a\00\00\00i\00n\00v\00a\00l\00i\00d\00 \00t\00o\00k\00e\00n")
 (data (i32.const 4092) "|")
 (data (i32.const 4104) "\01\00\00\00f\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00p\00a\00r\00s\00e\00r\00.\00t\00s")
 (data (i32.const 4220) "|")
 (data (i32.const 4232) "\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data (i32.const 4348) ",")
 (data (i32.const 4360) "\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data (i32.const 4396) "l")
 (data (i32.const 4408) "\01\00\00\00N\00\00\00T\00h\00e\00 \00p\00r\00e\00c\00e\00d\00i\00n\00g\00 \00t\00o\00k\00e\00n\00 \00i\00s\00 \00n\00o\00t\00 \00q\00u\00a\00n\00t\00i\00f\00i\00a\00b\00l\00e")
 (data (i32.const 4508) "|")
 (data (i32.const 4520) "\01\00\00\00b\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00n\00o\00d\00e\00.\00t\00s")
 (data (i32.const 4636) "l")
 (data (i32.const 4648) "\01\00\00\00Z\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00r\00e\00g\00u\00l\00a\00r\00 \00e\00x\00p\00r\00e\00s\00s\00i\00o\00n\00:\00 \00N\00o\00t\00h\00i\00n\00g\00 \00t\00o\00 \00r\00e\00p\00e\00a\00t")
 (data (i32.const 4748) "L")
 (data (i32.const 4760) "\01\00\00\008\00\00\00U\00n\00t\00e\00r\00m\00i\00n\00a\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00l\00a\00s\00s")
 (data (i32.const 4828) "\1c")
 (data (i32.const 4840) "\01\00\00\00\02\00\00\00g")
 (data (i32.const 4860) "\1c")
 (data (i32.const 4872) "\01\00\00\00\02\00\00\00i")
 (data (i32.const 4892) "\1c")
 (data (i32.const 4904) "\01\00\00\00\02\00\00\00s")
 (data (i32.const 4924) "\1c")
 (data (i32.const 4936) "\01\00\00\00\02\00\00\00m")
 (data (i32.const 4956) "<")
 (data (i32.const 4968) "\01\00\00\00\1e\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l")
 (data (i32.const 5020) "l")
 (data (i32.const 5032) "\01\00\00\00X\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00r\00e\00g\00e\00x\00p\00.\00t\00s")
 (data (i32.const 5132) "<")
 (data (i32.const 5144) "\01\00\00\00\"\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00u\00p\00c\00a\00s\00t")
 (data (i32.const 5196) "|")
 (data (i32.const 5208) "\01\00\00\00f\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00p\00a\00r\00s\00e\00r\00/\00w\00a\00l\00k\00e\00r\00.\00t\00s")
 (data (i32.const 5324) "\\")
 (data (i32.const 5336) "\01\00\00\00D\00\00\00C\00a\00n\00n\00o\00t\00 \00h\00a\00n\00d\00l\00e\00 \00r\00a\00n\00g\00e\00 \00q\00u\00a\00n\00t\00i\00f\00i\00e\00r\00s\00 \00>\00 ")
 (data (i32.const 5420) "|")
 (data (i32.const 5432) "\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data (i32.const 5548) "<")
 (data (i32.const 5560) "\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data (i32.const 5612) "\1c")
 (data (i32.const 5624) "\01\00\00\00\02\00\00\000")
 (data (i32.const
 (data (i32.const 6044) "\1c\04")
 (data (i32.const 6056) "\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data (i32.const 7100) "\\")
 (data (i32.const 7112) "\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 7196) "l")
 (data (i32.const 7208) "\01\00\00\00T\00\00\00r\00e\00p\00l\00a\00c\00e\00 \00n\00o\00t\00 \00i\00m\00p\00l\00e\00m\00e\00n\00t\00e\00d\00 \00f\00o\00r\00 \00t\00h\00i\00s\00 \00n\00o\00d\00e\00 \00t\00y\00p\00e")
 (data (i32.const 7308) "\1c")
 (data (i32.const 7320) "\"\00\00\00\08\00\00\00\01")
 (data (i32.const 7340) "\1c")
 (data (i32.const 7372) "l")
 (data (i32.const 7384) "\01\00\00\00Z\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00f\00a\00/\00n\00f\00a\00.\00t\00s")
 (data (i32.const 7484) "L")
 (data (i32.const 7496) "\01\00\00\002\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00q\00u\00a\00n\00t\00i\00f\00i\00e\00r\00 \00-\00 ")
 (data (i32.const 7564) "|")
 (data (i32.const 7576) "\01\00\00\00b\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00r\00e\00g\00e\00x\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00n\00f\00a\00/\00m\00a\00t\00c\00h\00e\00r\00.\00t\00s")
 (data (i32.const 7692) "l")
 (data (i32.const 7704) "\01\00\00\00T\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00n\00o\00d\00e\00 \00t\00y\00p\00e\00 \00w\00i\00t\00h\00i\00n\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00s\00e\00t")
 (data (i32.const 7804) "\1c")
 (data (i32.const 7816) "-\00\00\00\08\00\00\00\02")
 (data (i32.const 7836) "<")
 (data (i32.const 7848) "\01\00\00\00,\00\00\00u\00n\00-\00r\00e\00c\00o\00g\00n\00i\00s\00e\00d\00 \00A\00S\00T\00 \00n\00o\00d\00e")
 (data (i32.const 7900) "\1c")
 (data (i32.const 7912) "1\00\00\00\08\00\00\00\03")
 (data (i32.const 7932) "\1c")
 (data (i32.const 7964) ",")
 (data (i32.const 7976) "\01\00\00\00\1c\00\00\00^\00\\\00d\00+\00[\00A\00-\00Z\00a\00-\00z\00]\00*\00$")
 (data (i32.const 8012) "\1c")
 (data (i32.const 8024) "\01\00\00\00\n\00\00\00^\00\\\00d\00+\00$")
 (data (i32.const 8044) "\1c")
 (data (i32.const 8076) "\1c")
 (data (i32.const 8108) "\1c")
 (data (i32.const 8120) "4\00\00\00\08\00\00\00\04")
 (data (i32.const 8140) "\1c")
 (data (i32.const 8172) "\1c")
 (data (i32.const 8204) "\1c")
 (data (i32.const 8236) "\1c")
 (data (i32.const 8248) "6\00\00\00\08\00\00\00\05")
 (data (i32.const 8268) "\1c")
 (data (i32.const 8280) "6\00\00\00\08\00\00\00\06")
 (data (i32.const 8300) "\1c")
 (data (i32.const 8312) "7\00\00\00\08\00\00\00\07")
 (data (i32.const 8332) "<")
 (data (i32.const 8344) "\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data (i32.const 8396) "\1c")
 (data (i32.const 8408) "\01\00\00\00\04\00\00\00\\\00u")
 (data (i32.const 8428) "\1c")
 (data (i32.const 8460) "\1c")
 (data (i32.const 8472) "Y\00\00\00\08\00\00\00\08")
 (data (i32.const 8492) "<")
 (data (i32.const 8504) "\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 8556) ",")
 (data (i32.const 8568) "\01\00\00\00\10\00\00\00_\00r\00o\00l\00l\00o\00u\00t")
 (data (i32.const 8604) ",")
 (data (i32.const 8616) "\01\00\00\00\16\00\00\00r\00o\00l\00l\00o\00u\00t\00H\00a\00s\00h")
 (data (i32.const 8652) ",")
 (data (i32.const 8664) "\01\00\00\00\1a\00\00\00b\00u\00c\00k\00e\00t\00i\00n\00g\00H\00a\00s\00h")
 (data (i32.const 8700) "<")
 (data (i32.const 8712) "\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t")
 (data (i32.const 8764) ",")
 (data (i32.const 8776) "\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s")
 (data (i32.const 8812) "\1c")
 (data (i32.const 8824) "\01\00\00\00\02\00\00\00\"")
 (data (i32.const 8844) "\1c")
 (data (i32.const 8856) "\01\00\00\00\04\00\00\00\"\00:")
 (data (i32.const 8876) "\1c")
 (data (i32.const 8888) "\01\00\00\00\02\00\00\00{")
 (data (i32.const 8908) "\1c")
 (data (i32.const 8920) "\01\00\00\00\02\00\00\00,")
 (data (i32.const 8940) "\1c")
 (data (i32.const 8952) "\01\00\00\00\02\00\00\00}")
 (data (i32.const 8972) "L")
 (data (i32.const 8984) "\01\00\00\00.\00\00\00C\00o\00n\00f\00i\00g\00 \00d\00a\00t\00a\00 \00i\00s\00 \00n\00o\00t\00 \00s\00e\00t\00.")
 (data (i32.const 9052) "\\")
 (data (i32.const 9064) "\01\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00c\00o\00n\00f\00i\00g\00D\00a\00t\00a\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s")
 (data (i32.const 9148) ",")
 (data (i32.const 9160) "\01\00\00\00\18\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00D\00a\00t\00e")
 (data (i32.const 9196) ",")
 (data (i32.const 9208) "\01\00\00\00\18\00\00\00~\00l\00i\00b\00/\00d\00a\00t\00e\00.\00t\00s")
 (data (i32.const 9244) "L")
 (data (i32.const 9256) "\01\00\00\002\00\00\00P\00l\00a\00t\00f\00o\00r\00m\00 \00d\00a\00t\00a\00 \00i\00s\00 \00n\00o\00t\00 \00s\00e\00t\00.")
 (data (i32.const 9324) "l")
 (data (i32.const 9336) "\01\00\00\00P\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00m\00a\00n\00a\00g\00e\00r\00s\00/\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00M\00a\00n\00a\00g\00e\00r\00.\00t\00s")
 (data (i32.const 9436) "<")
 (data (i32.const 9448) "\01\00\00\00$\00\00\00U\00n\00p\00a\00i\00r\00e\00d\00 \00s\00u\00r\00r\00o\00g\00a\00t\00e")
 (data (i32.const 9500) ",")
 (data (i32.const 9512) "\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data (i32.const 9548) "l")
 (data (i32.const 9560) "\01\00\00\00X\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s")
 (data (i32.const 9660) "<")
 (data (i32.const 9672) "\01\00\00\00(\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d")
 (data (i32.const 9724) "l")
 (data (i32.const 9736) "\01\00\00\00R\00\00\00~\00l\00i\00b\00/\00a\00s\00s\00e\00m\00b\00l\00y\00s\00c\00r\00i\00p\00t\00-\00j\00s\00o\00n\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00J\00S\00O\00N\00.\00t\00s")
 (data (i32.const 9836) ",")
 (data (i32.const 9848) "\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'")
 (data (i32.const 9884) "L")
 (data (i32.const 9896) "\01\00\00\00:\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g")
 (data (i32.const 9964) "L")
 (data (i32.const 9976) "\01\00\00\008\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r")
 (data (i32.const 10044) "\1c")
 (data (i32.const 10056) "\01\00\00\00\02\00\00\00\\")
 (data (i32.const 10076) "\1c")
 (data (i32.const 10088) "\01\00\00\00\02\00\00\00/")
 (data (i32.const 10108) "\1c")
 (data (i32.const 10120) "\01\00\00\00\02\00\00\00b")
 (data (i32.const 10140) "\1c")
 (data (i32.const 10152) "\01\00\00\00\02\00\00\00\08")
 (data (i32.const 10172) "\1c")
 (data (i32.const 10184) "\01\00\00\00\02\00\00\00n")
 (data (i32.const 10204) "\1c")
 (data (i32.const 10216) "\01\00\00\00\02\00\00\00\n")
 (data (i32.const 10236) "\1c")
 (data (i32.const 10248) "\01\00\00\00\02\00\00\00r")
 (data (i32.const 10268) "\1c")
 (data (i32.const 10280) "\01\00\00\00\02\00\00\00\0d")
 (data (i32.const 10300) "\1c")
 (data (i32.const 10312) "\01\00\00\00\02\00\00\00t")
 (data (i32.const 10332) "\1c")
 (data (i32.const 10344) "\01\00\00\00\02\00\00\00\t")
 (data (i32.const 10364) "\1c")
 (data (i32.const 10376) "\01\00\00\00\02\00\00\00u")
 (data (i32.const 10396) "<")
 (data (i32.const 10408) "\01\00\00\00&\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t")
 (data (i32.const 10460) "L")
 (data (i32.const 10472) "\01\00\00\00<\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 ")
 (data (i32.const 10540) "\1c")
 (data (i32.const 10552) "\01\00\00\00\02\00\00\00:")
 (data (i32.const 10572) ",")
 (data (i32.const 10584) "\01\00\00\00\18\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'")
 (data (i32.const 10620) "L")
 (data (i32.const 10632) "\01\00\00\000\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t")
 (data (i32.const 10700) "\1c")
 (data (i32.const 10712) "\01\00\00\00\02\00\00\00[")
 (data (i32.const 10732) "\1c")
 (data (i32.const 10744) "\01\00\00\00\02\00\00\00]")
 (data (i32.const 10764) "L")
 (data (i32.const 10776) "\01\00\00\00.\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y")
 (data (i32.const 10844) "\1c")
 (data (i32.const 10856) "\01\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data (i32.const 10876) ",")
 (data (i32.const 10888) "\01\00\00\00\14\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'")
 (data (i32.const 10924) "\1c")
 (data (i32.const 10936) "\01\00\00\00\02\00\00\00\'")
 (data (i32.const 10956) "\1c")
 (data (i32.const 10968) "\01\00\00\00\08\00\00\00t\00r\00u\00e")
 (data (i32.const 10988) "\1c")
 (data (i32.const 11000) "\01\00\00\00\04\00\00\00-\000")
 (data (i32.const 11030) "\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA\00\00\00 _\a0\02B\00\00\00\e8vH7B\00\00\00\a2\94\1amB\00\00@\e5\9c0\a2B\00\00\90\1e\c4\bc\d6B\00\004&\f5k\0cC\00\80\e07y\c3AC\00\a0\d8\85W4vC\00\c8Ngm\c1\abC\00=\91`\e4X\e1C@\8c\b5x\1d\af\15DP\ef\e2\d6\e4\1aKD\92\d5M\06\cf\f0\80D")
 (data (i32.const 11212) "\1c")
 (data (i32.const 11224) "\01\00\00\00\08\00\00\00n\00u\00l\00l")
 (data (i32.const 11244) "<")
 (data (i32.const 11256) "\01\00\00\00\"\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N")
 (data (i32.const 11308) "l")
 (data (i32.const 11320) "\01\00\00\00N\00\00\00d\00v\00c\00U\00s\00e\00r\00F\00r\00o\00m\00J\00S\00O\00N\00S\00t\00r\00i\00n\00g\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 11420) "L")
 (data (i32.const 11432) "\01\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00d\00v\00c\00U\00s\00e\00r\00.\00t\00s")
 (data (i32.const 11500) "\\")
 (data (i32.const 11512) "\01\00\00\00>\00\00\00M\00i\00s\00s\00i\00n\00g\00 \00s\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 11596) ",")
 (data (i32.const 11608) "\01\00\00\00\10\00\00\00\"\00,\00 \00o\00b\00j\00:\00 ")
 (data (i32.const 11644) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00\00-\00\00\00\00\00\00`-\00\00\00\00\00\00`\0f")
 (data (i32.const 11692) "\\")
 (data (i32.const 11704) "\01\00\00\00>\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00h\00e\00l\00p\00e\00r\00s\00/\00j\00s\00o\00n\00H\00e\00l\00p\00e\00r\00s\00.\00t\00s")
 (data (i32.const 11788) "\1c")
 (data (i32.const 11800) "\01\00\00\00\08\00\00\00n\00a\00m\00e")
 (data (i32.const 11820) ",")
 (data (i32.const 11832) "\01\00\00\00\10\00\00\00l\00a\00n\00g\00u\00a\00g\00e")
 (data (i32.const 11868) ",")
 (data (i32.const 11880) "\01\00\00\00\10\00\00\00a\00p\00p\00B\00u\00i\00l\00d")
 (data (i32.const 11916) "<")
 (data (i32.const 11928) "\01\00\00\00,\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00n\00u\00m\00b\00e\00r\00 \00v\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 11980) ",")
 (data (i32.const 11992) "\01\00\00\00\18\00\00\00,\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 12028) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00\a0.\00\00\00\00\00\00\e0.\00\00\00\00\00\00\80\"")
 (data (i32.const 12076) "\8c")
 (data (i32.const 12088) "\01\00\00\00r\00\00\00D\00V\00C\00U\00s\00e\00r\00 \00c\00u\00s\00t\00o\00m\00D\00a\00t\00a\00 \00c\00a\00n\00\'\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00e\00s\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00s\00 \00o\00r\00 \00a\00r\00r\00a\00y\00s")
 (data (i32.const 12220) "<")
 (data (i32.const 12232) "\01\00\00\00\"\00\00\00p\00r\00i\00v\00a\00t\00e\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a")
 (data (i32.const 12284) "\9c")
 (data (i32.const 12296) "\01\00\00\00\80\00\00\00D\00V\00C\00U\00s\00e\00r\00 \00p\00r\00i\00v\00a\00t\00e\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00 \00c\00a\00n\00\'\00t\00 \00c\00o\00n\00t\00a\00i\00n\00 \00n\00e\00s\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00s\00 \00o\00r\00 \00a\00r\00r\00a\00y\00s")
 (data (i32.const 12444) "\1c")
 (data (i32.const 12476) "|")
 (data (i32.const 12488) "\01\00\00\00j\00\00\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00d\00a\00t\00a\00 ")
 (data (i32.const 12604) "\0c\01")
 (data (i32.const 12616) "\01\00\00\00\ee\00\00\00.\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00T\00o\00 \00l\00e\00v\00e\00r\00a\00g\00e\00 \00t\00h\00i\00s\00 \00n\00e\00w\00 \00f\00i\00l\00t\00e\00r\00 \00d\00e\00f\00i\00n\00i\00t\00i\00o\00n\00,\00 \00p\00l\00e\00a\00s\00e\00 \00u\00p\00d\00a\00t\00e\00 \00t\00o\00 \00t\00h\00e\00 \00l\00a\00t\00e\00s\00t\00 \00v\00e\00r\00s\00i\00o\00n\00 \00o\00f\00 \00t\00h\00e\00 \00D\00e\00v\00C\00y\00c\00l\00e\00 \00S\00D\00K\00.\00\n\00 \00 \00 \00 \00 \00 \00 \00 ")
 (data (i32.const 12876) "\1c\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\0c\00\00\00\d00\00\00\00\00\00\00P1")
 (data (i32.const 12908) "\\")
 (data (i32.const 12920) "\01\00\00\00D\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00/\00s\00e\00g\00m\00e\00n\00t\00a\00t\00i\00o\00n\00.\00t\00s")
 (data (i32.const 13004) "\8c")
 (data (i32.const 13016) "\01\00\00\00r\00\00\00\n\00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00 \00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00s\00u\00b\00T\00y\00p\00e\00:\00 ")
 (data (i32.const 13148) "\1c\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\0c\00\00\00\e02\00\00\00\00\00\00P1")
 (data (i32.const 13180) "\1c")
 (data (i32.const 13192) "s\00\00\00\08\00\00\00\t")
 (data (i32.const 13212) "\1c")
 (data (i32.const 13244) "\1c")
 (data (i32.const 13256) "t\00\00\00\08\00\00\00\n")
 (data (i32.const 13276) "\1c")
 (data (i32.const 13308) ",")
 (data (i32.const 13320) "\01\00\00\00\18\00\00\00[\00^\00(\00\\\00d\00|\00.\00|\00\\\00-\00)\00]")
 (data (i32.const 13356) "\1c")
 (data (i32.const 13368) "\01\00\00\00\06\00\00\00-\00.\00*")
 (data (i32.const 13388) "\1c")
 (data (i32.const 13420) "<")
 (data (i32.const 13432) "\01\00\00\00&\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00f\00i\00l\00t\00e\00r\00 \00d\00a\00t\00a")
 (data (i32.const 13484) "\1c")
 (data (i32.const 13496) "v\00\00\00\08\00\00\00\0b")
 (data (i32.const 13516) "\1c")
 (data (i32.const 13548) "\1c")
 (data (i32.const 13560) "x\00\00\00\08\00\00\00\0c")
 (data (i32.const 13580) "\1c")
 (data (i32.const 13612) "\1c")
 (data (i32.const 13644) "\1c")
 (data (i32.const 13676) "\1c")
 (data (i32.const 13688) "\01\00\00\00\08\00\00\00t\00y\00p\00e")
 (data (i32.const 13708) ",")
 (data (i32.const 13720) "\01\00\00\00\14\00\00\00p\00e\00r\00c\00e\00n\00t\00a\00g\00e")
 (data (i32.const 13756) "\1c")
 (data (i32.const 13768) "\01\00\00\00\08\00\00\00d\00a\00t\00e")
 (data (i32.const 13788) "\1c")
 (data (i32.const 13800) "\01\00\00\00\02\00\00\00-")
 (data (i32.const 13820) "\1c")
 (data (i32.const 13832) "\01\00\00\00\02\00\00\00+")
 (data (i32.const 13852) "\1c")
 (data (i32.const 13864) "\01\00\00\00\02\00\00\00T")
 (data (i32.const 13884) "\1c")
 (data (i32.const 13896) "\01\00\00\00\02\00\00\00Z")
 (data (i32.const 13916) "<")
 (data (i32.const 13928) "\01\00\00\00,\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 13980) ",")
 (data (i32.const 13992) "\01\00\00\00\16\00\00\00,\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 ")
 (data (i32.const 14028) "<")
 (data (i32.const 14040) "\01\00\00\00$\00\00\00,\00 \00m\00u\00s\00t\00 \00b\00e\00 \00o\00n\00e\00 \00o\00f\00:\00 ")
 (data (i32.const 14092) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\1c\00\00\00p6\00\00\00\00\00\00\b06\00\00\00\00\00\00\e06\00\00\00\00\00\00`\0f")
 (data (i32.const 14140) "\1c")
 (data (i32.const 14152) "\01\00\00\00\04\00\00\00,\00 ")
 (data (i32.const 14172) "\\")
 (data (i32.const 14184) "\01\00\00\00D\00\00\00[\00D\00e\00v\00C\00y\00c\00l\00e\00]\00 \00W\00a\00r\00n\00i\00n\00g\00:\00 \00S\00t\00r\00i\00n\00g\00 \00v\00a\00l\00u\00e\00:\00 ")
 (data (i32.const 14268) "\\")
 (data (i32.const 14280) "\01\00\00\00>\00\00\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00m\00a\00t\00c\00h\00 \00a\00 \00v\00a\00l\00i\00d\00 \00s\00t\00r\00i\00n\00g\00.")
 (data (i32.const 14364) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00p7\00\00\00\00\00\00\b06\00\00\00\00\00\00\d07")
 (data (i32.const 14412) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00\a0.\00\00\00\00\00\00\e0.\00\00\00\00\00\00\80\"")
 (data (i32.const 14460) "\1c")
 (data (i32.const 14472) "\01\00\00\00\06\00\00\000\00.\000")
 (data (i32.const 14492) "\1c")
 (data (i32.const 14504) "\01\00\00\00\06\00\00\00N\00a\00N")
 (data (i32.const 14524) ",")
 (data (i32.const 14536) "\01\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 14572) ",")
 (data (i32.const 14584) "\01\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 14680) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\0dXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 15376) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\0d\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 15552) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 15596) "\1c")
 (data (i32.const 15628) "\1c")
 (data (i32.const 15640) "\01\00\00\00\08\00\00\00d\00e\00s\00c")
 (data (i32.const 15660) "\1c")
 (data (i32.const 15672) "{\00\00\00\08\00\00\00\0d")
 (data (i32.const 15692) "\1c")
 (data (i32.const 15724) "\\")
 (data (i32.const 15736) "\01\00\00\00B\00\00\00F\00a\00i\00l\00e\00d\00 \00t\00o\00 \00d\00e\00c\00i\00d\00e\00 \00t\00a\00r\00g\00e\00t\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 15820) "\\")
 (data (i32.const 15832) "\01\00\00\00>\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00/\00b\00u\00c\00k\00e\00t\00i\00n\00g\00.\00t\00s")
 (data (i32.const 15916) "L")
 (data (i32.const 15928) "\01\00\00\004\00\00\00C\00o\00n\00f\00i\00g\00 \00m\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00t\00i\00o\00n\00:\00 ")
 (data (i32.const 15996) "L")
 (data (i32.const 16008) "\01\00\00\002\00\00\00C\00o\00n\00f\00i\00g\00 \00m\00i\00s\00s\00i\00n\00g\00 \00v\00a\00r\00i\00a\00b\00l\00e\00:\00 ")
 (data (i32.const 16076) "\1c")
 (data (i32.const 16108) ",")
 (data (i32.const 16120) "\01\00\00\00\0e\00\00\00p\00r\00o\00j\00e\00c\00t")
 (data (i32.const 16156) ",")
 (data (i32.const 16168) "\01\00\00\00\16\00\00\00e\00n\00v\00i\00r\00o\00n\00m\00e\00n\00t")
 (data (i32.const 16204) ",")
 (data (i32.const 16216) "\01\00\00\00\10\00\00\00f\00e\00a\00t\00u\00r\00e\00s")
 (data (i32.const 16252) "<")
 (data (i32.const 16264) "\01\00\00\00&\00\00\00f\00e\00a\00t\00u\00r\00e\00V\00a\00r\00i\00a\00t\00i\00o\00n\00M\00a\00p")
 (data (i32.const 16316) ",")
 (data (i32.const 16328) "\01\00\00\00\12\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00s")
 (data (i32.const 16364) "<")
 (data (i32.const 16376) "\01\00\00\00\"\00\00\00k\00n\00o\00w\00n\00V\00a\00r\00i\00a\00b\00l\00e\00K\00e\00y\00s")
 (data (i32.const 16428) "\\")
 (data (i32.const 16440) "\01\00\00\00>\00\00\00P\00l\00a\00t\00f\00o\00r\00m\00 \00d\00a\00t\00a\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 16524) "L")
 (data (i32.const 16536) "\01\00\00\00<\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00p\00l\00a\00t\00f\00o\00r\00m\00D\00a\00t\00a\00.\00t\00s")
 (data (i32.const 16604) ",")
 (data (i32.const 16616) "\01\00\00\00\0e\00\00\00s\00d\00k\00T\00y\00p\00e")
 (data (i32.const 16652) ",")
 (data (i32.const 16664) "\01\00\00\00\14\00\00\00s\00d\00k\00V\00e\00r\00s\00i\00o\00n")
 (data (i32.const 16700) "|")
 (data (i32.const 16712) "\01\00\00\00j\00\00\00g\00e\00n\00e\00r\00a\00t\00e\00B\00u\00c\00k\00e\00t\00e\00d\00C\00o\00n\00f\00i\00g\00 \00c\00o\00n\00f\00i\00g\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 16828) "L")
 (data (i32.const 16840) "\01\00\00\008\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00c\00o\00n\00f\00i\00g\00B\00o\00d\00y\00.\00t\00s")
 (data (i32.const 16908) "\1c")
 (data (i32.const 16920) "\01\00\00\00\06\00\00\00_\00i\00d")
 (data (i32.const 16940) "\1c")
 (data (i32.const 16952) "\01\00\00\00\06\00\00\00k\00e\00y")
 (data (i32.const 16972) "<")
 (data (i32.const 16984) "\01\00\00\00\1e\00\00\00a\000\00_\00o\00r\00g\00a\00n\00i\00z\00a\00t\00i\00o\00n")
 (data (i32.const 17036) ",")
 (data (i32.const 17048) "\01\00\00\00\10\00\00\00s\00e\00t\00t\00i\00n\00g\00s")
 (data (i32.const 17084) "L")
 (data (i32.const 17096) "\01\00\00\006\00\00\00O\00b\00j\00e\00c\00t\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 17164) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00\d0B\00\00\00\00\00\00`-\00\00\00\00\00\00`\0f")
 (data (i32.const 17212) "L")
 (data (i32.const 17224) "\01\00\00\004\00\00\00A\00r\00r\00a\00y\00 \00n\00o\00t\00 \00f\00o\00u\00n\00d\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 17292) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00PC\00\00\00\00\00\00`-\00\00\00\00\00\00`\0f")
 (data (i32.const 17340) ",")
 (data (i32.const 17352) "\01\00\00\00\14\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00s")
 (data (i32.const 17388) "\1c")
 (data (i32.const 17400) "\01\00\00\00\08\00\00\00_\00v\00a\00r")
 (data (i32.const 17420) "\1c")
 (data (i32.const 17432) "\01\00\00\00\n\00\00\00v\00a\00l\00u\00e")
 (data (i32.const 17452) "L")
 (data (i32.const 17464) "\01\00\00\000\00\00\00V\00a\00l\00u\00e\00 \00m\00i\00s\00s\00i\00n\00g\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 \00\"")
 (data (i32.const 17532) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00@D\00\00\00\00\00\00`-\00\00\00\00\00\00`\0f")
 (data (i32.const 17580) "L")
 (data (i32.const 17592) "\01\00\00\002\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00.\00t\00s")
 (data (i32.const 17660) "\1c")
 (data (i32.const 17672) "|\00\00\00\08\00\00\00\0e")
 (data (i32.const 17692) "\1c")
 (data (i32.const 17704) "}\00\00\00\08\00\00\00\0f")
 (data (i32.const 17724) ",")
 (data (i32.const 17736) "\01\00\00\00\1a\00\00\00p\00r\00e\00r\00e\00q\00u\00i\00s\00i\00t\00e\00s")
 (data (i32.const 17772) ",")
 (data (i32.const 17784) "\01\00\00\00\10\00\00\00_\00f\00e\00a\00t\00u\00r\00e")
 (data (i32.const 17820) ",")
 (data (i32.const 17832) "\01\00\00\00\14\00\00\00c\00o\00m\00p\00a\00r\00a\00t\00o\00r")
 (data (i32.const 17868) "\\")
 (data (i32.const 17880) "\01\00\00\00L\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00f\00e\00a\00t\00u\00r\00e\00C\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n\00.\00t\00s")
 (data (i32.const 17964) "\1c")
 (data (i32.const 17976) "~\00\00\00\08\00\00\00\10")
 (data (i32.const 17996) "<")
 (data (i32.const 18008) "\01\00\00\00 \00\00\00w\00i\00n\00n\00i\00n\00g\00V\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 18060) ",")
 (data (i32.const 18072) "\01\00\00\00\14\00\00\00_\00v\00a\00r\00i\00a\00t\00i\00o\00n")
 (data (i32.const 18108) ",")
 (data (i32.const 18120) "\01\00\00\00\12\00\00\00u\00p\00d\00a\00t\00e\00d\00A\00t")
 (data (i32.const 18156) ",")
 (data (i32.const 18168) "\01\00\00\00\0e\00\00\00t\00a\00r\00g\00e\00t\00s")
 (data (i32.const 18204) ",")
 (data (i32.const 18216) "\01\00\00\00\0e\00\00\00f\00i\00l\00t\00e\00r\00s")
 (data (i32.const 18252) "L")
 (data (i32.const 18264) "\01\00\00\000\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00t\00a\00r\00g\00e\00t\00.\00t\00s")
 (data (i32.const 18332) ",")
 (data (i32.const 18344) "\01\00\00\00\0e\00\00\00s\00u\00b\00T\00y\00p\00e")
 (data (i32.const 18380) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00p6\00\00\00\00\00\00\b06\00\00\00\00\00\00`\0f")
 (data (i32.const 18428) ",\00\00\00\03\00\00\00\00\00\00\00i\00\00\00\14\00\00\00p7\00\00\00\00\00\00\b06\00\00\00\00\00\00\d07")
 (data (i32.const 18476) ",")
 (data (i32.const 18488) "\01\00\00\00\0e\00\00\00d\00a\00t\00a\00K\00e\00y")
 (data (i32.const 18524) ",")
 (data (i32.const 18536) "\01\00\00\00\16\00\00\00d\00a\00t\00a\00K\00e\00y\00T\00y\00p\00e")
 (data (i32.const 18572) "\1c")
 (data (i32.const 18584) "\01\00\00\00\0c\00\00\00v\00a\00l\00u\00e\00s")
 (data (i32.const 18604) ",")
 (data (i32.const 18616) "\01\00\00\00\10\00\00\00o\00p\00e\00r\00a\00t\00o\00r")
 (data (i32.const 18652) "\1c")
 (data (i32.const 18664) "\7f\00\00\00\08\00\00\00\11")
 (data (i32.const 18684) "\1c")
 (data (i32.const 18696) "\7f\00\00\00\08\00\00\00\12")
 (data (i32.const 18716) ",")
 (data (i32.const 18728) "\01\00\00\00\12\00\00\00_\00a\00u\00d\00i\00e\00n\00c\00e")
 (data (i32.const 18764) ",")
 (data (i32.const 18776) "\01\00\00\00\0e\00\00\00r\00o\00l\00l\00o\00u\00t")
 (data (i32.const 18812) "<")
 (data (i32.const 18824) "\01\00\00\00\1e\00\00\00s\00t\00a\00r\00t\00P\00e\00r\00c\00e\00n\00t\00a\00g\00e")
 (data (i32.const 18876) ",")
 (data (i32.const 18888) "\01\00\00\00\12\00\00\00s\00t\00a\00r\00t\00D\00a\00t\00e")
 (data (i32.const 18924) "\1c")
 (data (i32.const 18936) "\01\00\00\00\0c\00\00\00s\00t\00a\00g\00e\00s")
 (data (i32.const 18956) "\1c")
 (data (i32.const 18968) "\80\00\00\00\08\00\00\00\13")
 (data (i32.const 18988) ",")
 (data (i32.const 19000) "\01\00\00\00\18\00\00\00d\00i\00s\00t\00r\00i\00b\00u\00t\00i\00o\00n")
 (data (i32.const 19036) "\1c")
 (data (i32.const 19048) "\81\00\00\00\08\00\00\00\14")
 (data (i32.const 19068) "\1c")
 (data (i32.const 19080) "\82\00\00\00\08\00\00\00\15")
 (data (i32.const 19100) ",")
 (data (i32.const 19112) "\01\00\00\00\1a\00\00\00c\00o\00n\00f\00i\00g\00u\00r\00a\00t\00i\00o\00n")
 (data (i32.const 19148) "\1c")
 (data (i32.const 19160) "\83\00\00\00\08\00\00\00\16")
 (data (i32.const 19180) "\1c")
 (data (i32.const 19192) "\84\00\00\00\08\00\00\00\17")
 (data (i32.const 19212) ",")
 (data (i32.const 19224) "\01\00\00\00\1c\00\00\00v\00a\00r\00i\00a\00b\00l\00e\00H\00a\00s\00h\00e\00s")
 (data (i32.const 19260) "l")
 (data (i32.const 19272) "\01\00\00\00X\00\00\00U\00n\00a\00b\00l\00e\00 \00t\00o\00 \00g\00e\00t\00 \00v\00a\00r\00i\00a\00b\00l\00e\00H\00a\00s\00h\00e\00s\00 \00v\00a\00l\00u\00e\00 \00f\00o\00r\00 \00k\00e\00y\00:\00 ")
 (data (i32.const 19372) "\8c")
 (data (i32.const 19384) "\01\00\00\00x\00\00\00c\00h\00e\00c\00k\00N\00u\00m\00b\00e\00r\00s\00F\00i\00l\00t\00e\00r\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 19516) "<")
 (data (i32.const 19528) "\01\00\00\00 \00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00e\00s\00t\00.\00t\00s")
 (data (i32.const 19580) "\8c")
 (data (i32.const 19592) "\01\00\00\00z\00\00\00c\00h\00e\00c\00k\00V\00e\00r\00s\00i\00o\00n\00F\00i\00l\00t\00e\00r\00s\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 19724) "\8c")
 (data (i32.const 19736) "\01\00\00\00r\00\00\00c\00h\00e\00c\00k\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00F\00r\00o\00m\00J\00S\00O\00N\00 \00f\00i\00l\00t\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 19868) "|")
 (data (i32.const 19880) "\01\00\00\00h\00\00\00c\00h\00e\00c\00k\00C\00u\00s\00t\00o\00m\00D\00a\00t\00a\00F\00r\00o\00m\00J\00S\00O\00N\00 \00d\00a\00t\00a\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 19996) "\ac")
 (data (i32.const 20008) "\01\00\00\00\8e\00\00\00e\00v\00a\00l\00u\00a\00t\00e\00O\00p\00e\00r\00a\00t\00o\00r\00F\00r\00o\00m\00J\00S\00O\00N\00 \00o\00p\00e\00r\00a\00t\00o\00r\00S\00t\00r\00 \00o\00r\00 \00u\00s\00e\00r\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 20172) "\9c")
 (data (i32.const 20184) "\01\00\00\00~\00\00\00d\00e\00c\00i\00d\00e\00T\00a\00r\00g\00e\00t\00V\00a\00r\00i\00a\00t\00i\00o\00n\00F\00r\00o\00m\00J\00S\00O\00N\00 \00t\00a\00r\00g\00e\00t\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 20332) "\8c")
 (data (i32.const 20344) "\01\00\00\00|\00\00\00d\00o\00e\00s\00U\00s\00e\00r\00P\00a\00s\00s\00R\00o\00l\00l\00o\00u\00t\00F\00r\00o\00m\00J\00S\00O\00N\00 \00r\00o\00l\00l\00o\00u\00t\00S\00t\00r\00 \00p\00a\00r\00a\00m\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 20476) ",")
 (data (i32.const 20488) "\01\00\00\00\16\00\00\00c\00r\00e\00a\00t\00e\00d\00D\00a\00t\00e")
 (data (i32.const 20524) ",")
 (data (i32.const 20536) "\01\00\00\00\18\00\00\00l\00a\00s\00t\00S\00e\00e\00n\00D\00a\00t\00e")
 (data (i32.const 20572) "|")
 (data (i32.const 20584) "\01\00\00\00d\00\00\00b\00u\00c\00k\00e\00t\00e\00d\00U\00s\00e\00r\00C\00o\00n\00f\00i\00g\00F\00r\00o\00m\00J\00S\00O\00N\00S\00t\00r\00i\00n\00g\00 \00n\00o\00t\00 \00a\00 \00J\00S\00O\00N\00 \00O\00b\00j\00e\00c\00t")
 (data (i32.const 20700) "\\")
 (data (i32.const 20712) "\01\00\00\00H\00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00t\00y\00p\00e\00s\00/\00b\00u\00c\00k\00e\00t\00e\00d\00U\00s\00e\00r\00C\00o\00n\00f\00i\00g\00.\00t\00s")
 (data (i32.const 20796) ",")
 (data (i32.const 20808) "\01\00\00\00\1a\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00N\00a\00m\00e")
 (data (i32.const 20844) ",")
 (data (i32.const 20856) "\01\00\00\00\18\00\00\00v\00a\00r\00i\00a\00t\00i\00o\00n\00K\00e\00y")
 (data (i32.const 20892) ",")
 (data (i32.const 20904) "\01\00\00\00\14\00\00\00e\00v\00a\00l\00R\00e\00a\00s\00o\00n")
 (data (i32.const 20940) "\1c")
 (data (i32.const 20952) "\89\00\00\00\08\00\00\00\18")
 (data (i32.const 20972) "\1c")
 (data (i32.const 21004) "<")
 (data (i32.const 21016) "\01\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 21068) "<")
 (data (i32.const 21080) "\01\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d")
 (data (i32.const 21132) "\1c")
 (data (i32.const 21144) "\8a\00\00\00\08\00\00\00\19")
 (data (i32.const 21164) "\1c")
 (data (i32.const 21176) "\8a\00\00\00\08\00\00\00\1a")
 (data (i32.const 21196) "L")
 (data (i32.const 21208) "\01\00\00\00<\00\00\00u\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00 \00c\00l\00a\00s\00s\00 \00-\00 ")
 (data (i32.const 21276) "\1c")
 (data (i32.const 21288) "\01\00\00\00\04\00\00\00\\\00\"")
 (data (i32.const 21308) "\1c")
 (data (i32.const 21320) "\01\00\00\00\04\00\00\00\\\00\\")
 (data (i32.const 21340) "\1c")
 (data (i32.const 21352) "\01\00\00\00\04\00\00\00\\\00b")
 (data (i32.const 21372) "\1c")
 (data (i32.const 21384) "\01\00\00\00\04\00\00\00\\\00n")
 (data (i32.const 21404) "\1c")
 (data (i32.const 21416) "\01\00\00\00\04\00\00\00\\\00r")
 (data (i32.const 21436) "\1c")
 (data (i32.const 21448) "\01\00\00\00\04\00\00\00\\\00t")
 (data (i32.const 21468) "\1c")
 (data (i32.const 21480) "\01\00\00\00\04\00\00\00\\\00f")
 (data (i32.const 21500) "\1c")
 (data (i32.const 21512) "\01\00\00\00\0c\00\00\00\\\00u\000\000\000\00b")
 (data (i32.const 21532) "\1c")
 (data (i32.const 21544) "\8b\00\00\00\08\00\00\00\1b")
 (data (i32.const 21564) ",")
 (data (i32.const 21576) "\01\00\00\00\16\00\00\00f\00o\00r\00c\00e\00d\00U\00s\00e\00r\00s")
 (data (i32.const 21616) "\8c\00\00\00 \00\00\00\00\00\00\00 ")
 (data (i32.const 21644) "\02A")
 (data (i32.const 21656) "\05\00\00\00\00\00\00\00\06\00\00\00 \00\00\00\00\00\00\00\10A\82\00\00\00\00\00 \00\00\00\00\00\00\00\02\t")
 (data (i32.const 21708) " ")
 (data (i32.const 21732) "\02A")
 (data (i32.const 21744) "\0d\00\00\00\02A")
 (data (i32.const 21760) "\12\00\00\00 ")
 (data (i32.const 21788) "\02A")
 (data (i32.const 21800) "\12\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\12\00\00\00 ")
 (data (i32.const 21832) "\12\00\00\00 \00\00\00\12\00\00\00 \00\00\00\12\00\00\00 \00\00\00\12\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\12\00\00\00 \00\00\00\12")
 (data (i32.const 21908) " \00\00\00%\00\00\00 ")
 (data (i32.const 21928) "\0d\00\00\00\00\00\00\00%\00\00\00\02A")
 (data (i32.const 21952) "%\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00 \00\00\00%")
 (data (i32.const 21992) "\0d\00\00\00\00\00\00\00\0d\00\00\00\00\00\00\00\0d")
 (data (i32.const 22028) "\02\01")
 (data (i32.const 22044) "\02\1a")
 (data (i32.const 22080) "\06\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\06\00\00\00\02A\00\00\00\00\00\00\02A")
 (data (i32.const 22136) "\06\00\00\00\00\00\00\00\06\00\00\00\02A")
 (data (i32.const 22160) "\06\00\00\00 \00\00\00\00\00\00\00\10A\82")
 (data (i32.const 22184) "\06\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\06\00\00\00\02A\00\00\00\00\00\00\02A")
 (data (i32.const 22240) "\06\00\00\00\00\00\00\00\06\00\00\00\02A")
 (data (i32.const 22264) "\06\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A")
 (data (i32.const 22296) "\06\00\00\00\02A\00\00\00\00\00\00\10\n\82\00\00\00\00\00\10A\82\00\00\00\00\00 ")
 (data (i32.const 22340) "\01\t\00\00\02\00\00\00 \00\00\00\\\00\00\00 \00\00\00\06\00\00\00\00\00\00\00\06\00\00\00 ")
 (data (i32.const 22384) "\05\00\00\00 \00\00\00\06\00\00\00A\00\00\00\02\00\00\00\00\00\00\00c\00\00\00 ")
 (data (i32.const 22440) "\06\00\00\00 \00\00\00\06\00\00\00 \00\00\00\06\00\00\00\04A")
 (data (i32.const 22472) "\05\00\00\00\00\00\00\00\05\00\00\00\10A\82")
 (data (i32.const 22496) "\05\00\00\00\10A\82\00\00\00\00\00\02\n")
 (data (i32.const 22524) "\02A")
 (data (i32.const 22536) "I")
 (data (i32.const 22560) "r")
 (data (i32.const 22572) "B")
 (data (i32.const 22596) "\02A")
 (data (i32.const 22700) "\02A\00\00\00\00\00\00\02A")
 (table $0 28 28 funcref)
 (elem $0 (i32.const 1) $~lib/assemblyscript-regex/assembly/parser/walker/expandRepetitions $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode~anonymous|0 $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor~anonymous|0 $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 $start:assembly/bucketing/versionCompare~anonymous|0 $assembly/helpers/stringHelpers/unicodeEscape~anonymous|0 $assembly/bucketing/segmentation/getFilterValues~anonymous|0 $assembly/bucketing/segmentation/getFilterValuesAsStrings~anonymous|0 $assembly/bucketing/segmentation/getFilterValuesAsF64~anonymous|0 $assembly/bucketing/segmentation/getFilterValuesAsBoolean~anonymous|0 $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 $assembly/types/feature/Variation#constructor~anonymous|0 $assembly/types/feature/Feature#constructor~anonymous|0 $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|0 $assembly/types/target/AudienceFilterOrOperator#constructor~anonymous|0 $assembly/types/target/TopLevelOperator#constructor~anonymous|0 $assembly/types/target/Rollout#constructor~anonymous|0 $assembly/types/target/Target#constructor~anonymous|0 $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|1 $assembly/types/configBody/ConfigBody#constructor~anonymous|0 $assembly/types/configBody/ConfigBody#constructor~anonymous|1 $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 $~lib/assemblyscript-json/assembly/JSON/Arr#stringify~anonymous|0)
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "generateBoundedHashesFromJSON" (func $export:assembly/index/generateBoundedHashesFromJSON))
 (export "generateBucketedConfigForUser" (func $export:assembly/index/generateBucketedConfigForUser))
 (export "setPlatformData" (func $export:assembly/index/setPlatformData))
 (export "setConfigData" (func $export:assembly/index/setConfigData))
 (export "murmurhashV3" (func $export:assembly/helpers/murmurhash/murmurhashV3))
 (export "murmurhashV3_js" (func $export:assembly/helpers/murmurhash/murmurhashV3_js))
 (export "checkNumbersFilterFromJSON" (func $export:assembly/test/checkNumbersFilterFromJSON))
 (export "checkVersionFiltersFromJSON" (func $export:assembly/test/checkVersionFiltersFromJSON))
 (export "checkCustomDataFromJSON" (func $export:assembly/test/checkCustomDataFromJSON))
 (export "evaluateOperatorFromJSON" (func $export:assembly/test/evaluateOperatorFromJSON))
 (export "decideTargetVariationFromJSON" (func $export:assembly/test/decideTargetVariationFromJSON))
 (export "doesUserPassRolloutFromJSON" (func $export:assembly/test/doesUserPassRolloutFromJSON))
 (export "testConfigBodyClass" (func $export:assembly/test/testConfigBodyClass))
 (export "testDVCUserClass" (func $export:assembly/test/testDVCUserClass))
 (export "testBucketedUserConfigClass" (func $export:assembly/test/testBucketedUserConfigClass))
 (export "testSortObjectsByString" (func $export:assembly/test/testSortObjectsByString))
 (start $~start)
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  i32.const 3728
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3968
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4368
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 4240
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 8720
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3536
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 21024
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 21088
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 9168
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 9456
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6064
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 7120
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $assembly/managers/platformDataManager/_platformData
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $assembly/managers/configDataManager/_configData
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 10976
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 10864
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11232
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.handler
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-json/assembly/JSON/NULL
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 3456
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3328
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 3056
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1152
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1328
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1856
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2320
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2512
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2592
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2816
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2976
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 3600
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  i32.const -4
  i32.and
  local.tee $1
  i32.eqz
  if
   i32.const 0
   local.get $0
   i32.const 39124
   i32.lt_u
   local.get $0
   i32.load offset=8
   select
   i32.eqz
   if
    i32.const 0
    i32.const 3600
    i32.const 127
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.eqz
  if
   i32.const 0
   i32.const 3600
   i32.const 131
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 3600
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  global.get $~lib/rt/itcms/toSpace
  local.set $1
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $2
   i32.const 21616
   i32.load
   i32.gt_u
   if
    i32.const 3728
    i32.const 3792
    i32.const 22
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   i32.const 3
   i32.shl
   i32.const 21620
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $1
  i32.load offset=8
  local.set $2
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $1
  i32.or
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store offset=8
  local.get $2
  local.get $0
  local.get $2
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3872
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 3872
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3872
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $5
  local.get $1
  i32.load offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $3
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $3
   i32.const 4
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $5
   i32.store offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    local.get $2
    i32.store offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 3872
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3872
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $1
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 3872
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 3872
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 3872
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3872
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 3872
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load offset=1568
  local.tee $4
  if
   local.get $4
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 3872
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $4
    i32.load
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 3872
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $3
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $1
  i32.const 0
  i32.le_s
  if (result i32)
   i32.const 1
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 39136
  i32.const 0
  i32.store
  i32.const 40704
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 39136
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 39136
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 39136
  i32.const 40708
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 39136
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 39124
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load
   i32.const 1
   i32.and
  end
  if
   i32.const 0
   i32.const 3872
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  i32.store
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load offset=4
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 39124
      i32.lt_u
      if
       local.get $0
       i32.load
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $0
        i32.load offset=4
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 3600
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 39124
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     call $~lib/rt/tlsf/__free
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   i32.store offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 3872
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 3872
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 3536
   i32.const 3872
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $3
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   memory.size
   local.tee $1
   i32.const 4
   local.get $0
   i32.load offset=1568
   local.get $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   local.get $3
   i32.const 1
   i32.const 27
   local.get $3
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $3
   local.get $3
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $2
   local.get $1
   local.get $2
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $2
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 3872
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $3
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 3872
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load
  local.set $4
  local.get $3
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 3872
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const -4
  i32.and
  local.get $3
  i32.sub
  local.tee $2
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $3
   local.get $4
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $3
   i32.add
   local.tee $3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $4
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $0
   local.get $0
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
  local.get $1
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 3536
   i32.const 3600
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    local.get $2
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill
  local.get $1
 )
 (func $~lib/array/Array<~lib/string/String>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.tee $1
  i32.const 7
  i32.and
  local.get $2
  i32.const 7
  i32.and
  i32.or
  i32.eqz
  local.get $3
  i32.const 4
  i32.ge_u
  i32.and
  if
   loop $do-loop|0
    local.get $1
    i64.load
    local.get $2
    i64.load
    i64.eq
    if
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 8
     i32.add
     local.set $2
     local.get $3
     i32.const 4
     i32.sub
     local.tee $3
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $3
   local.tee $0
   i32.const 1
   i32.sub
   local.set $3
   local.get $0
   if
    local.get $1
    i32.load16_u
    local.tee $0
    local.get $2
    i32.load16_u
    local.tee $4
    i32.ne
    if
     local.get $0
     local.get $4
     i32.sub
     return
    end
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $2
    i32.const 2
    i32.add
    local.set $2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String#indexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $4
  i32.eqz
  if
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $4
  local.get $2
  local.get $4
  i32.lt_s
  select
  local.set $2
  local.get $4
  local.get $3
  i32.sub
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.le_s
   if
    local.get $0
    local.get $2
    local.get $1
    local.get $3
    call $~lib/util/string/compareImpl
    i32.eqz
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  local.tee $3
  i32.load
  i32.const -4
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $3
   local.get $1
   i32.store offset=16
   local.get $0
   return
  end
  local.get $1
  local.get $3
  i32.load offset=12
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $0
  local.get $1
  local.get $3
  i32.load offset=16
  local.tee $0
  local.get $0
  local.get $1
  i32.gt_u
  select
  memory.copy
  local.get $2
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 3968
    i32.const 4016
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 8
   local.get $1
   i32.const 8
   i32.gt_u
   select
   local.get $2
   i32.shl
   local.set $1
   local.get $3
   if
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    i32.const 1073741820
    local.get $2
    i32.const 1073741820
    i32.lt_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   local.get $0
   i32.load
   local.tee $5
   local.get $1
   call $~lib/rt/itcms/__renew
   local.tee $2
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   local.get $1
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<~lib/string/String>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $2
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  local.get $2
  i32.store offset=12
  local.get $2
 )
 (func $~lib/string/String.fromCharCode@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   local.set $1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 2
  local.get $1
  i32.const 0
  i32.gt_s
  local.tee $3
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store16
  local.get $3
  if
   local.get $2
   local.get $1
   i32.store16 offset=2
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $1
  i32.const 0
  local.get $0
  select
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/util/string/strtol<f64> (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  i32.eqz
  if
   f64.const nan:0x8000000000000
   return
  end
  local.get $0
  local.tee $3
  i32.load16_u
  local.set $0
  loop $while-continue|0
   block $__inlined_func$~lib/util/string/isSpace (result i32)
    local.get $0
    i32.const 128
    i32.or
    i32.const 160
    i32.eq
    local.get $0
    i32.const 9
    i32.sub
    i32.const 4
    i32.le_u
    i32.or
    local.get $0
    i32.const 5760
    i32.lt_u
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    i32.const 1
    local.get $0
    i32.const -8192
    i32.add
    i32.const 10
    i32.le_u
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    block $break|0
     block $case6|0
      local.get $0
      i32.const 5760
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8232
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8233
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8239
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 8287
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 12288
      i32.eq
      br_if $case6|0
      local.get $0
      i32.const 65279
      i32.eq
      br_if $case6|0
      br $break|0
     end
     i32.const 1
     br $__inlined_func$~lib/util/string/isSpace
    end
    i32.const 0
   end
   if
    local.get $3
    i32.const 2
    i32.add
    local.tee $3
    i32.load16_u
    local.set $0
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  f64.const 1
  local.set $4
  local.get $0
  i32.const 43
  i32.eq
  local.get $0
  i32.const 45
  i32.eq
  i32.or
  if
   local.get $2
   i32.const 1
   i32.sub
   local.tee $2
   i32.eqz
   if
    f64.const nan:0x8000000000000
    return
   end
   f64.const -1
   f64.const 1
   local.get $0
   i32.const 45
   i32.eq
   select
   local.set $4
   local.get $3
   i32.const 2
   i32.add
   local.tee $3
   i32.load16_u
   local.set $0
  end
  local.get $1
  if
   local.get $1
   i32.const 2
   i32.lt_s
   local.get $1
   i32.const 36
   i32.gt_s
   i32.or
   if
    f64.const nan:0x8000000000000
    return
   end
   local.get $1
   i32.const 16
   i32.eq
   if
    local.get $0
    i32.const 48
    i32.eq
    local.get $2
    i32.const 2
    i32.gt_s
    i32.and
    if (result i32)
     local.get $3
     i32.load16_u offset=2
     i32.const 32
     i32.or
     i32.const 120
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $3
     i32.const 4
     i32.add
     local.set $3
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
    end
   end
  else
   local.get $0
   i32.const 48
   i32.eq
   local.get $2
   i32.const 2
   i32.gt_s
   i32.and
   if
    block $break|1
     block $case2|1
      block $case1|1
       local.get $3
       i32.load16_u offset=2
       i32.const 32
       i32.or
       local.tee $0
       i32.const 98
       i32.ne
       if
        local.get $0
        i32.const 111
        i32.eq
        br_if $case1|1
        local.get $0
        i32.const 120
        i32.eq
        br_if $case2|1
        br $break|1
       end
       local.get $3
       i32.const 4
       i32.add
       local.set $3
       local.get $2
       i32.const 2
       i32.sub
       local.set $2
       i32.const 2
       local.set $1
       br $break|1
      end
      local.get $3
      i32.const 4
      i32.add
      local.set $3
      local.get $2
      i32.const 2
      i32.sub
      local.set $2
      i32.const 8
      local.set $1
      br $break|1
     end
     local.get $3
     i32.const 4
     i32.add
     local.set $3
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     i32.const 16
     local.set $1
    end
   end
   local.get $1
   i32.const 10
   local.get $1
   select
   local.set $1
  end
  local.get $2
  i32.const 1
  i32.sub
  local.set $6
  loop $while-continue|2
   block $while-break|2
    local.get $2
    local.tee $0
    i32.const 1
    i32.sub
    local.set $2
    local.get $0
    if
     local.get $3
     i32.load16_u
     local.tee $0
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if (result i32)
      local.get $0
      i32.const 48
      i32.sub
     else
      local.get $0
      i32.const 65
      i32.sub
      i32.const 25
      i32.le_u
      if (result i32)
       local.get $0
       i32.const 55
       i32.sub
      else
       local.get $0
       i32.const 87
       i32.sub
       local.get $0
       local.get $0
       i32.const 97
       i32.sub
       i32.const 25
       i32.le_u
       select
      end
     end
     local.tee $0
     local.get $1
     i32.ge_u
     if
      local.get $2
      local.get $6
      i32.eq
      if
       f64.const nan:0x8000000000000
       return
      end
      br $while-break|2
     end
     local.get $5
     local.get $1
     f64.convert_i32_s
     f64.mul
     local.get $0
     f64.convert_i32_u
     f64.add
     local.set $5
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.get $5
  f64.mul
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy (param $0 i32) (result i32)
  local.get $0
  i32.load
  i32.load
  i32.const 63
  i32.eq
  if
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   i32.const -1
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   drop
   i32.const 0
   return
  end
  i32.const 1
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter (param $0 i32) (result i32)
  (local $1 i32)
  block $folding-inner0
   local.get $0
   i32.load
   i32.load
   local.tee $1
   i32.const 92
   i32.eq
   if
    local.get $0
    i32.const 92
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    drop
    block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isSpecialCharacter (result i32)
     block $break|0
      block $case0|0
       local.get $0
       i32.load
       i32.load
       local.tee $1
       i32.const 36
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 40
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 41
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 42
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 43
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 46
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 63
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 92
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 91
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 93
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 94
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 124
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 123
       i32.eq
       br_if $case0|0
       local.get $1
       i32.const 125
       i32.eq
       br_if $case0|0
       br $break|0
      end
      i32.const 1
      br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isSpecialCharacter
     end
     i32.const 0
    end
    if
     i32.const 0
     global.set $~argumentsLength
     local.get $0
     i32.const -1
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
     drop
     local.get $1
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
     return
    else
     local.get $1
     i32.const 94
     i32.eq
     local.get $1
     i32.const 36
     i32.eq
     i32.or
     if
      br $folding-inner0
     else
      local.get $1
      i32.const 120
      i32.eq
      if
       local.get $0
       i32.const 120
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode
       return
      else
       local.get $1
       i32.const 117
       i32.eq
       if
        local.get $0
        i32.const 117
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode
        return
       else
        block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isCharacterClass (result i32)
         block $break|04
          block $case0|016
           local.get $1
           i32.const 100
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 68
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 46
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 119
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 87
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 115
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 83
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 116
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 114
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 110
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 118
           i32.eq
           br_if $case0|016
           local.get $1
           i32.const 102
           i32.eq
           br_if $case0|016
           br $break|04
          end
          i32.const 1
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/isCharacterClass
         end
         i32.const 0
        end
        i32.eqz
        br_if $folding-inner0
        i32.const 0
        global.set $~argumentsLength
        local.get $0
        i32.const -1
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
        call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
        return
       end
       unreachable
      end
      unreachable
     end
     unreachable
    end
    unreachable
   end
   local.get $1
   i32.const 94
   i32.eq
   local.get $1
   i32.const 36
   i32.eq
   i32.or
   if
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    i32.const -1
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor
    return
   end
   local.get $1
   i32.const 46
   i32.eq
   if
    local.get $0
    i32.const 46
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    drop
    i32.const 46
    call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
    return
   end
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   i32.const -1
   call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
   call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
   return
  end
  i32.const 0
  global.set $~argumentsLength
  local.get $0
  i32.const -1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load
  i32.const 1
  i32.eq
  if (result i32)
   local.get $1
   i32.const -1
   i32.eq
   local.get $1
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $1
      i32.const 29
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 4528
    i32.const 119
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   i32.eq
   i32.or
  else
   i32.const 0
  end
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 5644
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 5644
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 5644
   i32.add
   i32.load
   i32.store
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 5644
   i32.add
   i32.load
   i32.store
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16
  end
 )
 (func $~lib/number/I32#toString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  local.get $1
  i32.const 36
  i32.gt_s
  i32.or
  if
   i32.const 5440
   i32.const 5568
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  block $__inlined_func$~lib/util/number/itoa32
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 5632
    local.set $0
    br $__inlined_func$~lib/util/number/itoa32
   end
   i32.const 0
   local.get $0
   i32.sub
   local.get $0
   local.get $0
   i32.const 31
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $6
   select
   local.set $3
   local.get $1
   i32.const 10
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $3
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $3
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $3
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $3
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $3
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $3
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $3
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $1
    i32.const 1
    i32.shl
    local.get $6
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    local.get $0
    local.get $6
    i32.add
    local.get $3
    local.get $1
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $1
    i32.const 16
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 31
     local.get $3
     i32.clz
     i32.sub
     i32.const 2
     i32.shr_s
     i32.const 1
     i32.add
     local.tee $1
     i32.const 1
     i32.shl
     local.get $6
     i32.add
     i32.const 1
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store
     local.get $0
     local.get $6
     i32.add
     local.set $8
     local.get $3
     i64.extend_i32_u
     local.set $2
     loop $while-continue|0
      local.get $1
      i32.const 2
      i32.ge_u
      if
       local.get $8
       local.get $1
       i32.const 2
       i32.sub
       local.tee $1
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       i32.wrap_i64
       i32.const 255
       i32.and
       i32.const 2
       i32.shl
       i32.const 6064
       i32.add
       i32.load
       i32.store
       local.get $2
       i64.const 8
       i64.shr_u
       local.set $2
       br $while-continue|0
      end
     end
     local.get $1
     i32.const 1
     i32.and
     if
      local.get $8
      local.get $2
      i32.wrap_i64
      i32.const 6
      i32.shl
      i32.const 6064
      i32.add
      i32.load16_u
      i32.store16
     end
    else
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~lib/util/number/ulog_base (result i32)
      local.get $3
      i64.extend_i32_u
      local.tee $2
      local.set $4
      local.get $1
      i32.popcnt
      i32.const 1
      i32.eq
      if
       i32.const 63
       local.get $4
       i64.clz
       i32.wrap_i64
       i32.sub
       i32.const 31
       local.get $1
       i32.clz
       i32.sub
       i32.div_u
       i32.const 1
       i32.add
       br $__inlined_func$~lib/util/number/ulog_base
      end
      local.get $1
      i64.extend_i32_s
      local.tee $7
      local.set $5
      i32.const 1
      local.set $0
      loop $while-continue|00
       local.get $4
       local.get $5
       i64.ge_u
       if
        local.get $4
        local.get $5
        i64.div_u
        local.set $4
        local.get $5
        local.get $5
        i64.mul
        local.set $5
        local.get $0
        i32.const 1
        i32.shl
        local.set $0
        br $while-continue|00
       end
      end
      loop $while-continue|1
       local.get $4
       i64.const 0
       i64.ne
       if
        local.get $4
        local.get $7
        i64.div_u
        local.set $4
        local.get $0
        i32.const 1
        i32.add
        local.set $0
        br $while-continue|1
       end
      end
      local.get $0
      i32.const 1
      i32.sub
     end
     local.tee $3
     i32.const 1
     i32.shl
     local.get $6
     i32.add
     i32.const 1
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store
     local.get $0
     local.get $6
     i32.add
     local.set $8
     local.get $1
     i64.extend_i32_s
     local.set $4
     local.get $1
     local.get $1
     i32.const 1
     i32.sub
     i32.and
     if
      loop $do-loop|1
       local.get $8
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $2
       local.get $4
       i64.div_u
       local.tee $2
       local.get $4
       i64.mul
       i64.sub
       i32.wrap_i64
       i32.const 1
       i32.shl
       i32.const 7120
       i32.add
       i32.load16_u
       i32.store16
       local.get $2
       i64.const 0
       i64.ne
       br_if $do-loop|1
      end
     else
      local.get $1
      i32.ctz
      i32.const 7
      i32.and
      i64.extend_i32_s
      local.set $5
      local.get $4
      i64.const 1
      i64.sub
      local.set $4
      loop $do-loop|0
       local.get $8
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $4
       i64.and
       i32.wrap_i64
       i32.const 1
       i32.shl
       i32.const 7120
       i32.add
       i32.load16_u
       i32.store16
       local.get $2
       local.get $5
       i64.shr_u
       local.tee $2
       i64.const 0
       i64.ne
       br_if $do-loop|0
      end
     end
    end
   end
   local.get $6
   if
    local.get $0
    i32.const 45
    i32.store16
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 3728
    i32.const 4016
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $3
   i32.store offset=12
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/string/String>#__uset
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  local.set $0
  local.get $1
  i32.load8_u offset=1
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 9
  i32.const 36
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store8 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
  local.tee $0
  i32.store
  local.get $1
  if
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 32
   i32.or
   i32.store offset=4
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#intersection (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load
  f64.convert_i32_s
  local.get $1
  i32.load
  f64.convert_i32_s
  f64.max
  i32.trunc_sat_f64_s
  local.tee $2
  local.get $0
  i32.load offset=4
  f64.convert_i32_s
  local.get $1
  i32.load offset=4
  f64.convert_i32_s
  f64.min
  i32.trunc_sat_f64_s
  local.tee $0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $0
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
  else
   i32.const 0
  end
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  local.set $0
  local.get $1
  i32.load8_u offset=2
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 9
  i32.const 44
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store8 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $0
  i32.load8_u offset=16
  if (result i32)
   local.get $0
   i32.load offset=12
  else
   i32.const 3936
  end
  local.tee $1
  i32.store offset=12
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/util/string/strtol<f64>
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3728
   i32.const 4016
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
 )
 (func $assembly/helpers/stringHelpers/unicodeEscape~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   if (result i32)
    local.get $0
    i32.load16_u
   else
    i32.const -1
   end
   local.tee $1
   i32.const 127
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store
    local.get $0
    i32.const 0
    i32.store offset=8
    local.get $0
    i32.const 8416
    i32.store
    local.get $1
    i32.const 16
    call $~lib/number/I32#toString
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store
    local.get $1
    i32.const 0
    i32.store offset=8
    local.get $1
    i32.const 5
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.sub
    local.tee $1
    i32.const 0
    i32.gt_s
    if (result i32)
     local.get $1
     call $~lib/array/Array<~lib/string/String>#constructor
    else
     i32.const 0
     i32.const 2
     i32.const 3
     i32.const 8448
     call $~lib/rt/__newArray
    end
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 5632
    i32.store offset=8
    local.get $1
    i32.load offset=4
    local.get $1
    i32.load offset=12
    i32.const 5632
    call $~lib/util/string/joinStringArray
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=4
    local.get $1
    local.get $0
    call $~lib/string/String#concat
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    i32.const 8416
    local.get $0
    call $~lib/string/String#concat
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/typedarray/Int32Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 3728
   i32.const 8512
   i32.const 730
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value.Float (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 8
   i32.const 91
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 92
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
   end
   local.get $1
   local.get $0
   f64.store
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/hash/HASH<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  if (result i32)
   local.get $0
   local.tee $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $3
   i32.const 16
   i32.ge_u
   if (result i32)
    i32.const 606290984
    local.set $2
    i32.const -2048144777
    local.set $4
    i32.const 1640531535
    local.set $5
    local.get $1
    local.get $3
    i32.add
    i32.const 16
    i32.sub
    local.set $7
    loop $while-continue|0
     local.get $1
     local.get $7
     i32.le_u
     if
      local.get $2
      local.get $1
      i32.load
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $2
      local.get $4
      local.get $1
      i32.load offset=4
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $4
      local.get $6
      local.get $1
      i32.load offset=8
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $6
      local.get $5
      local.get $1
      i32.load offset=12
      i32.const -2048144777
      i32.mul
      i32.add
      i32.const 13
      i32.rotl
      i32.const -1640531535
      i32.mul
      local.set $5
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $3
    local.get $2
    i32.const 1
    i32.rotl
    local.get $4
    i32.const 7
    i32.rotl
    i32.add
    local.get $6
    i32.const 12
    i32.rotl
    i32.add
    local.get $5
    i32.const 18
    i32.rotl
    i32.add
    i32.add
   else
    local.get $3
    i32.const 374761393
    i32.add
   end
   local.set $2
   local.get $0
   local.get $3
   i32.add
   i32.const 4
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.le_u
    if
     local.get $2
     local.get $1
     i32.load
     i32.const -1028477379
     i32.mul
     i32.add
     i32.const 17
     i32.rotl
     i32.const 668265263
     i32.mul
     local.set $2
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   local.get $0
   local.get $3
   i32.add
   local.set $0
   loop $while-continue|2
    local.get $0
    local.get $1
    i32.gt_u
    if
     local.get $2
     local.get $1
     i32.load8_u
     i32.const 374761393
     i32.mul
     i32.add
     i32.const 11
     i32.rotl
     i32.const -1640531535
     i32.mul
     local.set $2
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|2
    end
   end
   local.get $2
   local.get $2
   i32.const 15
   i32.shr_u
   i32.xor
   i32.const -2048144777
   i32.mul
   local.tee $0
   i32.const 13
   i32.shr_u
   local.get $0
   i32.xor
   i32.const -1028477379
   i32.mul
   local.tee $0
   i32.const 16
   i32.shr_u
   local.get $0
   i32.xor
  else
   i32.const 0
  end
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
  local.tee $0
  i32.eqz
  if
   i32.const 8720
   i32.const 8784
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
 )
 (func $~lib/typedarray/Uint8Array#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.ge_u
  if
   i32.const 3728
   i32.const 8512
   i32.const 166
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace (param $0 i32)
  (local $1 i32)
  loop $while-continue|0
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
   local.tee $1
   i32.const 10
   i32.eq
   local.get $1
   i32.const 9
   i32.eq
   i32.or
   local.get $1
   i32.const 13
   i32.eq
   i32.or
   local.get $1
   i32.const 32
   i32.eq
   i32.or
   if
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    drop
    br $while-continue|0
   end
  end
 )
 (func $~lib/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $3
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   local.tee $2
   i32.const 0
   i32.store
   local.get $2
   local.get $0
   i32.load offset=8
   local.tee $0
   i32.store
   local.get $1
   local.get $0
   i32.load
   local.tee $2
   local.get $0
   i32.load offset=4
   local.get $2
   i32.sub
   i32.add
   i32.add
   local.set $2
   local.get $4
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $3
   i32.const 1
   i32.sub
   local.get $1
   i32.sub
   local.tee $0
   local.get $2
   i32.add
   local.tee $4
   local.get $2
   i32.lt_u
   if
    i32.const 0
    i32.const 9520
    i32.const 770
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   local.set $0
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.lt_u
    if
     block $while-break|0
      local.get $2
      i32.load8_u
      local.set $3
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      local.get $3
      i32.const 128
      i32.and
      if
       local.get $2
       local.get $4
       i32.eq
       br_if $while-break|0
       local.get $2
       i32.load8_u
       i32.const 63
       i32.and
       local.set $5
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       local.get $3
       i32.const 224
       i32.and
       i32.const 192
       i32.eq
       if
        local.get $0
        local.get $3
        i32.const 31
        i32.and
        i32.const 6
        i32.shl
        local.get $5
        i32.or
        i32.store16
       else
        local.get $2
        local.get $4
        i32.eq
        br_if $while-break|0
        local.get $2
        i32.load8_u
        i32.const 63
        i32.and
        local.set $6
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        local.get $3
        i32.const 240
        i32.and
        i32.const 224
        i32.eq
        if
         local.get $3
         i32.const 15
         i32.and
         i32.const 12
         i32.shl
         local.get $5
         i32.const 6
         i32.shl
         i32.or
         local.get $6
         i32.or
         local.set $3
        else
         local.get $2
         local.get $4
         i32.eq
         br_if $while-break|0
         local.get $2
         i32.load8_u
         i32.const 63
         i32.and
         local.get $3
         i32.const 7
         i32.and
         i32.const 18
         i32.shl
         local.get $5
         i32.const 12
         i32.shl
         i32.or
         local.get $6
         i32.const 6
         i32.shl
         i32.or
         i32.or
         local.set $3
         local.get $2
         i32.const 1
         i32.add
         local.set $2
        end
        local.get $3
        i32.const 65536
        i32.lt_u
        if
         local.get $0
         local.get $3
         i32.store16
        else
         local.get $0
         local.get $3
         i32.const 65536
         i32.sub
         local.tee $3
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         local.get $3
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $0
         i32.const 2
         i32.add
         local.set $0
        end
       end
      else
       local.get $0
       local.get $3
       i32.store16
      end
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      br $while-continue|0
     end
    end
   end
   local.get $1
   local.get $0
   local.get $1
   i32.sub
   call $~lib/rt/itcms/__renew
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.tee $1
  i32.const 48
  i32.sub
  local.tee $0
  i32.const 9
  i32.gt_s
  if
   local.get $1
   i32.const 55
   i32.sub
   local.tee $0
   i32.const 10
   i32.lt_s
   local.get $0
   i32.const 15
   i32.gt_s
   i32.or
   if
    local.get $1
    i32.const 87
    i32.sub
    local.set $0
   end
  end
  local.get $0
  i32.const 16
  i32.lt_s
  local.get $0
  i32.const 0
  i32.ge_s
  i32.and
  i32.eqz
  if
   i32.const 10416
   i32.const 9568
   i32.const 319
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value.String (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 102
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#setBoolean (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 1
   i32.const 103
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   local.get $4
   local.get $2
   i32.store8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store
   local.get $0
   local.get $1
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/math/ipow32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  i32.const 5
  local.set $1
  i32.const 1
  local.set $2
  local.get $0
  i32.const 0
  i32.le_s
  if
   local.get $0
   i32.eqz
   return
  else
   local.get $0
   i32.const 1
   i32.eq
   if
    i32.const 5
    return
   else
    local.get $0
    i32.const 2
    i32.eq
    if
     i32.const 25
     return
    else
     local.get $0
     i32.const 32
     i32.lt_s
     if
      block $break|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            i32.const 31
            local.get $0
            i32.clz
            i32.sub
            br_table $case4|0 $case3|0 $case2|0 $case1|0 $case0|0 $break|0
           end
           i32.const 5
           i32.const 1
           local.get $0
           i32.const 1
           i32.and
           select
           local.set $2
           local.get $0
           i32.const 1
           i32.shr_u
           local.set $0
           i32.const 25
           local.set $1
          end
          local.get $1
          local.get $2
          i32.mul
          local.get $2
          local.get $0
          i32.const 1
          i32.and
          select
          local.set $2
          local.get $0
          i32.const 1
          i32.shr_u
          local.set $0
          local.get $1
          local.get $1
          i32.mul
          local.set $1
         end
         local.get $1
         local.get $2
         i32.mul
         local.get $2
         local.get $0
         i32.const 1
         i32.and
         select
         local.set $2
         local.get $0
         i32.const 1
         i32.shr_u
         local.set $0
         local.get $1
         local.get $1
         i32.mul
         local.set $1
        end
        local.get $1
        local.get $2
        i32.mul
        local.get $2
        local.get $0
        i32.const 1
        i32.and
        select
        local.set $2
        local.get $0
        i32.const 1
        i32.shr_u
        local.set $0
        local.get $1
        local.get $1
        i32.mul
        local.set $1
       end
       local.get $1
       local.get $2
       i32.mul
       local.get $2
       local.get $0
       i32.const 1
       i32.and
       select
       local.set $2
      end
      local.get $2
      return
     end
    end
   end
  end
  loop $while-continue|1
   local.get $0
   if
    local.get $1
    local.get $2
    i32.mul
    local.get $2
    local.get $0
    i32.const 1
    i32.and
    select
    local.set $2
    local.get $0
    i32.const 1
    i32.shr_u
    local.set $0
    local.get $1
    local.get $1
    i32.mul
    local.set $1
    br $while-continue|1
   end
  end
  local.get $2
 )
 (func $~lib/math/NativeMath.scalbn (param $0 f64) (param $1 i32) (result f64)
  local.get $1
  i32.const 1023
  i32.gt_s
  if (result f64)
   local.get $0
   f64.const 8988465674311579538646525e283
   f64.mul
   local.set $0
   local.get $1
   i32.const 1023
   i32.sub
   local.tee $1
   i32.const 1023
   i32.gt_s
   if (result f64)
    local.get $1
    i32.const 1023
    i32.sub
    local.tee $1
    i32.const 1023
    local.get $1
    i32.const 1023
    i32.lt_s
    select
    local.set $1
    local.get $0
    f64.const 8988465674311579538646525e283
    f64.mul
   else
    local.get $0
   end
  else
   local.get $1
   i32.const -1022
   i32.lt_s
   if (result f64)
    local.get $0
    f64.const 2.004168360008973e-292
    f64.mul
    local.set $0
    local.get $1
    i32.const 969
    i32.add
    local.tee $1
    i32.const -1022
    i32.lt_s
    if (result f64)
     local.get $1
     i32.const 969
     i32.add
     local.tee $1
     i32.const -1022
     local.get $1
     i32.const -1022
     i32.gt_s
     select
     local.set $1
     local.get $0
     f64.const 2.004168360008973e-292
     f64.mul
    else
     local.get $0
    end
   else
    local.get $0
   end
  end
  local.get $1
  i64.extend_i32_s
  i64.const 1023
  i64.add
  i64.const 52
  i64.shl
  f64.reinterpret_i64
  f64.mul
 )
 (func $~lib/util/string/strtod (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 f64)
  (local $10 i32)
  (local $11 f64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  block $folding-inner0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $7
   i32.eqz
   br_if $folding-inner0
   local.get $0
   i32.load16_u
   local.set $5
   f64.const 1
   local.set $11
   loop $while-continue|0
    local.get $7
    if (result i32)
     block $__inlined_func$~lib/util/string/isSpace (result i32)
      local.get $5
      i32.const 128
      i32.or
      i32.const 160
      i32.eq
      local.get $5
      i32.const 9
      i32.sub
      i32.const 4
      i32.le_u
      i32.or
      local.get $5
      i32.const 5760
      i32.lt_u
      br_if $__inlined_func$~lib/util/string/isSpace
      drop
      i32.const 1
      local.get $5
      i32.const -8192
      i32.add
      i32.const 10
      i32.le_u
      br_if $__inlined_func$~lib/util/string/isSpace
      drop
      block $break|0
       block $case6|0
        local.get $5
        i32.const 5760
        i32.eq
        br_if $case6|0
        local.get $5
        i32.const 8232
        i32.eq
        br_if $case6|0
        local.get $5
        i32.const 8233
        i32.eq
        br_if $case6|0
        local.get $5
        i32.const 8239
        i32.eq
        br_if $case6|0
        local.get $5
        i32.const 8287
        i32.eq
        br_if $case6|0
        local.get $5
        i32.const 12288
        i32.eq
        br_if $case6|0
        local.get $5
        i32.const 65279
        i32.eq
        br_if $case6|0
        br $break|0
       end
       i32.const 1
       br $__inlined_func$~lib/util/string/isSpace
      end
      i32.const 0
     end
    else
     i32.const 0
    end
    if
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u
     local.set $5
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
     br $while-continue|0
    end
   end
   local.get $7
   i32.eqz
   br_if $folding-inner0
   local.get $5
   i32.const 45
   i32.eq
   if (result i32)
    local.get $7
    i32.const 1
    i32.sub
    local.tee $7
    i32.eqz
    br_if $folding-inner0
    f64.const -1
    local.set $11
    local.get $0
    i32.const 2
    i32.add
    local.tee $0
    i32.load16_u
   else
    local.get $5
    i32.const 43
    i32.eq
    if (result i32)
     local.get $7
     i32.const 1
     i32.sub
     local.tee $7
     i32.eqz
     br_if $folding-inner0
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u
    else
     local.get $5
    end
   end
   local.tee $5
   i32.const 73
   i32.eq
   local.get $7
   i32.const 8
   i32.ge_s
   i32.and
   if
    local.get $0
    i64.load
    i64.const 29555310648492105
    i64.eq
    if (result i32)
     local.get $0
     i64.load offset=8
     i64.const 34058970405077102
     i64.eq
    else
     i32.const 0
    end
    if
     local.get $11
     f64.const inf
     f64.mul
     return
    end
    br $folding-inner0
   end
   local.get $5
   i32.const 46
   i32.ne
   local.get $5
   i32.const 48
   i32.sub
   i32.const 10
   i32.ge_u
   i32.and
   br_if $folding-inner0
   local.get $0
   local.set $4
   loop $while-continue|1
    local.get $5
    i32.const 48
    i32.eq
    if
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u
     local.set $5
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
     br $while-continue|1
    end
   end
   local.get $7
   i32.const 0
   i32.le_s
   if
    f64.const 0
    return
   end
   local.get $5
   i32.const 46
   i32.eq
   if
    local.get $0
    local.get $4
    i32.eq
    local.set $4
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    i32.const 0
    local.get $4
    local.get $7
    i32.const 1
    i32.sub
    local.tee $7
    select
    br_if $folding-inner0
    i32.const 1
    local.set $10
    loop $for-loop|2
     local.get $0
     i32.load16_u
     local.tee $5
     i32.const 48
     i32.eq
     if
      local.get $7
      i32.const 1
      i32.sub
      local.set $7
      local.get $2
      i32.const 1
      i32.sub
      local.set $2
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      br $for-loop|2
     end
    end
    local.get $7
    i32.const 0
    i32.le_s
    if
     f64.const 0
     return
    end
    local.get $5
    i32.const 48
    i32.sub
    i32.const 10
    i32.ge_u
    i32.const 0
    i32.const 0
    local.get $4
    local.get $2
    select
    select
    br_if $folding-inner0
   end
   local.get $5
   i32.const 48
   i32.sub
   local.set $4
   loop $for-loop|3
    local.get $10
    i32.eqz
    local.get $5
    i32.const 46
    i32.eq
    i32.and
    local.get $4
    i32.const 10
    i32.lt_u
    i32.or
    if
     block $for-break3
      local.get $4
      i32.const 10
      i32.lt_u
      if
       local.get $1
       i32.const 19
       i32.lt_s
       if (result i64)
        local.get $4
        i64.extend_i32_u
        local.get $6
        i64.const 10
        i64.mul
        i64.add
       else
        local.get $6
        local.get $4
        i32.eqz
        i32.eqz
        i64.extend_i32_u
        i64.or
       end
       local.set $6
       local.get $1
       i32.const 1
       i32.add
       local.set $1
      else
       local.get $1
       local.set $2
       i32.const 1
       local.set $10
      end
      local.get $7
      i32.const 1
      i32.sub
      local.tee $7
      i32.eqz
      br_if $for-break3
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u
      local.tee $5
      i32.const 48
      i32.sub
      local.set $4
      br $for-loop|3
     end
    end
   end
   local.get $2
   local.get $1
   local.get $10
   select
   i32.const 19
   local.get $1
   local.get $1
   i32.const 19
   i32.gt_s
   select
   i32.sub
   local.set $10
   block $~lib/util/string/scientific|inlined.0
    local.get $6
    i64.eqz
    block $~lib/util/string/parseExp|inlined.0 (result i32)
     i32.const 1
     local.set $1
     i32.const 0
     local.get $0
     i32.load16_u
     i32.const 32
     i32.or
     i32.const 101
     i32.ne
     br_if $~lib/util/string/parseExp|inlined.0
     drop
     i32.const 0
     local.get $7
     i32.const 1
     i32.sub
     local.tee $4
     i32.eqz
     br_if $~lib/util/string/parseExp|inlined.0
     drop
     local.get $0
     i32.const 2
     i32.add
     local.tee $0
     i32.load16_u
     local.tee $2
     i32.const 45
     i32.eq
     if (result i32)
      i32.const 0
      local.get $4
      i32.const 1
      i32.sub
      local.tee $4
      i32.eqz
      br_if $~lib/util/string/parseExp|inlined.0
      drop
      i32.const -1
      local.set $1
      local.get $0
      i32.const 2
      i32.add
      local.tee $0
      i32.load16_u
     else
      local.get $2
      i32.const 43
      i32.eq
      if (result i32)
       i32.const 0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       i32.eqz
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u
      else
       local.get $2
      end
     end
     local.set $2
     loop $while-continue|4
      local.get $2
      i32.const 48
      i32.eq
      if
       i32.const 0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       i32.eqz
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u
       local.set $2
       br $while-continue|4
      end
     end
     local.get $2
     i32.const 48
     i32.sub
     local.set $5
     loop $for-loop|5
      local.get $5
      i32.const 10
      i32.lt_u
      i32.const 0
      local.get $4
      select
      if
       local.get $1
       i32.const 3200
       i32.mul
       local.get $3
       i32.const 3200
       i32.ge_s
       br_if $~lib/util/string/parseExp|inlined.0
       drop
       local.get $3
       i32.const 10
       i32.mul
       local.get $5
       i32.add
       local.set $3
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       local.get $0
       i32.const 2
       i32.add
       local.tee $0
       i32.load16_u
       i32.const 48
       i32.sub
       local.set $5
       br $for-loop|5
      end
     end
     local.get $1
     local.get $3
     i32.mul
    end
    local.get $10
    i32.add
    local.tee $0
    i32.const -342
    i32.lt_s
    i32.or
    br_if $~lib/util/string/scientific|inlined.0
    f64.const inf
    local.set $9
    local.get $0
    i32.const 308
    i32.gt_s
    br_if $~lib/util/string/scientific|inlined.0
    local.get $6
    f64.convert_i64_u
    local.set $9
    local.get $0
    i32.eqz
    br_if $~lib/util/string/scientific|inlined.0
    local.get $0
    i32.const 37
    i32.le_s
    local.get $0
    i32.const 22
    i32.gt_s
    i32.and
    if
     local.get $9
     local.get $0
     i32.const 3
     i32.shl
     i32.const 10848
     i32.add
     f64.load
     f64.mul
     local.set $9
     i32.const 22
     local.set $0
    end
    local.get $6
    i64.const 9007199254740991
    i64.le_u
    if (result i32)
     local.get $0
     i32.const 31
     i32.shr_s
     local.tee $1
     local.get $0
     local.get $1
     i32.add
     i32.xor
     i32.const 22
     i32.le_s
    else
     i32.const 0
    end
    if (result f64)
     local.get $0
     i32.const 0
     i32.gt_s
     if
      local.get $9
      local.get $0
      i32.const 3
      i32.shl
      i32.const 11024
      i32.add
      f64.load
      f64.mul
      local.set $9
      br $~lib/util/string/scientific|inlined.0
     end
     local.get $9
     i32.const 0
     local.get $0
     i32.sub
     i32.const 3
     i32.shl
     i32.const 11024
     i32.add
     f64.load
     f64.div
    else
     local.get $0
     i32.const 0
     i32.lt_s
     if (result f64)
      local.get $6
      local.get $6
      i64.clz
      local.tee $8
      i64.shl
      local.set $6
      local.get $0
      local.tee $1
      i64.extend_i32_s
      local.get $8
      i64.sub
      local.set $8
      loop $for-loop|6
       local.get $1
       i32.const -14
       i32.le_s
       if
        local.get $6
        i64.const 6103515625
        i64.rem_u
        local.get $6
        i64.const 6103515625
        i64.div_u
        local.tee $6
        i64.clz
        local.tee $12
        i64.const 18
        i64.sub
        i64.shl
        f64.convert_i64_u
        f64.const 0.00004294967296
        f64.mul
        f64.nearest
        i64.trunc_sat_f64_u
        local.get $6
        local.get $12
        i64.shl
        i64.add
        local.set $6
        local.get $8
        local.get $12
        i64.sub
        local.set $8
        local.get $1
        i32.const 14
        i32.add
        local.set $1
        br $for-loop|6
       end
      end
      local.get $6
      i32.const 0
      local.get $1
      i32.sub
      call $~lib/math/ipow32
      i64.extend_i32_s
      local.tee $13
      i64.div_u
      local.tee $14
      i64.clz
      local.set $12
      local.get $6
      local.get $13
      i64.rem_u
      f64.convert_i64_u
      i64.reinterpret_f64
      local.get $12
      i64.const 52
      i64.shl
      i64.add
      f64.reinterpret_i64
      local.get $13
      f64.convert_i64_u
      f64.div
      i64.trunc_sat_f64_u
      local.get $14
      local.get $12
      i64.shl
      i64.add
      f64.convert_i64_u
      local.get $8
      local.get $12
      i64.sub
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
     else
      local.get $6
      local.get $6
      i64.ctz
      local.tee $8
      i64.shr_u
      local.set $6
      local.get $8
      local.get $0
      local.tee $3
      i64.extend_i32_s
      i64.add
      global.set $~lib/util/string/__fixmulShift
      loop $for-loop|7
       local.get $3
       i32.const 13
       i32.ge_s
       if
        i64.const 32
        local.get $6
        i64.const 32
        i64.shr_u
        i64.const 1220703125
        i64.mul
        local.get $6
        i64.const 4294967295
        i64.and
        i64.const 1220703125
        i64.mul
        local.tee $6
        i64.const 32
        i64.shr_u
        i64.add
        local.tee $8
        i64.const 32
        i64.shr_u
        i32.wrap_i64
        i32.clz
        i64.extend_i32_u
        local.tee $12
        i64.sub
        local.tee $13
        global.get $~lib/util/string/__fixmulShift
        i64.add
        global.set $~lib/util/string/__fixmulShift
        local.get $6
        local.get $12
        i64.shl
        i64.const 31
        i64.shr_u
        i64.const 1
        i64.and
        local.get $8
        local.get $12
        i64.shl
        local.get $6
        i64.const 4294967295
        i64.and
        local.get $13
        i64.shr_u
        i64.or
        i64.add
        local.set $6
        local.get $3
        i32.const 13
        i32.sub
        local.set $3
        br $for-loop|7
       end
      end
      local.get $3
      call $~lib/math/ipow32
      i64.extend_i32_u
      local.tee $8
      local.get $6
      i64.const 4294967295
      i64.and
      i64.mul
      local.set $12
      i64.const 32
      local.get $6
      i64.const 32
      i64.shr_u
      local.get $8
      i64.mul
      local.get $12
      i64.const 32
      i64.shr_u
      i64.add
      local.tee $6
      i64.const 32
      i64.shr_u
      i32.wrap_i64
      i32.clz
      i64.extend_i32_u
      local.tee $8
      i64.sub
      local.tee $13
      global.get $~lib/util/string/__fixmulShift
      i64.add
      global.set $~lib/util/string/__fixmulShift
      local.get $12
      local.get $8
      i64.shl
      i64.const 31
      i64.shr_u
      i64.const 1
      i64.and
      local.get $6
      local.get $8
      i64.shl
      local.get $12
      i64.const 4294967295
      i64.and
      local.get $13
      i64.shr_u
      i64.or
      i64.add
      f64.convert_i64_u
      global.get $~lib/util/string/__fixmulShift
      i32.wrap_i64
      call $~lib/math/NativeMath.scalbn
     end
    end
    local.set $9
   end
   local.get $9
   local.get $11
   f64.copysign
   return
  end
  f64.const nan:0x8000000000000
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value.Integer (param $0 i64) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 104
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i64.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
  block $folding-inner0
   block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseObject (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
    local.set $1
    block $__inlined_func$~lib/string/String#charCodeAt (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8896
     i32.store
     i32.const -1
     i32.const 8892
     i32.load
     i32.const 1
     i32.shr_u
     i32.eqz
     br_if $__inlined_func$~lib/string/String#charCodeAt
     drop
     i32.const 8896
     i32.load16_u
    end
    local.get $1
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseObject
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
    i32.load
    local.tee $1
    i32.store offset=4
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
    local.tee $2
    i32.const 3936
    i32.store
    local.get $2
    i32.const 3936
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $2
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store
    local.get $2
    i32.const 0
    call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
    local.tee $2
    i32.store
    local.get $3
    local.get $1
    local.get $2
    call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.load
    local.tee $1
    i32.store offset=4
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/string/String>#push
    drop
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    drop
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
    i32.const 1
    local.set $1
    loop $while-continue|0
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $2
     block $__inlined_func$~lib/string/String#charCodeAt1 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 8960
      i32.store
      i32.const -1
      i32.const 8956
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt1
      drop
      i32.const 8960
      i32.load16_u
     end
     local.get $2
     i32.ne
     if
      local.get $1
      if
       i32.const 0
       local.set $1
      else
       local.get $0
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
       local.set $2
       block $__inlined_func$~lib/string/String#charCodeAt3 (result i32)
        global.get $~lib/memory/__stack_pointer
        i32.const 8928
        i32.store
        i32.const -1
        i32.const 8924
        i32.load
        i32.const 1
        i32.shr_u
        i32.eqz
        br_if $__inlined_func$~lib/string/String#charCodeAt3
        drop
        i32.const 8928
        i32.load16_u
       end
       local.get $2
       i32.ne
       if
        i32.const 9856
        i32.const 9568
        i32.const 190
        i32.const 11
        call $~lib/builtins/abort
        unreachable
       end
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      local.tee $2
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readString
      local.tee $3
      i32.store
      local.get $3
      if
       local.get $2
       local.get $3
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
      local.set $2
      block $__inlined_func$~lib/string/String#charCodeAt0 (result i32)
       global.get $~lib/memory/__stack_pointer
       i32.const 10560
       i32.store
       i32.const -1
       i32.const 10556
       i32.load
       i32.const 1
       i32.shr_u
       i32.eqz
       br_if $__inlined_func$~lib/string/String#charCodeAt0
       drop
       i32.const 10560
       i32.load16_u
      end
      local.get $2
      i32.ne
      if
       i32.const 10592
       i32.const 9568
       i32.const 207
       i32.const 5
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue
      drop
      br $while-continue|0
     end
    end
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.set $1
    block $__inlined_func$~lib/string/String#charCodeAt7 (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8960
     i32.store
     i32.const -1
     i32.const 8956
     i32.load
     i32.const 1
     i32.shr_u
     i32.eqz
     br_if $__inlined_func$~lib/string/String#charCodeAt7
     drop
     i32.const 8960
     i32.load16_u
    end
    local.get $1
    i32.ne
    if
     i32.const 10640
     i32.const 9568
     i32.const 197
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store
    local.get $1
    call $~lib/assemblyscript-json/assembly/JSON/Handler#popObject
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   local.tee $1
   i32.eqz
   if
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseArray (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     block $__inlined_func$~lib/string/String#charCodeAt10 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 10720
      i32.store
      i32.const -1
      i32.const 10716
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt10
      drop
      i32.const 10720
      i32.load16_u
     end
     local.get $1
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseArray
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     i32.load
     local.tee $1
     i32.store offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.tee $2
     i32.const 3936
     i32.store
     local.get $2
     i32.const 3936
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.load
     local.tee $3
     i32.store
     local.get $2
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store
     local.get $2
     call $~lib/assemblyscript-json/assembly/JSON/Arr#constructor
     local.tee $2
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $4
     i32.store offset=4
     local.get $4
     i32.load offset=12
     if
      local.get $3
      local.get $1
      local.get $2
      call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $1
     i32.store offset=4
     local.get $1
     local.get $2
     call $~lib/array/Array<~lib/string/String>#push
     drop
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
     drop
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
     i32.const 1
     local.set $1
     loop $while-continue|01
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
      local.set $2
      block $__inlined_func$~lib/string/String#charCodeAt14 (result i32)
       global.get $~lib/memory/__stack_pointer
       i32.const 10752
       i32.store
       i32.const -1
       i32.const 10748
       i32.load
       i32.const 1
       i32.shr_u
       i32.eqz
       br_if $__inlined_func$~lib/string/String#charCodeAt14
       drop
       i32.const 10752
       i32.load16_u
      end
      local.get $2
      i32.ne
      if
       local.get $1
       if
        i32.const 0
        local.set $1
       else
        local.get $0
        call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
        local.set $2
        block $__inlined_func$~lib/string/String#charCodeAt16 (result i32)
         global.get $~lib/memory/__stack_pointer
         i32.const 8928
         i32.store
         i32.const -1
         i32.const 8924
         i32.load
         i32.const 1
         i32.shr_u
         i32.eqz
         br_if $__inlined_func$~lib/string/String#charCodeAt16
         drop
         i32.const 8928
         i32.load16_u
        end
        local.get $2
        i32.ne
        if
         i32.const 9856
         i32.const 9568
         i32.const 224
         i32.const 11
         call $~lib/builtins/abort
         unreachable
        end
       end
       local.get $0
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue
       drop
       br $while-continue|01
      end
     end
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
     local.set $1
     block $__inlined_func$~lib/string/String#charCodeAt18 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 10752
      i32.store
      i32.const -1
      i32.const 10748
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt18
      drop
      i32.const 10752
      i32.load16_u
     end
     local.get $1
     i32.ne
     if
      i32.const 10784
      i32.const 9568
      i32.const 230
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     local.get $1
     call $~lib/assemblyscript-json/assembly/JSON/Handler#popObject
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
    end
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseString (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i64.const 0
     i64.store
     local.get $1
     i32.const 0
     i32.store offset=8
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     block $__inlined_func$~lib/string/String#charCodeAt21 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 8832
      i32.store
      i32.const -1
      i32.const 8828
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt21
      drop
      i32.const 8832
      i32.load16_u
     end
     local.get $1
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseString
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     i32.load
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=4
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readString
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i32.const 0
     i32.store
     local.get $4
     local.get $3
     call $~lib/assemblyscript-json/assembly/JSON/Value.String
     local.tee $3
     i32.store
     local.get $1
     local.get $2
     local.get $3
     call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
    end
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseBoolean (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     block $__inlined_func$~lib/string/String#charCodeAt25 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 10864
      i32.store
      i32.const -1
      i32.const 10860
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt25
      drop
      i32.const 10864
      i32.load16_u
     end
     local.get $1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 10864
      i32.store offset=4
      local.get $0
      i32.const 10864
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $1
      i32.store
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      i32.load
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $1
      local.get $2
      i32.const 0
      call $~lib/assemblyscript-json/assembly/JSON/Handler#setBoolean
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseBoolean
     end
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     block $__inlined_func$~lib/string/String#charCodeAt27 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 10976
      i32.store
      i32.const -1
      i32.const 10972
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt27
      drop
      i32.const 10976
      i32.load16_u
     end
     local.get $1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 10976
      i32.store offset=4
      local.get $0
      i32.const 10976
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $1
      i32.store
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      i32.load
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      local.get $1
      local.get $2
      i32.const 1
      call $~lib/assemblyscript-json/assembly/JSON/Handler#setBoolean
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseBoolean
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
    end
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNumber
    local.set $1
   end
   local.get $1
   i32.eqz
   if
    block $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNull (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i64.const 0
     i64.store
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     local.set $1
     block $__inlined_func$~lib/string/String#charCodeAt30 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 11232
      i32.store
      i32.const -1
      i32.const 11228
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt30
      drop
      i32.const 11232
      i32.load16_u
     end
     local.get $1
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 11232
      i32.store offset=4
      local.get $0
      i32.const 11232
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load
      local.tee $1
      i32.store
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      i32.load
      local.set $2
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i32.const 0
      i32.store
      local.get $3
      global.get $~lib/assemblyscript-json/assembly/JSON/NULL
      local.tee $3
      i32.store
      local.get $1
      local.get $2
      local.get $3
      call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
      br $__inlined_func$~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNull
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
    end
    local.set $1
   end
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#skipWhitespace
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/staticarray/StaticArray<~lib/string/String>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $~lib/array/Array<~lib/string/String>#includes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
   local.get $0
   i32.load offset=12
   local.tee $3
   i32.const 0
   i32.le_s
   i32.const 1
   local.get $3
   select
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    local.set $2
    br $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
   end
   local.get $0
   i32.load offset=4
   local.set $0
   loop $while-continue|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $4
     i32.store
     local.get $4
     local.get $1
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      br $__inlined_func$~lib/array/Array<~lib/string/String>#indexOf
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   local.set $2
  end
  local.get $2
  i32.const 0
  i32.ge_s
 )
 (func $assembly/bucketing/segmentation/getFilterValues~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $1
  if
   local.get $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  local.get $0
 )
 (func $assembly/bucketing/segmentation/getFilterValuesAsF64~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  local.get $1
  call $assembly/helpers/jsonHelpers/getF64FromJSONValue
  local.tee $4
  local.get $4
  f64.eq
  if
   local.get $0
   local.get $0
   i32.load offset=12
   local.tee $1
   i32.const 1
   i32.add
   local.tee $2
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   i32.load offset=4
   local.get $1
   i32.const 3
   i32.shl
   i32.add
   local.get $4
   f64.store
   local.get $0
   local.get $2
   i32.store offset=12
  end
  local.get $0
 )
 (func $assembly/bucketing/segmentation/checkNumbersFilterJSONValue (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  local.get $0
  call $assembly/helpers/jsonHelpers/getF64FromJSONValue
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   local.get $1
   i32.load offset=8
   local.tee $2
   i32.store
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store
   local.get $6
   i32.const 0
   i32.store offset=8
   local.get $6
   local.get $1
   call $assembly/bucketing/segmentation/getFilterValues
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13504
   i32.store offset=4
   i32.const 0
   i32.const 3
   i32.const 53
   i32.const 13536
   call $~lib/rt/__newArray
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store offset=8
   local.get $1
   i32.const 13504
   local.get $6
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>>
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store offset=4
   block $__inlined_func$assembly/bucketing/segmentation/_checkNumberFilter (result i32)
    i32.const 0
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.store
    local.get $2
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 2096
     i32.store
     local.get $2
     i32.const 2096
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      local.get $3
      f64.eq
      br $__inlined_func$assembly/bucketing/segmentation/_checkNumberFilter
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 2128
      i32.store
      local.get $2
      i32.const 2128
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $3
       local.get $3
       f64.ne
       br $__inlined_func$assembly/bucketing/segmentation/_checkNumberFilter
      end
     end
    end
    local.get $3
    local.get $3
    f64.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$assembly/bucketing/segmentation/_checkNumberFilter
    end
    loop $for-loop|0
     local.get $4
     local.get $1
     i32.load offset=12
     i32.lt_s
     if
      block $for-continue|0
       local.get $1
       local.get $4
       call $~lib/array/Array<f64>#__get
       local.tee $5
       local.get $5
       f64.ne
       br_if $for-continue|0
       global.get $~lib/memory/__stack_pointer
       i32.const 1904
       i32.store
       local.get $2
       i32.const 1904
       call $~lib/string/String.__eq
       if (result i32)
        local.get $3
        local.get $5
        f64.eq
       else
        global.get $~lib/memory/__stack_pointer
        i32.const 1936
        i32.store
        local.get $2
        i32.const 1936
        call $~lib/string/String.__eq
        if (result i32)
         local.get $3
         local.get $5
         f64.ne
        else
         global.get $~lib/memory/__stack_pointer
         i32.const 1968
         i32.store
         local.get $2
         i32.const 1968
         call $~lib/string/String.__eq
         if (result i32)
          local.get $3
          local.get $5
          f64.gt
         else
          global.get $~lib/memory/__stack_pointer
          i32.const 2000
          i32.store
          local.get $2
          i32.const 2000
          call $~lib/string/String.__eq
          if (result i32)
           local.get $3
           local.get $5
           f64.ge
          else
           global.get $~lib/memory/__stack_pointer
           i32.const 2032
           i32.store
           local.get $2
           i32.const 2032
           call $~lib/string/String.__eq
           if (result i32)
            local.get $3
            local.get $5
            f64.lt
           else
            global.get $~lib/memory/__stack_pointer
            i32.const 2064
            i32.store
            local.get $2
            i32.const 2064
            call $~lib/string/String.__eq
            i32.eqz
            br_if $for-continue|0
            local.get $3
            local.get $5
            f64.le
           end
          end
         end
        end
       end
       local.tee $0
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 1
        br $__inlined_func$assembly/bucketing/segmentation/_checkNumberFilter
       end
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/strtol<i32> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i32.load16_u
  local.set $2
  loop $while-continue|0
   block $__inlined_func$~lib/util/string/isSpace (result i32)
    local.get $2
    i32.const 128
    i32.or
    i32.const 160
    i32.eq
    local.get $2
    i32.const 9
    i32.sub
    i32.const 4
    i32.le_u
    i32.or
    local.get $2
    i32.const 5760
    i32.lt_u
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    i32.const 1
    local.get $2
    i32.const -8192
    i32.add
    i32.const 10
    i32.le_u
    br_if $__inlined_func$~lib/util/string/isSpace
    drop
    block $break|0
     block $case6|0
      local.get $2
      i32.const 5760
      i32.eq
      br_if $case6|0
      local.get $2
      i32.const 8232
      i32.eq
      br_if $case6|0
      local.get $2
      i32.const 8233
      i32.eq
      br_if $case6|0
      local.get $2
      i32.const 8239
      i32.eq
      br_if $case6|0
      local.get $2
      i32.const 8287
      i32.eq
      br_if $case6|0
      local.get $2
      i32.const 12288
      i32.eq
      br_if $case6|0
      local.get $2
      i32.const 65279
      i32.eq
      br_if $case6|0
      br $break|0
     end
     i32.const 1
     br $__inlined_func$~lib/util/string/isSpace
    end
    i32.const 0
   end
   if
    local.get $0
    i32.const 2
    i32.add
    local.tee $0
    i32.load16_u
    local.set $2
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $while-continue|0
   end
  end
  i32.const 1
  local.set $4
  local.get $2
  i32.const 43
  i32.eq
  local.get $2
  i32.const 45
  i32.eq
  i32.or
  if (result i32)
   local.get $1
   i32.const 1
   i32.sub
   local.tee $1
   i32.eqz
   if
    i32.const 0
    return
   end
   i32.const -1
   i32.const 1
   local.get $2
   i32.const 45
   i32.eq
   select
   local.set $4
   local.get $0
   i32.const 2
   i32.add
   local.tee $0
   i32.load16_u
  else
   local.get $2
  end
  i32.const 48
  i32.eq
  local.get $1
  i32.const 2
  i32.gt_s
  i32.and
  if
   block $break|1
    block $case2|1
     block $case1|1
      local.get $0
      i32.load16_u offset=2
      i32.const 32
      i32.or
      local.tee $2
      i32.const 98
      i32.ne
      if
       local.get $2
       i32.const 111
       i32.eq
       br_if $case1|1
       local.get $2
       i32.const 120
       i32.eq
       br_if $case2|1
       br $break|1
      end
      local.get $0
      i32.const 4
      i32.add
      local.set $0
      local.get $1
      i32.const 2
      i32.sub
      local.set $1
      i32.const 2
      local.set $3
      br $break|1
     end
     local.get $0
     i32.const 4
     i32.add
     local.set $0
     local.get $1
     i32.const 2
     i32.sub
     local.set $1
     i32.const 8
     local.set $3
     br $break|1
    end
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.sub
    local.set $1
    i32.const 16
    local.set $3
   end
  end
  local.get $3
  i32.const 10
  local.get $3
  select
  local.set $6
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  loop $while-continue|2
   block $while-break|2
    local.get $1
    local.tee $2
    i32.const 1
    i32.sub
    local.set $1
    local.get $2
    if
     local.get $6
     local.get $0
     i32.load16_u
     local.tee $2
     i32.const 48
     i32.sub
     i32.const 10
     i32.lt_u
     if (result i32)
      local.get $2
      i32.const 48
      i32.sub
     else
      local.get $2
      i32.const 65
      i32.sub
      i32.const 25
      i32.le_u
      if (result i32)
       local.get $2
       i32.const 55
       i32.sub
      else
       local.get $2
       i32.const 87
       i32.sub
       local.get $2
       local.get $2
       i32.const 97
       i32.sub
       i32.const 25
       i32.le_u
       select
      end
     end
     local.tee $2
     i32.le_u
     if
      local.get $1
      local.get $3
      i32.eq
      if
       i32.const 0
       return
      end
      br $while-break|2
     end
     local.get $5
     local.get $6
     i32.mul
     local.get $2
     i32.add
     local.set $5
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.get $5
  i32.mul
 )
 (func $~lib/util/number/genDigits (param $0 i64) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  local.get $1
  local.get $0
  i64.sub
  local.set $9
  i64.const 1
  i32.const 0
  local.get $2
  i32.sub
  local.tee $10
  i64.extend_i32_s
  local.tee $0
  i64.shl
  local.tee $11
  i64.const 1
  i64.sub
  local.tee $12
  local.get $1
  i64.and
  local.set $7
  local.get $1
  local.get $0
  i64.shr_u
  i32.wrap_i64
  local.tee $5
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $5
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $5
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $5
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $5
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $5
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $5
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $2
  loop $while-continue|0
   local.get $2
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $2
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $5
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $5
               i32.const 1000000000
               i32.rem_u
               local.set $5
               br $break|1
              end
              local.get $5
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $5
              i32.const 100000000
              i32.rem_u
              local.set $5
              br $break|1
             end
             local.get $5
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $5
             i32.const 10000000
             i32.rem_u
             local.set $5
             br $break|1
            end
            local.get $5
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $5
            i32.const 1000000
            i32.rem_u
            local.set $5
            br $break|1
           end
           local.get $5
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $5
           i32.const 100000
           i32.rem_u
           local.set $5
           br $break|1
          end
          local.get $5
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $5
          i32.const 10000
          i32.rem_u
          local.set $5
          br $break|1
         end
         local.get $5
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $5
         i32.const 1000
         i32.rem_u
         local.set $5
         br $break|1
        end
        local.get $5
        i32.const 100
        i32.div_u
        local.set $6
        local.get $5
        i32.const 100
        i32.rem_u
        local.set $5
        br $break|1
       end
       local.get $5
       i32.const 10
       i32.div_u
       local.set $6
       local.get $5
       i32.const 10
       i32.rem_u
       local.set $5
       br $break|1
      end
      local.get $5
      local.set $6
      i32.const 0
      local.set $5
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $4
    local.get $6
    i32.or
    if
     local.get $4
     local.tee $8
     i32.const 1
     i32.add
     local.set $4
     local.get $8
     i32.const 1
     i32.shl
     i32.const 14624
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $3
    local.get $5
    i64.extend_i32_u
    local.get $10
    i64.extend_i32_s
    i64.shl
    local.get $7
    i64.add
    local.tee $0
    i64.ge_u
    if
     global.get $~lib/util/number/_K
     local.get $2
     i32.add
     global.set $~lib/util/number/_K
     local.get $2
     i32.const 2
     i32.shl
     i32.const 15552
     i32.add
     i64.load32_u
     local.get $10
     i64.extend_i32_s
     i64.shl
     local.set $1
     local.get $4
     i32.const 1
     i32.shl
     i32.const 14622
     i32.add
     local.tee $5
     i32.load16_u
     local.set $2
     loop $while-continue|3
      local.get $0
      local.get $9
      i64.lt_u
      local.get $3
      local.get $0
      i64.sub
      local.get $1
      i64.ge_u
      i32.and
      if (result i32)
       local.get $9
       local.get $0
       i64.sub
       local.get $0
       local.get $1
       i64.add
       local.tee $7
       local.get $9
       i64.sub
       i64.gt_u
       local.get $7
       local.get $9
       i64.lt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $2
       i32.const 1
       i32.sub
       local.set $2
       local.get $0
       local.get $1
       i64.add
       local.set $0
       br $while-continue|3
      end
     end
     local.get $5
     local.get $2
     i32.store16
     local.get $4
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   local.get $3
   i64.const 10
   i64.mul
   local.set $3
   local.get $7
   i64.const 10
   i64.mul
   local.tee $0
   local.get $10
   i64.extend_i32_s
   i64.shr_u
   local.tee $1
   local.get $4
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $4
    local.tee $5
    i32.const 1
    i32.add
    local.set $4
    local.get $5
    i32.const 1
    i32.shl
    i32.const 14624
    i32.add
    local.get $1
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16
   end
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   local.get $0
   local.get $12
   i64.and
   local.tee $7
   local.get $3
   i64.ge_u
   br_if $while-continue|4
  end
  global.get $~lib/util/number/_K
  local.get $2
  i32.add
  global.set $~lib/util/number/_K
  local.get $7
  local.set $0
  local.get $9
  i32.const 0
  local.get $2
  i32.sub
  i32.const 2
  i32.shl
  i32.const 15552
  i32.add
  i64.load32_u
  i64.mul
  local.set $1
  local.get $4
  i32.const 1
  i32.shl
  i32.const 14622
  i32.add
  local.tee $5
  i32.load16_u
  local.set $2
  loop $while-continue|6
   local.get $0
   local.get $1
   i64.lt_u
   local.get $3
   local.get $0
   i64.sub
   local.get $11
   i64.ge_u
   i32.and
   if (result i32)
    local.get $1
    local.get $0
    i64.sub
    local.get $0
    local.get $11
    i64.add
    local.tee $7
    local.get $1
    i64.sub
    i64.gt_u
    local.get $1
    local.get $7
    i64.gt_u
    i32.or
   else
    i32.const 0
   end
   if
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $0
    local.get $11
    i64.add
    local.set $0
    br $while-continue|6
   end
  end
  local.get $5
  local.get $2
  i32.store16
  local.get $4
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy
    local.get $0
    i32.const 46
    i32.store16
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $0
     i32.const 3014704
     i32.store
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy
      local.get $0
      i32.const 46
      i32.store16 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 f64) (result i32)
  (local $1 i64)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  local.get $0
  f64.const 0
  f64.lt
  local.tee $2
  if (result f64)
   i32.const 14624
   i32.const 45
   i32.store16
   local.get $0
   f64.neg
  else
   local.get $0
  end
  i64.reinterpret_f64
  local.tee $1
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $6
  i32.const 1
  local.get $6
  select
  i32.const 1075
  i32.sub
  local.tee $7
  i32.const 1
  i32.sub
  local.get $1
  i64.const 4503599627370495
  i64.and
  local.get $6
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $1
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $3
  i64.clz
  i32.wrap_i64
  local.tee $6
  i32.sub
  local.set $8
  local.get $3
  local.get $6
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $1
  local.get $1
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $6
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $7
  local.get $6
  i32.sub
  local.get $8
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $8
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  local.tee $6
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $0
  i32.trunc_sat_f64_s
  local.tee $7
  local.get $7
  f64.convert_i32_s
  local.get $0
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $7
  i32.const 3
  i32.shl
  local.tee $8
  i32.sub
  global.set $~lib/util/number/_K
  local.get $8
  i32.const 14680
  i32.add
  i64.load
  global.set $~lib/util/number/_frc_pow
  local.get $7
  i32.const 1
  i32.shl
  i32.const 15376
  i32.add
  i32.load16_s
  global.set $~lib/util/number/_exp_pow
  local.get $1
  local.get $1
  i64.clz
  i64.shl
  local.tee $1
  i64.const 4294967295
  i64.and
  local.set $4
  local.get $1
  i64.const 32
  i64.shr_u
  local.tee $1
  global.get $~lib/util/number/_frc_pow
  local.tee $9
  i64.const 4294967295
  i64.and
  local.tee $10
  i64.mul
  local.get $4
  local.get $10
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  global.get $~lib/util/number/_frc_plus
  local.tee $3
  i64.const 4294967295
  i64.and
  local.set $12
  local.get $10
  local.get $3
  i64.const 32
  i64.shr_u
  local.tee $3
  i64.mul
  local.get $10
  local.get $12
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $5
  global.get $~lib/util/number/_frc_minus
  local.tee $13
  i64.const 4294967295
  i64.and
  local.set $14
  local.get $10
  local.get $13
  i64.const 32
  i64.shr_u
  local.tee $13
  i64.mul
  local.get $10
  local.get $14
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $10
  local.get $2
  i32.const 1
  i32.shl
  i32.const 14624
  i32.add
  local.get $9
  i64.const 32
  i64.shr_u
  local.tee $9
  local.get $1
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $4
  local.get $9
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $3
  local.get $9
  i64.mul
  local.get $5
  i64.const 32
  i64.shr_u
  i64.add
  local.get $9
  local.get $12
  i64.mul
  local.get $5
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.tee $1
  local.get $6
  global.get $~lib/util/number/_exp_pow
  i32.add
  i32.const -64
  i32.sub
  local.get $1
  local.get $9
  local.get $13
  i64.mul
  local.get $10
  i64.const 32
  i64.shr_u
  i64.add
  local.get $9
  local.get $14
  i64.mul
  local.get $10
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $2
  call $~lib/util/number/genDigits
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $2
  i32.add
 )
 (func $~lib/number/F64#toString (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/util/number/dtoa
   local.get $0
   f64.const 0
   f64.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 14480
    local.set $1
    br $__inlined_func$~lib/util/number/dtoa
   end
   local.get $0
   local.get $0
   f64.sub
   f64.const 0
   f64.ne
   if
    local.get $0
    local.get $0
    f64.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 14512
     local.set $1
     br $__inlined_func$~lib/util/number/dtoa
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 14544
    i32.const 14592
    local.get $0
    f64.const 0
    f64.lt
    select
    local.set $1
    br $__inlined_func$~lib/util/number/dtoa
   end
   local.get $0
   call $~lib/util/number/dtoa_core
   i32.const 1
   i32.shl
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 14624
   local.get $2
   memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $1
 )
 (func $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $5
    i32.load
    local.tee $6
    i32.store
    local.get $3
    local.get $5
    i32.load offset=4
    local.tee $5
    i32.store offset=4
    local.get $6
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $6
    local.get $5
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $5
     local.set $3
     local.get $6
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $6
    loop $while-continue|1
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|1
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $3
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       i32.store offset=8
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store offset=8
    loop $while-continue|2
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|2
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $3
       i32.store
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $5
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store offset=4
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    i32.store offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.add
  local.set $7
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $1
   local.get $6
   i32.lt_s
   if
    local.get $6
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load
    i32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $4
    local.get $7
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    local.get $7
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    i32.store offset=4
    i32.const 2
    global.set $~argumentsLength
    local.get $8
    local.get $7
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store
  local.get $5
  i32.const 0
  i32.store offset=8
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.load
      local.tee $3
      i32.store
      local.get $1
      local.get $0
      i32.load offset=4
      local.tee $1
      i32.store offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $1
      local.get $3
      local.get $3
      local.get $1
      local.get $2
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $1
      local.get $4
      select
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $3
      i32.store offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $3
      local.get $1
      local.get $1
      local.get $3
      local.get $2
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store offset=4
      local.get $0
      local.get $1
      local.get $3
      local.get $4
      select
      i32.store offset=8
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.load
     local.tee $3
     i32.store offset=8
     local.get $1
     local.get $0
     i32.load offset=4
     local.tee $1
     i32.store offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $1
     local.get $3
     local.get $3
     local.get $1
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $2
     select
     i32.store
     local.get $0
     local.get $3
     local.get $1
     local.get $2
     select
     i32.store offset=4
     br $folding-inner0
    end
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $5
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   i32.shl
   local.set $7
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $6
   global.get $~lib/rt/tlsf/ROOT
   local.get $7
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $10
   i32.add
   local.set $11
   loop $for-loop|1
    local.get $4
    local.get $5
    i32.lt_u
    if
     local.get $10
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $12
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $9
   local.get $2
   call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   local.tee $4
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    local.get $0
    i32.const 0
    local.get $9
    i32.const 31
    local.get $9
    i32.const 31
    i32.lt_s
    select
    local.tee $4
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   end
   i32.const 0
   local.set $1
   loop $while-continue|2
    local.get $4
    local.get $9
    i32.lt_s
    if
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     local.get $9
     local.get $2
     call $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
     local.tee $5
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      local.get $0
      local.get $6
      local.get $9
      local.get $6
      i32.const 31
      i32.add
      local.tee $5
      local.get $5
      local.get $9
      i32.gt_s
      select
      local.tee $5
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
     end
     local.get $3
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $9
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $13
     i64.div_u
     local.get $5
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $13
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $1
      local.get $7
      i32.gt_u
      if
       local.get $10
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $0
        local.get $8
        local.get $1
        i32.const 2
        i32.shl
        local.tee $3
        local.get $11
        i32.add
        i32.load
        i32.const 1
        i32.add
        local.get $4
        local.get $12
        local.get $2
        call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
        local.get $3
        local.get $10
        i32.add
        i32.const -1
        i32.store
        local.get $8
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $1
     local.get $10
     i32.add
     local.get $3
     i32.store
     local.get $1
     local.get $11
     i32.add
     local.get $4
     i32.store
     local.get $6
     local.set $3
     local.get $5
     local.set $4
     local.get $7
     local.set $1
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $1
    if
     local.get $10
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $3
     i32.const -1
     i32.ne
     if
      local.get $0
      local.get $3
      local.get $11
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 1
      i32.add
      local.get $9
      local.get $12
      local.get $2
      call $~lib/util/sort/mergeRuns<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|4
    end
   end
   local.get $12
   call $~lib/rt/tlsf/__free
   local.get $10
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/bytes/REVERSE<assembly/types/target/TargetDistribution> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.gt_u
  if
   local.get $1
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $1
   i32.const 1
   i32.sub
   local.set $4
   loop $while-continue|0
    local.get $2
    local.get $3
    i32.lt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load
     local.tee $1
     i32.store
     local.get $5
     local.get $0
     local.get $4
     local.get $2
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load
     i32.store
     local.get $5
     local.get $1
     i32.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,i64>#get (param $0 i32) (param $1 i32) (result i64)
  local.get $0
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,i64>#find
  local.tee $0
  i32.eqz
  if
   i32.const 8720
   i32.const 8784
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.load offset=8
 )
 (func $~lib/array/Array<i64>#push (param $0 i32) (param $1 i64)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 3
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 3
  i32.shl
  i32.add
  local.get $1
  i64.store
  local.get $0
  local.get $3
  i32.store offset=12
 )
 (func $assembly/index/setPlatformData (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i64.const 0
   i64.store offset=8
   local.get $2
   i32.const 20
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.store offset=12
   local.get $2
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $4
   i32.store offset=4
   local.get $4
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $4
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 16448
    i32.const 16544
    i32.const 13
    i32.const 26
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof1 (result i32)
    local.get $4
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|03
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof1
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|03
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 16544
    i32.const 14
    i32.const 25
    call $~lib/builtins/abort
    unreachable
   end
   local.get $4
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 1536
   i32.store offset=12
   local.get $2
   local.get $4
   i32.const 1536
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $0
   i32.store offset=4
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 1584
   i32.store offset=12
   local.get $2
   local.get $4
   i32.const 1584
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $0
   i32.store offset=8
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16624
   i32.store offset=12
   local.get $2
   local.get $4
   i32.const 16624
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $0
   i32.store offset=12
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16672
   i32.store offset=12
   local.get $2
   local.get $4
   i32.const 16672
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $0
   i32.store offset=16
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $2
   i32.store
   local.get $2
   global.set $assembly/managers/platformDataManager/_platformData
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $1
   i32.load offset=4
   i32.const 3
   i32.and
   i32.const 3
   i32.eq
   if
    i32.const 21024
    i32.const 3600
    i32.const 337
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/pinSpace
   local.tee $3
   i32.load offset=8
   local.set $2
   local.get $1
   local.get $3
   i32.const 3
   i32.or
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
   local.get $3
   local.get $1
   i32.store offset=8
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.const 3
  i32.ne
  if
   i32.const 21088
   i32.const 3600
   i32.const 351
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   global.get $~lib/rt/itcms/fromSpace
   local.tee $0
   i32.load offset=8
   local.set $2
   local.get $1
   local.get $0
   global.get $~lib/rt/itcms/white
   i32.or
   i32.store offset=4
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
   local.get $0
   local.get $1
   i32.store offset=8
  end
 )
 (func $~lib/rt/itcms/__collect
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#clone~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
 )
 (func $~lib/assemblyscript-regex/assembly/char/isWhitespace (param $0 i32) (result i32)
  block $break|0
   block $case13|0
    local.get $0
    i32.const 32
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 9
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 11
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 12
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 10
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 13
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 160
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 5760
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8232
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8233
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8239
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 8287
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 12288
    i32.eq
    br_if $case13|0
    local.get $0
    i32.const 65279
    i32.eq
    br_if $case13|0
    br $break|0
   end
   i32.const 1
   return
  end
  local.get $0
  i32.const -8192
  i32.add
  i32.const 11
  i32.lt_u
  if
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Arr#stringify~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Value#stringify@virtual
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual (param $0 i32) (result i32)
  (local $1 i32)
  block $folding-inner3
   block $folding-inner2
    block $folding-inner1
     block $folding-inner0
      block $default
       block $case10
        block $case9
         block $case8
          block $case7
           block $case6
            block $case5
             block $case4
              block $case3
               block $case2
                block $case1
                 block $case0
                  local.get $0
                  i32.const 8
                  i32.sub
                  i32.load
                  i32.const 17
                  i32.sub
                  br_table $case0 $default $default $default $default $case1 $case9 $case10 $default $case8 $case4 $case6 $case5 $case7 $case2 $case3 $default
                 end
                 global.get $~lib/memory/__stack_pointer
                 i32.const 8
                 i32.sub
                 global.set $~lib/memory/__stack_pointer
                 global.get $~lib/memory/__stack_pointer
                 i32.const 22740
                 i32.lt_s
                 br_if $folding-inner0
                 global.get $~lib/memory/__stack_pointer
                 local.tee $1
                 i64.const 0
                 i64.store
                 local.get $1
                 local.get $0
                 i32.load offset=4
                 local.tee $0
                 i32.store
                 local.get $0
                 if (result i32)
                  local.get $0
                  call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
                 else
                  i32.const 0
                 end
                 local.set $0
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.store offset=4
                 local.get $0
                 call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
                 local.set $0
                 br $folding-inner2
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 12
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 22740
                i32.lt_s
                br_if $folding-inner0
                global.get $~lib/memory/__stack_pointer
                local.tee $1
                i64.const 0
                i64.store
                local.get $1
                i32.const 0
                i32.store offset=8
                local.get $1
                local.get $0
                i32.load offset=4
                local.tee $0
                i32.store offset=8
                local.get $0
                i32.const 0
                i32.const 2147483647
                call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
                local.set $0
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store
                global.get $~lib/memory/__stack_pointer
                i32.const 21152
                i32.store offset=4
                local.get $0
                i32.const 21152
                call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node>
                local.set $0
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.store
                local.get $0
                call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
                local.set $0
                br $folding-inner3
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 22740
               i32.lt_s
               br_if $folding-inner0
               global.get $~lib/memory/__stack_pointer
               local.tee $1
               i64.const 0
               i64.store
               local.get $1
               i32.const 0
               i32.store offset=8
               local.get $1
               local.get $0
               i32.load offset=4
               local.tee $1
               i32.store offset=8
               local.get $1
               i32.const 0
               i32.const 2147483647
               call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               global.get $~lib/memory/__stack_pointer
               i32.const 21184
               i32.store offset=4
               local.get $1
               i32.const 21184
               call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node>
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store
               local.get $1
               local.get $0
               i32.load8_u offset=8
               call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor
               local.set $0
               br $folding-inner3
              end
              local.get $0
              i32.load offset=4
              local.get $0
              i32.load offset=8
              call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor
              return
             end
             local.get $0
             i32.load offset=4
             call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
             return
            end
            local.get $0
            i32.load offset=4
            call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor
            return
           end
           local.get $0
           i32.load offset=4
           call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
           return
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          i32.const 0
          i32.store
          local.get $1
          local.get $0
          i32.load offset=4
          local.tee $1
          i32.store
          local.get $1
          call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
          local.set $1
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store
          local.get $1
          local.get $0
          i32.load offset=8
          i32.const 1
          call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
          local.set $0
          br $folding-inner1
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner0
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         i32.const 0
         i32.store
         local.get $1
         local.get $0
         i32.load offset=4
         local.tee $1
         i32.store
         local.get $1
         call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store
         local.get $1
         local.get $0
         i32.load offset=8
         local.get $0
         i32.load offset=12
         i32.const 1
         call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor
         local.set $0
         br $folding-inner1
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 22740
        i32.lt_s
        br_if $folding-inner0
        global.get $~lib/memory/__stack_pointer
        local.tee $1
        i64.const 0
        i64.store
        local.get $1
        local.get $0
        i32.load offset=4
        local.tee $1
        i32.store offset=4
        local.get $1
        call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=8
        local.tee $0
        i32.store offset=4
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=4
        local.get $1
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor
        local.set $0
        br $folding-inner2
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i32.const 0
       i32.store
       local.get $1
       local.get $0
       i32.load offset=4
       local.tee $1
       i32.store
       local.get $1
       call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $1
       local.get $0
       i32.load8_u offset=8
       local.get $0
       i32.load offset=12
       call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor
       local.set $0
       br $folding-inner1
      end
      unreachable
     end
     i32.const 39152
     i32.const 39200
     i32.const 1
     i32.const 1
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value#stringify@virtual (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $folding-inner0
   block $folding-inner7
    block $folding-inner6
     block $folding-inner5
      block $folding-inner4
       block $folding-inner3
        block $folding-inner2
         block $folding-inner1
          block $default
           block $case28
            block $case27
             block $case26
              block $case25
               block $case24
                block $case23
                 block $case22
                  block $case21
                   block $case20
                    block $case19
                     block $case18
                      block $case17
                       block $case16
                        block $case15
                         block $case14
                          block $case13
                           block $case12
                            block $case11
                             block $case10
                              block $case9
                               block $case8
                                block $case7
                                 block $case6
                                  block $case5
                                   block $case4
                                    block $case3
                                     block $case2
                                      block $case1
                                       local.get $0
                                       i32.const 8
                                       i32.sub
                                       i32.load
                                       local.tee $1
                                       i32.const 102
                                       i32.ne
                                       if
                                        local.get $1
                                        i32.const 92
                                        i32.eq
                                        br_if $case1
                                        local.get $1
                                        i32.const 91
                                        i32.eq
                                        br_if $case1
                                        local.get $1
                                        i32.const 104
                                        i32.eq
                                        br_if $case2
                                        local.get $1
                                        i32.const 96
                                        i32.eq
                                        br_if $case3
                                        local.get $1
                                        i32.const 103
                                        i32.eq
                                        br_if $case4
                                        local.get $1
                                        i32.const 74
                                        i32.eq
                                        br_if $case5
                                        local.get $1
                                        i32.const 5
                                        i32.eq
                                        br_if $case6
                                        local.get $1
                                        i32.const 106
                                        i32.eq
                                        br_if $case7
                                        local.get $1
                                        i32.const 107
                                        i32.eq
                                        br_if $case8
                                        local.get $1
                                        i32.const 109
                                        i32.eq
                                        br_if $case9
                                        local.get $1
                                        i32.const 57
                                        i32.eq
                                        br_if $case10
                                        local.get $1
                                        i32.const 58
                                        i32.eq
                                        br_if $case11
                                        local.get $1
                                        i32.const 84
                                        i32.eq
                                        br_if $case12
                                        local.get $1
                                        i32.const 95
                                        i32.eq
                                        br_if $case13
                                        local.get $1
                                        i32.const 93
                                        i32.eq
                                        br_if $case14
                                        local.get $1
                                        i32.const 59
                                        i32.eq
                                        br_if $case15
                                        local.get $1
                                        i32.const 60
                                        i32.eq
                                        br_if $case16
                                        local.get $1
                                        i32.const 61
                                        i32.eq
                                        br_if $case17
                                        local.get $1
                                        i32.const 64
                                        i32.eq
                                        br_if $case18
                                        local.get $1
                                        i32.const 65
                                        i32.eq
                                        br_if $case19
                                        local.get $1
                                        i32.const 67
                                        i32.eq
                                        br_if $case20
                                        local.get $1
                                        i32.const 4
                                        i32.eq
                                        br_if $case21
                                        local.get $1
                                        i32.const 70
                                        i32.eq
                                        br_if $case22
                                        local.get $1
                                        i32.const 71
                                        i32.eq
                                        br_if $case23
                                        local.get $1
                                        i32.const 72
                                        i32.eq
                                        br_if $case24
                                        local.get $1
                                        i32.const 73
                                        i32.eq
                                        br_if $case25
                                        local.get $1
                                        i32.const 114
                                        i32.eq
                                        br_if $case25
                                        local.get $1
                                        i32.const 117
                                        i32.eq
                                        br_if $case25
                                        local.get $1
                                        i32.const 77
                                        i32.eq
                                        br_if $case26
                                        local.get $1
                                        i32.const 78
                                        i32.eq
                                        br_if $case27
                                        local.get $1
                                        i32.const 80
                                        i32.eq
                                        br_if $case28
                                        br $default
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 28
                                       i32.sub
                                       global.set $~lib/memory/__stack_pointer
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 22740
                                       i32.lt_s
                                       br_if $folding-inner7
                                       global.get $~lib/memory/__stack_pointer
                                       local.tee $2
                                       i32.const 0
                                       i32.const 28
                                       memory.fill
                                       local.get $2
                                       local.get $0
                                       local.tee $1
                                       i32.load
                                       local.tee $0
                                       i32.store
                                       local.get $2
                                       local.get $0
                                       i32.const 20
                                       i32.sub
                                       i32.load offset=16
                                       i32.const 1
                                       i32.shr_u
                                       call $~lib/array/Array<~lib/string/String>#constructor
                                       local.tee $3
                                       i32.store offset=4
                                       i32.const 0
                                       local.set $0
                                       loop $for-loop|0
                                        global.get $~lib/memory/__stack_pointer
                                        local.get $1
                                        i32.load
                                        local.tee $2
                                        i32.store
                                        local.get $0
                                        local.get $2
                                        i32.const 20
                                        i32.sub
                                        i32.load offset=16
                                        i32.const 1
                                        i32.shr_u
                                        i32.lt_s
                                        if
                                         global.get $~lib/memory/__stack_pointer
                                         local.tee $5
                                         local.get $1
                                         i32.load
                                         local.tee $4
                                         i32.store
                                         local.get $0
                                         i32.const 0
                                         local.get $4
                                         i32.const 20
                                         i32.sub
                                         i32.load offset=16
                                         i32.const 1
                                         i32.shr_u
                                         local.tee $2
                                         local.get $0
                                         i32.const 0
                                         i32.ge_s
                                         select
                                         i32.add
                                         local.tee $6
                                         local.get $2
                                         i32.ge_u
                                         if
                                          i32.const 3728
                                          i32.const 9520
                                          i32.const 57
                                          i32.const 31
                                          call $~lib/builtins/abort
                                          unreachable
                                         end
                                         i32.const 2
                                         i32.const 1
                                         call $~lib/rt/itcms/__new
                                         local.tee $2
                                         local.get $4
                                         local.get $6
                                         i32.const 1
                                         i32.shl
                                         i32.add
                                         i32.load16_u
                                         i32.store16
                                         local.get $5
                                         local.get $2
                                         i32.store offset=8
                                         global.get $~lib/memory/__stack_pointer
                                         block $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                          block $case7|0
                                           block $case6|0
                                            block $case5|0
                                             block $case4|0
                                              block $case3|0
                                               block $case2|0
                                                block $case1|0
                                                 local.get $2
                                                 i32.const 20
                                                 i32.sub
                                                 i32.load offset=16
                                                 i32.const 1
                                                 i32.shr_u
                                                 if (result i32)
                                                  local.get $2
                                                  i32.load16_u
                                                 else
                                                  i32.const -1
                                                 end
                                                 local.tee $5
                                                 i32.const 34
                                                 i32.ne
                                                 if
                                                  local.get $5
                                                  i32.const 92
                                                  i32.eq
                                                  br_if $case1|0
                                                  local.get $5
                                                  i32.const 8
                                                  i32.eq
                                                  br_if $case2|0
                                                  local.get $5
                                                  i32.const 10
                                                  i32.eq
                                                  br_if $case3|0
                                                  local.get $5
                                                  i32.const 13
                                                  i32.eq
                                                  br_if $case4|0
                                                  local.get $5
                                                  i32.const 9
                                                  i32.eq
                                                  br_if $case5|0
                                                  local.get $5
                                                  i32.const 12
                                                  i32.eq
                                                  br_if $case6|0
                                                  local.get $5
                                                  i32.const 11
                                                  i32.eq
                                                  br_if $case7|0
                                                  br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                                 end
                                                 i32.const 21296
                                                 local.set $2
                                                 br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                                end
                                                i32.const 21328
                                                local.set $2
                                                br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                               end
                                               i32.const 21360
                                               local.set $2
                                               br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                              end
                                              i32.const 21392
                                              local.set $2
                                              br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                             end
                                             i32.const 21424
                                             local.set $2
                                             br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                            end
                                            i32.const 21456
                                            local.set $2
                                            br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                           end
                                           i32.const 21488
                                           local.set $2
                                           br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/escapeChar
                                          end
                                          i32.const 21520
                                          local.set $2
                                         end
                                         local.get $2
                                         i32.store offset=12
                                         local.get $3
                                         local.get $0
                                         local.get $2
                                         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
                                         local.get $0
                                         i32.const 1
                                         i32.add
                                         local.set $0
                                         br $for-loop|0
                                        end
                                       end
                                       global.get $~lib/memory/__stack_pointer
                                       local.tee $0
                                       i32.const 8832
                                       i32.store offset=12
                                       local.get $0
                                       i32.const 3936
                                       i32.store offset=24
                                       local.get $3
                                       i32.load offset=4
                                       local.get $3
                                       i32.load offset=12
                                       i32.const 3936
                                       call $~lib/util/string/joinStringArray
                                       local.set $0
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store offset=20
                                       i32.const 8832
                                       local.get $0
                                       call $~lib/string/String#concat
                                       local.set $0
                                       global.get $~lib/memory/__stack_pointer
                                       local.get $0
                                       i32.store
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 8832
                                       i32.store offset=16
                                       local.get $0
                                       i32.const 8832
                                       call $~lib/string/String#concat
                                       global.get $~lib/memory/__stack_pointer
                                       i32.const 28
                                       i32.add
                                       global.set $~lib/memory/__stack_pointer
                                       return
                                      end
                                      local.get $0
                                      f64.load
                                      call $~lib/number/F64#toString
                                      return
                                     end
                                     local.get $0
                                     i64.load
                                     call $~lib/util/number/itoa64
                                     return
                                    end
                                    i32.const 11232
                                    return
                                   end
                                   i32.const 10976
                                   i32.const 10864
                                   local.get $0
                                   i32.load8_u
                                   select
                                   return
                                  end
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 32
                                  i32.sub
                                  global.set $~lib/memory/__stack_pointer
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 22740
                                  i32.lt_s
                                  br_if $folding-inner7
                                  global.get $~lib/memory/__stack_pointer
                                  local.tee $1
                                  i32.const 0
                                  i32.const 32
                                  memory.fill
                                  local.get $1
                                  i32.const 10720
                                  i32.store offset=8
                                  local.get $1
                                  local.get $0
                                  i32.load
                                  local.tee $0
                                  i32.store offset=24
                                  local.get $1
                                  i32.const 21552
                                  i32.store offset=28
                                  local.get $0
                                  i32.const 21552
                                  call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
                                  local.set $0
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=16
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 8928
                                  i32.store offset=20
                                  local.get $0
                                  i32.load offset=4
                                  local.get $0
                                  i32.load offset=12
                                  i32.const 8928
                                  call $~lib/util/string/joinStringArray
                                  local.set $0
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store offset=12
                                  i32.const 10720
                                  local.get $0
                                  call $~lib/string/String#concat
                                  local.set $0
                                  global.get $~lib/memory/__stack_pointer
                                  local.get $0
                                  i32.store
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 10752
                                  i32.store offset=4
                                  local.get $0
                                  i32.const 10752
                                  call $~lib/string/String#concat
                                  global.get $~lib/memory/__stack_pointer
                                  i32.const 32
                                  i32.add
                                  global.set $~lib/memory/__stack_pointer
                                  return
                                 end
                                 local.get $0
                                 call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify
                                 return
                                end
                                local.get $0
                                call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
                                return
                               end
                               local.get $0
                               call $assembly/types/bucketedUserConfig/SDKFeature#stringify
                               return
                              end
                              local.get $0
                              call $assembly/types/bucketedUserConfig/SDKVariable#stringify
                              return
                             end
                             global.get $~lib/memory/__stack_pointer
                             i32.const 12
                             i32.sub
                             global.set $~lib/memory/__stack_pointer
                             global.get $~lib/memory/__stack_pointer
                             i32.const 22740
                             i32.lt_s
                             br_if $folding-inner7
                             global.get $~lib/memory/__stack_pointer
                             local.tee $1
                             i64.const 0
                             i64.store
                             local.get $1
                             i32.const 0
                             i32.store offset=8
                             local.get $1
                             i32.const 0
                             call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                             local.tee $2
                             i32.store
                             global.get $~lib/memory/__stack_pointer
                             i32.const 16928
                             i32.store offset=4
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load
                             local.tee $1
                             i32.store offset=8
                             local.get $2
                             i32.const 16928
                             local.get $1
                             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                             global.get $~lib/memory/__stack_pointer
                             i32.const 16960
                             i32.store offset=4
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load offset=4
                             local.tee $1
                             i32.store offset=8
                             local.get $2
                             i32.const 16960
                             local.get $1
                             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                             global.get $~lib/memory/__stack_pointer
                             i32.const 16992
                             i32.store offset=4
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load offset=8
                             local.tee $1
                             i32.store offset=8
                             local.get $2
                             i32.const 16992
                             local.get $1
                             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                             global.get $~lib/memory/__stack_pointer
                             i32.const 17056
                             i32.store offset=4
                             global.get $~lib/memory/__stack_pointer
                             local.get $0
                             i32.load offset=12
                             local.tee $0
                             i32.store offset=8
                             local.get $2
                             i32.const 17056
                             local.get $0
                             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                             br $folding-inner5
                            end
                            global.get $~lib/memory/__stack_pointer
                            i32.const 12
                            i32.sub
                            global.set $~lib/memory/__stack_pointer
                            global.get $~lib/memory/__stack_pointer
                            i32.const 22740
                            i32.lt_s
                            br_if $folding-inner7
                            global.get $~lib/memory/__stack_pointer
                            local.tee $1
                            i64.const 0
                            i64.store
                            local.get $1
                            i32.const 0
                            i32.store offset=8
                            local.get $1
                            i32.const 0
                            call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                            local.tee $2
                            i32.store
                            global.get $~lib/memory/__stack_pointer
                            i32.const 16928
                            i32.store offset=4
                            global.get $~lib/memory/__stack_pointer
                            local.get $0
                            i32.load
                            local.tee $1
                            i32.store offset=8
                            local.get $2
                            i32.const 16928
                            local.get $1
                            call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                            i32.const 16960
                            local.set $1
                            global.get $~lib/memory/__stack_pointer
                            i32.const 16960
                            i32.store offset=4
                            br $folding-inner1
                           end
                           global.get $~lib/memory/__stack_pointer
                           i32.const 12
                           i32.sub
                           global.set $~lib/memory/__stack_pointer
                           global.get $~lib/memory/__stack_pointer
                           i32.const 22740
                           i32.lt_s
                           br_if $folding-inner7
                           global.get $~lib/memory/__stack_pointer
                           local.tee $1
                           i64.const 0
                           i64.store
                           local.get $1
                           i32.const 0
                           i32.store offset=8
                           local.get $1
                           i32.const 0
                           call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                           local.tee $2
                           i32.store
                           global.get $~lib/memory/__stack_pointer
                           i32.const 16928
                           i32.store offset=4
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.load
                           local.tee $1
                           i32.store offset=8
                           local.get $2
                           i32.const 16928
                           local.get $1
                           call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                           global.get $~lib/memory/__stack_pointer
                           i32.const 13696
                           i32.store offset=4
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.load offset=4
                           local.tee $1
                           i32.store offset=8
                           local.get $2
                           i32.const 13696
                           local.get $1
                           call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                           global.get $~lib/memory/__stack_pointer
                           i32.const 16960
                           i32.store offset=4
                           global.get $~lib/memory/__stack_pointer
                           local.get $0
                           i32.load offset=8
                           local.tee $0
                           i32.store offset=8
                           local.get $2
                           i32.const 16960
                           local.get $0
                           call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                           br $folding-inner5
                          end
                          local.get $0
                          call $assembly/types/dvcUser/DVCUser#stringify
                          return
                         end
                         local.get $0
                         call $assembly/types/dvcUser/DVCPopulatedUser#stringify
                         return
                        end
                        global.get $~lib/memory/__stack_pointer
                        i32.const 12
                        i32.sub
                        global.set $~lib/memory/__stack_pointer
                        global.get $~lib/memory/__stack_pointer
                        i32.const 22740
                        i32.lt_s
                        br_if $folding-inner7
                        global.get $~lib/memory/__stack_pointer
                        local.tee $1
                        i64.const 0
                        i64.store
                        local.get $1
                        i32.const 0
                        i32.store offset=8
                        local.get $1
                        i32.const 0
                        call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                        local.tee $2
                        i32.store
                        global.get $~lib/memory/__stack_pointer
                        i32.const 16928
                        i32.store offset=4
                        global.get $~lib/memory/__stack_pointer
                        local.get $0
                        i32.load
                        local.tee $1
                        i32.store offset=8
                        local.get $2
                        i32.const 16928
                        local.get $1
                        call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                        global.get $~lib/memory/__stack_pointer
                        i32.const 13696
                        i32.store offset=4
                        global.get $~lib/memory/__stack_pointer
                        local.get $0
                        i32.load offset=4
                        local.tee $1
                        i32.store offset=8
                        local.get $2
                        i32.const 13696
                        local.get $1
                        call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                        global.get $~lib/memory/__stack_pointer
                        i32.const 16960
                        i32.store offset=4
                        global.get $~lib/memory/__stack_pointer
                        local.get $0
                        i32.load offset=8
                        local.tee $1
                        i32.store offset=8
                        local.get $2
                        i32.const 16960
                        local.get $1
                        call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                        global.get $~lib/memory/__stack_pointer
                        i32.const 17360
                        i32.store offset=4
                        global.get $~lib/memory/__stack_pointer
                        local.get $0
                        i32.load offset=12
                        local.tee $1
                        i32.store offset=8
                        local.get $1
                        call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
                        local.set $1
                        global.get $~lib/memory/__stack_pointer
                        local.get $1
                        i32.store offset=8
                        local.get $2
                        i32.const 17360
                        local.get $1
                        call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                        global.get $~lib/memory/__stack_pointer
                        i32.const 19120
                        i32.store offset=4
                        global.get $~lib/memory/__stack_pointer
                        local.get $0
                        i32.load offset=16
                        local.tee $0
                        i32.store offset=8
                        local.get $2
                        i32.const 19120
                        local.get $0
                        call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                        br $folding-inner5
                       end
                       global.get $~lib/memory/__stack_pointer
                       i32.const 12
                       i32.sub
                       global.set $~lib/memory/__stack_pointer
                       global.get $~lib/memory/__stack_pointer
                       i32.const 22740
                       i32.lt_s
                       br_if $folding-inner7
                       global.get $~lib/memory/__stack_pointer
                       local.tee $1
                       i64.const 0
                       i64.store
                       local.get $1
                       i32.const 0
                       i32.store offset=8
                       local.get $1
                       i32.const 0
                       call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                       local.tee $2
                       i32.store
                       global.get $~lib/memory/__stack_pointer
                       i32.const 16928
                       i32.store offset=4
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.load
                       local.tee $1
                       i32.store offset=8
                       local.get $2
                       i32.const 16928
                       local.get $1
                       call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                       global.get $~lib/memory/__stack_pointer
                       i32.const 11808
                       i32.store offset=4
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.load offset=4
                       local.tee $1
                       i32.store offset=8
                       local.get $2
                       i32.const 11808
                       local.get $1
                       call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                       global.get $~lib/memory/__stack_pointer
                       i32.const 16960
                       i32.store offset=4
                       global.get $~lib/memory/__stack_pointer
                       local.get $0
                       i32.load offset=8
                       local.tee $1
                       i32.store offset=8
                       local.get $2
                       i32.const 16960
                       local.get $1
                       call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                       i32.const 16336
                       local.set $1
                       global.get $~lib/memory/__stack_pointer
                       i32.const 16336
                       i32.store offset=4
                       br $folding-inner2
                      end
                      global.get $~lib/memory/__stack_pointer
                      i32.const 12
                      i32.sub
                      global.set $~lib/memory/__stack_pointer
                      global.get $~lib/memory/__stack_pointer
                      i32.const 22740
                      i32.lt_s
                      br_if $folding-inner7
                      global.get $~lib/memory/__stack_pointer
                      local.tee $1
                      i64.const 0
                      i64.store
                      local.get $1
                      i32.const 0
                      i32.store offset=8
                      local.get $1
                      i32.const 0
                      call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                      local.tee $2
                      i32.store
                      global.get $~lib/memory/__stack_pointer
                      i32.const 17408
                      i32.store offset=4
                      global.get $~lib/memory/__stack_pointer
                      local.get $0
                      i32.load
                      local.tee $1
                      i32.store offset=8
                      local.get $2
                      i32.const 17408
                      local.get $1
                      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                      i32.const 17440
                      local.set $1
                      global.get $~lib/memory/__stack_pointer
                      i32.const 17440
                      i32.store offset=4
                      br $folding-inner3
                     end
                     global.get $~lib/memory/__stack_pointer
                     i32.const 16
                     i32.sub
                     global.set $~lib/memory/__stack_pointer
                     global.get $~lib/memory/__stack_pointer
                     i32.const 22740
                     i32.lt_s
                     br_if $folding-inner7
                     global.get $~lib/memory/__stack_pointer
                     local.tee $1
                     i64.const 0
                     i64.store
                     local.get $1
                     i64.const 0
                     i64.store offset=8
                     local.get $1
                     i32.const 0
                     call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                     local.tee $2
                     i32.store
                     global.get $~lib/memory/__stack_pointer
                     i32.const 16928
                     i32.store offset=4
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.load
                     local.tee $1
                     i32.store offset=8
                     local.get $2
                     i32.const 16928
                     local.get $1
                     call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                     local.get $0
                     i32.load offset=4
                     if
                      global.get $~lib/memory/__stack_pointer
                      local.tee $1
                      i32.const 17744
                      i32.store offset=4
                      local.get $1
                      local.get $0
                      i32.load offset=4
                      local.tee $1
                      i32.store offset=12
                      local.get $1
                      i32.eqz
                      if
                       i32.const 4976
                       i32.const 17888
                       i32.const 42
                       i32.const 61
                       call $~lib/builtins/abort
                       unreachable
                      end
                      global.get $~lib/memory/__stack_pointer
                      local.get $1
                      i32.store offset=8
                      local.get $1
                      call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
                      local.set $1
                      global.get $~lib/memory/__stack_pointer
                      local.get $1
                      i32.store offset=8
                      local.get $2
                      i32.const 17744
                      local.get $1
                      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                     end
                     local.get $0
                     i32.load offset=8
                     if
                      global.get $~lib/memory/__stack_pointer
                      local.tee $1
                      i32.const 18016
                      i32.store offset=4
                      local.get $1
                      local.get $0
                      i32.load offset=8
                      local.tee $1
                      i32.store offset=12
                      local.get $1
                      i32.eqz
                      if
                       i32.const 4976
                       i32.const 17888
                       i32.const 45
                       i32.const 42
                       call $~lib/builtins/abort
                       unreachable
                      end
                      global.get $~lib/memory/__stack_pointer
                      local.get $1
                      i32.store offset=8
                      local.get $2
                      i32.const 18016
                      local.get $1
                      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                     end
                     local.get $0
                     i32.load offset=12
                     if
                      global.get $~lib/memory/__stack_pointer
                      local.tee $1
                      i32.const 21584
                      i32.store offset=4
                      local.get $1
                      local.get $0
                      i32.load offset=12
                      local.tee $1
                      i32.store offset=12
                      local.get $1
                      i32.eqz
                      if
                       i32.const 4976
                       i32.const 17888
                       i32.const 48
                       i32.const 52
                       call $~lib/builtins/abort
                       unreachable
                      end
                      global.get $~lib/memory/__stack_pointer
                      local.get $1
                      i32.store offset=8
                      local.get $1
                      call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
                      local.set $1
                      global.get $~lib/memory/__stack_pointer
                      local.get $1
                      i32.store offset=8
                      local.get $2
                      i32.const 21584
                      local.get $1
                      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                     end
                     global.get $~lib/memory/__stack_pointer
                     local.tee $1
                     i32.const 18176
                     i32.store offset=4
                     local.get $1
                     local.get $0
                     i32.load offset=16
                     local.tee $0
                     i32.store offset=8
                     local.get $0
                     call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
                     local.set $0
                     global.get $~lib/memory/__stack_pointer
                     local.get $0
                     i32.store offset=8
                     local.get $2
                     i32.const 18176
                     local.get $0
                     call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                     br $folding-inner6
                    end
                    global.get $~lib/memory/__stack_pointer
                    i32.const 12
                    i32.sub
                    global.set $~lib/memory/__stack_pointer
                    global.get $~lib/memory/__stack_pointer
                    i32.const 22740
                    i32.lt_s
                    br_if $folding-inner7
                    global.get $~lib/memory/__stack_pointer
                    local.tee $1
                    i64.const 0
                    i64.store
                    local.get $1
                    i32.const 0
                    i32.store offset=8
                    local.get $1
                    i32.const 0
                    call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                    local.tee $2
                    i32.store
                    global.get $~lib/memory/__stack_pointer
                    i32.const 17792
                    i32.store offset=4
                    global.get $~lib/memory/__stack_pointer
                    local.get $0
                    i32.load
                    local.tee $1
                    i32.store offset=8
                    local.get $2
                    i32.const 17792
                    local.get $1
                    call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                    i32.const 17840
                    local.set $1
                    global.get $~lib/memory/__stack_pointer
                    i32.const 17840
                    i32.store offset=4
                    br $folding-inner1
                   end
                   global.get $~lib/memory/__stack_pointer
                   i32.const 12
                   i32.sub
                   global.set $~lib/memory/__stack_pointer
                   global.get $~lib/memory/__stack_pointer
                   i32.const 22740
                   i32.lt_s
                   br_if $folding-inner7
                   global.get $~lib/memory/__stack_pointer
                   local.tee $1
                   i64.const 0
                   i64.store
                   local.get $1
                   i32.const 0
                   i32.store offset=8
                   local.get $1
                   i32.const 0
                   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                   local.tee $2
                   i32.store
                   global.get $~lib/memory/__stack_pointer
                   i32.const 18080
                   i32.store offset=4
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load
                   local.tee $1
                   i32.store offset=8
                   local.get $2
                   i32.const 18080
                   local.get $1
                   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                   global.get $~lib/memory/__stack_pointer
                   i32.const 18128
                   i32.store offset=4
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load offset=4
                   local.tee $0
                   i32.store offset=8
                   local.get $0
                   call $~lib/date/Date#toISOString
                   local.set $0
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.store offset=8
                   local.get $2
                   i32.const 18128
                   local.get $0
                   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                   br $folding-inner5
                  end
                  local.get $0
                  call $assembly/types/platformData/PlatformData#stringify
                  return
                 end
                 global.get $~lib/memory/__stack_pointer
                 i32.const 12
                 i32.sub
                 global.set $~lib/memory/__stack_pointer
                 global.get $~lib/memory/__stack_pointer
                 i32.const 22740
                 i32.lt_s
                 br_if $folding-inner7
                 global.get $~lib/memory/__stack_pointer
                 local.tee $1
                 i64.const 0
                 i64.store
                 local.get $1
                 i32.const 0
                 i32.store offset=8
                 local.get $1
                 i32.const 0
                 call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                 local.tee $2
                 i32.store
                 global.get $~lib/memory/__stack_pointer
                 i32.const 16928
                 i32.store offset=4
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.load
                 local.tee $1
                 i32.store offset=8
                 local.get $2
                 i32.const 16928
                 local.get $1
                 call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                 global.get $~lib/memory/__stack_pointer
                 i32.const 18736
                 i32.store offset=4
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.load offset=4
                 local.tee $1
                 i32.store offset=8
                 local.get $2
                 i32.const 18736
                 local.get $1
                 call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
                 local.get $0
                 i32.load offset=8
                 if
                  global.get $~lib/memory/__stack_pointer
                  local.tee $1
                  i32.const 18784
                  i32.store offset=4
                  local.get $1
                  local.get $0
                  i32.load offset=8
                  local.tee $1
                  i32.store offset=8
                  local.get $2
                  i32.const 18784
                  local.get $1
                  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
                 end
                 i32.const 19008
                 local.set $1
                 global.get $~lib/memory/__stack_pointer
                 i32.const 19008
                 i32.store offset=4
                 br $folding-inner2
                end
                global.get $~lib/memory/__stack_pointer
                i32.const 12
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 22740
                i32.lt_s
                br_if $folding-inner7
                global.get $~lib/memory/__stack_pointer
                local.tee $1
                i64.const 0
                i64.store
                local.get $1
                i32.const 0
                i32.store offset=8
                local.get $1
                i32.const 0
                call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
                local.tee $2
                i32.store
                global.get $~lib/memory/__stack_pointer
                i32.const 16928
                i32.store offset=4
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.load
                local.tee $1
                i32.store offset=8
                local.get $2
                i32.const 16928
                local.get $1
                call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
                i32.const 18224
                local.set $1
                global.get $~lib/memory/__stack_pointer
                i32.const 18224
                i32.store offset=4
                br $folding-inner3
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 22740
               i32.lt_s
               br_if $folding-inner7
               global.get $~lib/memory/__stack_pointer
               local.tee $1
               i64.const 0
               i64.store
               local.get $1
               i32.const 0
               i32.store offset=8
               local.get $1
               i32.const 0
               call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
               local.tee $2
               i32.store
               global.get $~lib/memory/__stack_pointer
               i32.const 18224
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.load
               local.tee $1
               i32.store offset=8
               local.get $1
               call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
               local.set $1
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=8
               local.get $2
               i32.const 18224
               local.get $1
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
               i32.const 18624
               local.set $1
               global.get $~lib/memory/__stack_pointer
               i32.const 18624
               i32.store offset=4
               br $folding-inner1
              end
              global.get $~lib/memory/__stack_pointer
              i32.const 16
              i32.sub
              global.set $~lib/memory/__stack_pointer
              global.get $~lib/memory/__stack_pointer
              i32.const 22740
              i32.lt_s
              br_if $folding-inner7
              global.get $~lib/memory/__stack_pointer
              local.tee $1
              i64.const 0
              i64.store
              local.get $1
              i64.const 0
              i64.store offset=8
              local.get $1
              i32.const 0
              call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
              local.tee $1
              i32.store
              local.get $0
              i32.load
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 13696
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 13696
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
              end
              local.get $0
              i32.load offset=4
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 18352
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=4
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 18352
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
              end
              local.get $0
              i32.load offset=8
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 17840
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=8
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 17840
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
              end
              local.get $0
              i32.load offset=12
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 18496
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=12
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 18496
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
              end
              local.get $0
              i32.load offset=16
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 18544
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=16
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 18544
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
              end
              local.get $0
              i32.load offset=20
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 18592
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=20
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 18592
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
              end
              local.get $0
              i32.load offset=24
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 18624
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=24
               local.tee $2
               i32.store offset=8
               local.get $1
               i32.const 18624
               local.get $2
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
              end
              local.get $0
              i32.load offset=28
              if
               global.get $~lib/memory/__stack_pointer
               local.tee $2
               i32.const 18224
               i32.store offset=4
               local.get $2
               local.get $0
               i32.load offset=28
               local.tee $0
               i32.store offset=12
               local.get $0
               i32.eqz
               if
                i32.const 4976
                i32.const 18272
                i32.const 167
                i32.const 55
                call $~lib/builtins/abort
                unreachable
               end
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=8
               local.get $0
               call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
               local.set $0
               global.get $~lib/memory/__stack_pointer
               local.get $0
               i32.store offset=8
               local.get $1
               i32.const 18224
               local.get $0
               call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
              end
              local.get $1
              call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
              local.set $0
              br $folding-inner0
             end
             global.get $~lib/memory/__stack_pointer
             i32.const 16
             i32.sub
             global.set $~lib/memory/__stack_pointer
             global.get $~lib/memory/__stack_pointer
             i32.const 22740
             i32.lt_s
             br_if $folding-inner7
             global.get $~lib/memory/__stack_pointer
             local.tee $1
             i64.const 0
             i64.store
             local.get $1
             i64.const 0
             i64.store offset=8
             local.get $1
             i32.const 0
             call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
             local.tee $2
             i32.store
             global.get $~lib/memory/__stack_pointer
             i32.const 13696
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.load
             local.tee $1
             i32.store offset=8
             local.get $2
             i32.const 13696
             local.get $1
             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
             global.get $~lib/memory/__stack_pointer
             i32.const 18832
             i32.store offset=4
             local.get $2
             i32.const 18832
             local.get $0
             f64.load offset=8
             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
             global.get $~lib/memory/__stack_pointer
             i32.const 18896
             i32.store offset=4
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.load offset=16
             local.tee $1
             i32.store offset=8
             local.get $1
             call $~lib/date/Date#toISOString
             local.set $1
             global.get $~lib/memory/__stack_pointer
             local.get $1
             i32.store offset=8
             local.get $2
             i32.const 18896
             local.get $1
             call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
             local.get $0
             i32.load offset=20
             if
              global.get $~lib/memory/__stack_pointer
              local.tee $1
              i32.const 18944
              i32.store offset=4
              local.get $1
              local.get $0
              i32.load offset=20
              local.tee $0
              i32.store offset=12
              local.get $0
              i32.eqz
              if
               i32.const 4976
               i32.const 18272
               i32.const 240
               i32.const 54
               call $~lib/builtins/abort
               unreachable
              end
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store offset=8
              local.get $0
              call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
              local.set $0
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.store offset=8
              local.get $2
              i32.const 18944
              local.get $0
              call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
             end
             br $folding-inner6
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 12
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 22740
            i32.lt_s
            br_if $folding-inner7
            global.get $~lib/memory/__stack_pointer
            local.tee $1
            i64.const 0
            i64.store
            local.get $1
            i32.const 0
            i32.store offset=8
            local.get $1
            i32.const 0
            call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
            local.tee $2
            i32.store
            global.get $~lib/memory/__stack_pointer
            i32.const 13696
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load
            local.tee $1
            i32.store offset=8
            local.get $2
            i32.const 13696
            local.get $1
            call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
            global.get $~lib/memory/__stack_pointer
            i32.const 13776
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load offset=4
            local.tee $1
            i32.store offset=8
            local.get $1
            call $~lib/date/Date#toISOString
            local.set $1
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.store offset=8
            local.get $2
            i32.const 13776
            local.get $1
            call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
            br $folding-inner4
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner7
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i64.const 0
           i64.store
           local.get $1
           i32.const 0
           i32.store offset=8
           local.get $1
           i32.const 0
           call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
           local.tee $2
           i32.store
           global.get $~lib/memory/__stack_pointer
           i32.const 18080
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load
           local.tee $1
           i32.store offset=8
           local.get $2
           i32.const 18080
           local.get $1
           call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
           br $folding-inner4
          end
          unreachable
         end
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load offset=4
         local.tee $0
         i32.store offset=8
         local.get $2
         local.get $1
         local.get $0
         call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
         br $folding-inner5
        end
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=12
        local.tee $0
        i32.store offset=8
        local.get $0
        call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=8
        local.get $2
        local.get $1
        local.get $0
        call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
        br $folding-inner5
       end
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load offset=4
       local.tee $0
       i32.store offset=8
       local.get $2
       local.get $1
       local.get $0
       call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
       br $folding-inner5
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 13728
      i32.store offset=4
      local.get $2
      i32.const 13728
      local.get $0
      f64.load offset=8
      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
     end
     local.get $2
     call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    local.get $2
    call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
    local.set $0
    br $folding-inner0
   end
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual (param $0 i32) (result i32)
  (local $1 i32)
  block $default
   block $case4
    block $case3
     block $case2
      block $case1
       local.get $0
       i32.const 8
       i32.sub
       i32.load
       local.tee $1
       i32.const 106
       i32.ne
       if
        local.get $1
        i32.const 107
        i32.eq
        br_if $case1
        local.get $1
        i32.const 109
        i32.eq
        br_if $case2
        local.get $1
        i32.const 95
        i32.eq
        br_if $case3
        local.get $1
        i32.const 4
        i32.eq
        br_if $case4
        br $default
       end
       local.get $0
       call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
       return
      end
      local.get $0
      call $assembly/types/bucketedUserConfig/SDKFeature#stringify
      return
     end
     local.get $0
     call $assembly/types/bucketedUserConfig/SDKVariable#stringify
     return
    end
    local.get $0
    call $assembly/types/dvcUser/DVCUser#stringify
    return
   end
   local.get $0
   call $assembly/types/platformData/PlatformData#stringify
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value#toString@virtual (param $0 i32) (result i32)
  local.get $0
  i32.const 8
  i32.sub
  i32.load
  i32.const 102
  i32.eq
  if
   local.get $0
   i32.load
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Value#stringify@virtual
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/AudienceFilterOrOperator~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=12
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=16
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=20
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=24
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=28
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $assembly/types/target/UserFilter~visit (param $0 i32)
  (local $1 i32)
  local.get $0
  call $assembly/types/target/AudienceFilterOrOperator~visit
  local.get $0
  i32.load
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=4
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=8
  local.tee $1
  if
   local.get $1
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load offset=20
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner19
   block $folding-inner18
    block $folding-inner17
     block $folding-inner16
      block $folding-inner15
       block $folding-inner14
        block $folding-inner13
         block $folding-inner11
          block $folding-inner10
           block $folding-inner9
            block $folding-inner6
             block $folding-inner4
              block $folding-inner1
               block $folding-inner0
                block $invalid
                 block $assembly/types/target/CustomDataFilter
                  block $assembly/types/target/UserFilter
                   block $assembly/types/bucketedUserConfig/SDKFeature
                    block $assembly/types/bucketedUserConfig/BucketedUserConfig
                     block $~lib/staticarray/StaticArray<~lib/string/String>
                      block $~lib/assemblyscript-json/assembly/JSON/Integer
                       block $~lib/assemblyscript-json/assembly/JSON/Bool
                        block $~lib/assemblyscript-json/assembly/decoder/DecoderState
                         block $~lib/assemblyscript-json/assembly/decoder/JSONHandler
                          block $~lib/assemblyscript-json/assembly/JSON/Null
                           block $assembly/types/dvcUser/DVCUser
                            block $assembly/types/dvcUser/DVCUserInterface
                             block $assembly/types/dvcUser/DVCPopulatedUser
                              block $~lib/assemblyscript-json/assembly/JSON/Num
                               block $~lib/assemblyscript-json/assembly/JSON/Float
                                block $assembly/bucketing/bucketing/BoundedHash
                                 block $~lib/map/Map<~lib/string/String,i64>
                                  block $assembly/types/configBody/Variable
                                   block $assembly/types/target/Rollout
                                    block $assembly/types/target/AudienceFilterOrOperator
                                     block $~lib/date/Date
                                      block $~lib/assemblyscript-regex/assembly/regexp/Match
                                       block $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState
                                        block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher
                                         block $~lib/assemblyscript-regex/assembly/util/Range
                                          block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher
                                           block $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher
                                            block $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher
                                             block $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode
                                              block $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode
                                               block $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode
                                                block $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode
                                                 block $~lib/assemblyscript-regex/assembly/parser/parser/Range
                                                  block $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode
                                                   block $~lib/assemblyscript-regex/assembly/parser/node/Node
                                                    block $~lib/assemblyscript-regex/assembly/regexp/Flags
                                                     block $~lib/assemblyscript-regex/assembly/regexp/RegExp
                                                      block $assembly/bucketing/versionCompare/OptionsType
                                                       block $~lib/assemblyscript-json/assembly/JSON/Value
                                                        block $~lib/string/String
                                                         block $~lib/arraybuffer/ArrayBuffer
                                                          local.get $0
                                                          i32.const 8
                                                          i32.sub
                                                          i32.load
                                                          br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner16 $folding-inner0 $folding-inner9 $folding-inner16 $~lib/assemblyscript-json/assembly/JSON/Value $folding-inner1 $assembly/bucketing/versionCompare/OptionsType $folding-inner16 $~lib/assemblyscript-regex/assembly/regexp/RegExp $~lib/assemblyscript-regex/assembly/regexp/Flags $folding-inner17 $folding-inner16 $folding-inner0 $folding-inner4 $folding-inner0 $folding-inner19 $~lib/assemblyscript-regex/assembly/parser/node/Node $folding-inner16 $folding-inner11 $folding-inner0 $folding-inner19 $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode $folding-inner19 $~lib/assemblyscript-regex/assembly/parser/parser/Range $folding-inner19 $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode $folding-inner19 $folding-inner19 $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode $folding-inner17 $folding-inner19 $folding-inner16 $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterMatcher $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher $folding-inner4 $folding-inner19 $folding-inner0 $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher $~lib/assemblyscript-regex/assembly/util/Range $folding-inner0 $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher $folding-inner19 $folding-inner4 $folding-inner4 $~lib/assemblyscript-regex/assembly/nfa/nfa/GroupEndMarkerState $folding-inner19 $~lib/assemblyscript-regex/assembly/regexp/Match $folding-inner16 $folding-inner19 $folding-inner16 $folding-inner19 $folding-inner19 $folding-inner9 $folding-inner6 $folding-inner17 $folding-inner13 $folding-inner6 $folding-inner17 $folding-inner0 $folding-inner0 $folding-inner9 $folding-inner17 $folding-inner0 $folding-inner17 $~lib/date/Date $folding-inner1 $folding-inner6 $folding-inner17 $folding-inner17 $assembly/types/target/AudienceFilterOrOperator $folding-inner16 $folding-inner0 $folding-inner0 $assembly/types/target/Rollout $folding-inner17 $folding-inner0 $folding-inner16 $folding-inner0 $folding-inner0 $folding-inner0 $assembly/types/configBody/Variable $folding-inner0 $~lib/map/Map<~lib/string/String,i64> $folding-inner1 $assembly/bucketing/bucketing/BoundedHash $folding-inner19 $folding-inner16 $~lib/assemblyscript-json/assembly/JSON/Float $~lib/assemblyscript-json/assembly/JSON/Num $assembly/types/dvcUser/DVCPopulatedUser $assembly/types/dvcUser/DVCUserInterface $assembly/types/dvcUser/DVCUser $~lib/assemblyscript-json/assembly/JSON/Null $folding-inner16 $folding-inner16 $~lib/assemblyscript-json/assembly/decoder/JSONHandler $folding-inner17 $~lib/assemblyscript-json/assembly/decoder/DecoderState $folding-inner16 $~lib/assemblyscript-json/assembly/JSON/Bool $~lib/assemblyscript-json/assembly/JSON/Integer $~lib/staticarray/StaticArray<~lib/string/String> $assembly/types/bucketedUserConfig/BucketedUserConfig $assembly/types/bucketedUserConfig/SDKFeature $folding-inner1 $folding-inner13 $folding-inner1 $folding-inner16 $folding-inner17 $folding-inner0 $assembly/types/target/UserFilter $folding-inner19 $folding-inner19 $assembly/types/target/CustomDataFilter $folding-inner19 $folding-inner16 $folding-inner19 $folding-inner17 $folding-inner0 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner19 $folding-inner16 $folding-inner17 $folding-inner0 $folding-inner0 $folding-inner19 $folding-inner19 $folding-inner19 $invalid
                                                         end
                                                         return
                                                        end
                                                        return
                                                       end
                                                       return
                                                      end
                                                      return
                                                     end
                                                     local.get $0
                                                     i32.load offset=4
                                                     local.tee $1
                                                     if
                                                      local.get $1
                                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                     end
                                                     local.get $0
                                                     i32.load offset=8
                                                     local.tee $1
                                                     if
                                                      local.get $1
                                                      call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                                     end
                                                     br $folding-inner10
                                                    end
                                                    return
                                                   end
                                                   return
                                                  end
                                                  local.get $0
                                                  call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit
                                                  return
                                                 end
                                                 return
                                                end
                                                return
                                               end
                                               return
                                              end
                                              return
                                             end
                                             return
                                            end
                                            return
                                           end
                                           return
                                          end
                                          local.get $0
                                          call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode~visit
                                          return
                                         end
                                         return
                                        end
                                        return
                                       end
                                       local.get $0
                                       i32.load
                                       local.tee $1
                                       if
                                        local.get $1
                                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                       end
                                       br $folding-inner11
                                      end
                                      local.get $0
                                      call $~lib/assemblyscript-regex/assembly/regexp/Match~visit
                                      return
                                     end
                                     return
                                    end
                                    local.get $0
                                    call $assembly/types/target/AudienceFilterOrOperator~visit
                                    return
                                   end
                                   local.get $0
                                   i32.load
                                   local.tee $1
                                   if
                                    local.get $1
                                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                   end
                                   br $folding-inner14
                                  end
                                  local.get $0
                                  i32.load
                                  local.tee $1
                                  if
                                   local.get $1
                                   call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                  end
                                  local.get $0
                                  i32.load offset=4
                                  local.tee $1
                                  if
                                   local.get $1
                                   call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                  end
                                  br $folding-inner11
                                 end
                                 local.get $0
                                 i32.load
                                 local.tee $1
                                 if
                                  local.get $1
                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                 end
                                 local.get $0
                                 i32.load offset=16
                                 i32.const 24
                                 i32.mul
                                 local.get $0
                                 i32.load offset=8
                                 local.tee $1
                                 local.tee $0
                                 i32.add
                                 local.set $2
                                 loop $while-continue|0
                                  local.get $0
                                  local.get $2
                                  i32.lt_u
                                  if
                                   local.get $0
                                   i32.load offset=16
                                   i32.const 1
                                   i32.and
                                   i32.eqz
                                   if
                                    local.get $0
                                    i32.load
                                    local.tee $3
                                    if
                                     local.get $3
                                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                    end
                                   end
                                   local.get $0
                                   i32.const 24
                                   i32.add
                                   local.set $0
                                   br $while-continue|0
                                  end
                                 end
                                 local.get $1
                                 if
                                  local.get $1
                                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                                 end
                                 return
                                end
                                return
                               end
                               return
                              end
                              return
                             end
                             local.get $0
                             i32.load
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=4
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=8
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=12
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=16
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=20
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=44
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=32
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=36
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=40
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=48
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=52
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=56
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=60
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=64
                             local.tee $1
                             if
                              local.get $1
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             local.get $0
                             i32.load offset=68
                             local.tee $0
                             if
                              local.get $0
                              call $byn-split-outlined-A$~lib/rt/itcms/__visit
                             end
                             return
                            end
                            return
                           end
                           local.get $0
                           i32.load
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=4
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=8
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=12
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=16
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=20
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=24
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=48
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=40
                           local.tee $1
                           if
                            local.get $1
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           local.get $0
                           i32.load offset=44
                           local.tee $0
                           if
                            local.get $0
                            call $byn-split-outlined-A$~lib/rt/itcms/__visit
                           end
                           return
                          end
                          return
                         end
                         return
                        end
                        local.get $0
                        call $~lib/assemblyscript-regex/assembly/regexp/Match~visit
                        return
                       end
                       return
                      end
                      return
                     end
                     local.get $0
                     local.get $0
                     i32.const 20
                     i32.sub
                     i32.load offset=16
                     i32.add
                     local.set $1
                     loop $while-continue|024
                      local.get $0
                      local.get $1
                      i32.lt_u
                      if
                       local.get $0
                       i32.load
                       local.tee $2
                       if
                        local.get $2
                        call $byn-split-outlined-A$~lib/rt/itcms/__visit
                       end
                       local.get $0
                       i32.const 4
                       i32.add
                       local.set $0
                       br $while-continue|024
                      end
                     end
                     return
                    end
                    local.get $0
                    i32.load
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load offset=4
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load offset=8
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    local.get $0
                    i32.load offset=12
                    local.tee $1
                    if
                     local.get $1
                     call $byn-split-outlined-A$~lib/rt/itcms/__visit
                    end
                    br $folding-inner10
                   end
                   local.get $0
                   i32.load
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=4
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=8
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=12
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=16
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=20
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=24
                   local.tee $1
                   if
                    local.get $1
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   local.get $0
                   i32.load offset=28
                   local.tee $0
                   if
                    local.get $0
                    call $byn-split-outlined-A$~lib/rt/itcms/__visit
                   end
                   return
                  end
                  local.get $0
                  call $assembly/types/target/UserFilter~visit
                  return
                 end
                 local.get $0
                 call $assembly/types/target/UserFilter~visit
                 br $folding-inner15
                end
                unreachable
               end
               local.get $0
               i32.load offset=4
               local.tee $1
               local.get $0
               i32.load offset=12
               i32.const 2
               i32.shl
               i32.add
               local.set $2
               loop $while-continue|00
                local.get $1
                local.get $2
                i32.lt_u
                if
                 local.get $1
                 i32.load
                 local.tee $3
                 if
                  local.get $3
                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                 end
                 local.get $1
                 i32.const 4
                 i32.add
                 local.set $1
                 br $while-continue|00
                end
               end
               br $folding-inner16
              end
              local.get $0
              i32.load
              local.tee $1
              if
               local.get $1
               call $byn-split-outlined-A$~lib/rt/itcms/__visit
              end
              local.get $0
              i32.load offset=8
              local.tee $2
              local.tee $1
              local.get $0
              i32.load offset=16
              i32.const 12
              i32.mul
              i32.add
              local.set $0
              loop $while-continue|050
               local.get $0
               local.get $1
               i32.gt_u
               if
                local.get $1
                i32.load offset=8
                i32.const 1
                i32.and
                i32.eqz
                if
                 local.get $1
                 i32.load
                 local.tee $3
                 if
                  local.get $3
                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                 end
                 local.get $1
                 i32.load offset=4
                 local.tee $3
                 if
                  local.get $3
                  call $byn-split-outlined-A$~lib/rt/itcms/__visit
                 end
                end
                local.get $1
                i32.const 12
                i32.add
                local.set $1
                br $while-continue|050
               end
              end
              local.get $2
              if
               local.get $2
               call $byn-split-outlined-A$~lib/rt/itcms/__visit
              end
              return
             end
             local.get $0
             i32.load
             local.tee $1
             if
              local.get $1
              call $byn-split-outlined-A$~lib/rt/itcms/__visit
             end
             br $folding-inner18
            end
            local.get $0
            i32.load
            local.tee $1
            if
             local.get $1
             call $byn-split-outlined-A$~lib/rt/itcms/__visit
            end
            local.get $0
            i32.load offset=4
            local.tee $1
            if
             local.get $1
             call $byn-split-outlined-A$~lib/rt/itcms/__visit
            end
            local.get $0
            i32.load offset=8
            local.tee $1
            if
             local.get $1
             call $byn-split-outlined-A$~lib/rt/itcms/__visit
            end
            br $folding-inner18
           end
           local.get $0
           i32.load
           local.tee $1
           if
            local.get $1
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           local.get $0
           i32.load offset=4
           local.tee $1
           if
            local.get $1
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           local.get $0
           i32.load offset=8
           local.tee $1
           if
            local.get $1
            call $byn-split-outlined-A$~lib/rt/itcms/__visit
           end
           br $folding-inner15
          end
          local.get $0
          i32.load offset=16
          local.tee $1
          if
           local.get $1
           call $byn-split-outlined-A$~lib/rt/itcms/__visit
          end
          local.get $0
          i32.load offset=20
          local.tee $1
          if
           local.get $1
           call $byn-split-outlined-A$~lib/rt/itcms/__visit
          end
          local.get $0
          i32.load offset=24
          local.tee $0
          if
           local.get $0
           call $byn-split-outlined-A$~lib/rt/itcms/__visit
          end
          return
         end
         local.get $0
         i32.load offset=8
         local.tee $0
         if
          local.get $0
          call $byn-split-outlined-A$~lib/rt/itcms/__visit
         end
         return
        end
        local.get $0
        i32.load
        local.tee $1
        if
         local.get $1
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        local.get $0
        i32.load offset=4
        local.tee $1
        if
         local.get $1
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        local.get $0
        i32.load offset=8
        local.tee $1
        if
         local.get $1
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        local.get $0
        i32.load offset=12
        local.tee $1
        if
         local.get $1
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
       end
       local.get $0
       i32.load offset=16
       local.tee $1
       if
        local.get $1
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.load offset=20
       local.tee $0
       if
        local.get $0
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       return
      end
      local.get $0
      i32.load offset=12
      local.tee $1
      if
       local.get $1
       call $byn-split-outlined-A$~lib/rt/itcms/__visit
      end
      local.get $0
      i32.load offset=16
      local.tee $0
      if
       local.get $0
       call $byn-split-outlined-A$~lib/rt/itcms/__visit
      end
      return
     end
     local.get $0
     i32.load
     local.tee $0
     if
      local.get $0
      call $byn-split-outlined-A$~lib/rt/itcms/__visit
     end
     return
    end
    local.get $0
    i32.load
    local.tee $1
    if
     local.get $1
     call $byn-split-outlined-A$~lib/rt/itcms/__visit
    end
    br $folding-inner19
   end
   local.get $0
   i32.load offset=12
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load offset=4
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~lib/string/String#split (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  block $folding-inner2
   block $folding-inner1
    local.get $1
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     i32.const 2
     i32.const 3
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $1
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load offset=4
     i32.store offset=4
     local.get $1
     i32.const 0
     local.get $0
     call $~lib/array/Array<~lib/string/String>#__uset
     br $folding-inner1
    end
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    local.set $4
    block $folding-inner0
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $8
     if
      local.get $4
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 3
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $0
       i32.store offset=4
       local.get $0
       i32.load offset=4
       i32.const 3936
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 24
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $0
       return
      end
     else
      local.get $4
      i32.eqz
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.const 2147483647
      local.get $4
      i32.const 2147483647
      i32.ne
      select
      local.tee $3
      i32.const 2
      i32.const 3
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $1
      i32.store
      local.get $1
      i32.load offset=4
      local.set $4
      loop $for-loop|0
       local.get $2
       local.get $3
       i32.lt_s
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 2
        i32.const 1
        call $~lib/rt/itcms/__new
        local.tee $5
        i32.store offset=8
        local.get $5
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        i32.load16_u
        i32.store16
        local.get $4
        local.get $2
        i32.const 2
        i32.shl
        i32.add
        local.get $5
        i32.store
        local.get $5
        if
         local.get $1
         local.get $5
         i32.const 1
         call $byn-split-outlined-A$~lib/rt/itcms/__link
        end
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        br $for-loop|0
       end
      end
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 3
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $5
     i32.store offset=12
     loop $while-continue|1
      local.get $0
      local.get $1
      local.get $2
      call $~lib/string/String#indexOf
      local.tee $6
      i32.const -1
      i32.xor
      if
       local.get $6
       local.get $2
       i32.sub
       local.tee $7
       i32.const 0
       i32.gt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $7
        i32.const 1
        i32.shl
        local.tee $9
        i32.const 1
        call $~lib/rt/itcms/__new
        local.tee $7
        i32.store offset=16
        local.get $7
        local.get $0
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        local.get $9
        memory.copy
        local.get $5
        local.get $7
        call $~lib/array/Array<~lib/string/String>#push
        drop
       else
        global.get $~lib/memory/__stack_pointer
        i32.const 3936
        i32.store offset=20
        local.get $5
        i32.const 3936
        call $~lib/array/Array<~lib/string/String>#push
        drop
       end
       local.get $3
       i32.const 1
       i32.add
       local.tee $3
       i32.const 2147483647
       i32.eq
       br_if $folding-inner2
       local.get $6
       local.get $8
       i32.add
       local.set $2
       br $while-continue|1
      end
     end
     local.get $2
     i32.eqz
     if
      local.get $5
      local.get $0
      call $~lib/array/Array<~lib/string/String>#push
      drop
      br $folding-inner2
     end
     local.get $4
     local.get $2
     i32.sub
     local.tee $1
     i32.const 0
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.const 1
      i32.shl
      local.tee $1
      i32.const 1
      call $~lib/rt/itcms/__new
      local.tee $3
      i32.store offset=4
      local.get $3
      local.get $0
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      local.get $1
      memory.copy
      local.get $5
      local.get $3
      call $~lib/array/Array<~lib/string/String>#push
      drop
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 3936
      i32.store offset=20
      local.get $5
      i32.const 3936
      call $~lib/array/Array<~lib/string/String>#push
      drop
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    i32.const 0
    i32.const 2
    i32.const 3
    i32.const 0
    call $~lib/rt/__newArray
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 12
  i32.const 20
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store offset=8
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  block $__inlined_func$~lib/string/String#charCodeAt (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=8
   local.tee $0
   i32.store offset=4
   i32.const -1
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.eqz
   br_if $__inlined_func$~lib/string/String#charCodeAt
   drop
   local.get $0
   i32.load16_u
  end
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=4
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.lt_u
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $0
   i32.load
   i32.load
   local.get $1
   i32.const -1
   i32.ne
   if (result i32)
    local.get $0
    i32.load
    i32.load
    local.get $1
    i32.ne
   else
    i32.const 0
   end
   if
    i32.const 4064
    i32.const 4112
    i32.const 94
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $0
   local.get $0
   i32.load offset=4
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $0
   i32.load offset=4
   local.set $3
   local.get $1
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.store
   block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#next
    local.get $3
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.ge_u
    if
     local.get $0
     i32.const -1
     i32.store
     br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#next
    end
    local.get $0
    block $__inlined_func$~lib/string/String#charCodeAt (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $1
     i32.store
     i32.const -1
     local.get $0
     i32.load offset=4
     local.tee $0
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.ge_u
     br_if $__inlined_func$~lib/string/String#charCodeAt
     drop
     local.get $1
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u
    end
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  block $__inlined_func$~lib/string/String#charCodeAt (result i32)
   local.get $2
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store
   i32.const -1
   local.get $0
   i32.load offset=4
   local.get $1
   i32.add
   local.tee $0
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ge_u
   br_if $__inlined_func$~lib/string/String#charCodeAt
   drop
   local.get $2
   local.get $0
   i32.const 1
   i32.shl
   i32.add
   i32.load16_u
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i32.const 0
  i32.store offset=8
  i32.const 3936
  local.set $1
  local.get $2
  i32.const 3936
  i32.store
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=4
   local.get $2
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
   if
    local.get $0
    i32.load
    i32.load
    i32.const 48
    i32.sub
    i32.const 10
    i32.lt_u
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.load
     local.tee $3
     i32.store offset=8
     local.get $3
     i32.load
     i32.const 1
     global.set $~argumentsLength
     call $~lib/string/String.fromCharCode@varargs
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $2
     local.get $1
     local.get $3
     call $~lib/string/String#concat
     local.tee $1
     i32.store
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 3936
     i32.store offset=8
     local.get $1
     i32.const 3936
     call $~lib/string/String.__eq
     if (result i32)
      i32.const -1
     else
      local.get $1
      i32.const 0
      call $~lib/util/string/strtol<f64>
      i32.trunc_sat_f64_s
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    i32.const -1
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 3936
  i32.store offset=8
  local.get $1
  i32.const 3936
  call $~lib/string/String.__eq
  if (result i32)
   i32.const -1
  else
   local.get $1
   i32.const 0
   call $~lib/util/string/strtol<f64>
   i32.trunc_sat_f64_s
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacterCode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  i32.const 2
  i32.const 4
  local.get $1
  i32.const 120
  i32.eq
  select
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $4
    i32.store
    local.get $4
    local.get $2
    i32.const 1
    i32.add
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
    local.tee $4
    i32.const 97
    i32.sub
    i32.const 6
    i32.lt_u
    local.get $4
    i32.const 48
    i32.sub
    i32.const 10
    i32.lt_u
    i32.or
    i32.eqz
    if
     i32.const 0
     global.set $~argumentsLength
     local.get $0
     i32.const -1
     call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
     call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
  local.get $1
  call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
  drop
  i32.const 3936
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 3936
  i32.store offset=4
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   local.get $3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.load
    local.tee $5
    i32.store offset=8
    local.get $5
    i32.load
    i32.const 1
    global.set $~argumentsLength
    call $~lib/string/String.fromCharCode@varargs
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $4
    local.get $2
    local.get $5
    call $~lib/string/String#concat
    local.tee $2
    i32.store offset=4
    i32.const 0
    global.set $~argumentsLength
    local.get $0
    i32.const -1
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
    drop
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  local.get $2
  i32.const 16
  call $~lib/util/string/strtol<f64>
  i32.trunc_sat_f64_u
  call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner3
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner3
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 28
   memory.fill
   local.get $1
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
   local.tee $2
   i32.store
   loop $while-continue|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store offset=4
    local.get $1
    call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
    if
     local.get $0
     i32.load
     i32.load
     local.tee $1
     i32.const 41
     i32.ne
     if
      local.get $1
      i32.const 124
      i32.eq
      if
       local.get $0
       i32.const 124
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
       drop
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load offset=12
       i32.const 1
       i32.gt_s
       if (result i32)
        local.get $2
        call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
       else
        local.get $2
        i32.const 0
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       end
       local.tee $1
       i32.store offset=8
       global.get $~lib/memory/__stack_pointer
       local.tee $3
       i32.const 1
       i32.const 2
       i32.const 21
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $2
       i32.store offset=12
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load offset=4
       i32.store offset=16
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
       local.set $4
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.store offset=20
       local.get $2
       i32.const 0
       local.get $1
       local.get $4
       call $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor
       call $~lib/array/Array<~lib/string/String>#__uset
       local.get $3
       local.get $2
       i32.store
      else
       local.get $1
       i32.const 40
       i32.eq
       if
        local.get $0
        i32.const 40
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
        drop
        block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#isCapturing (result i32)
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner3
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         i32.store
         local.get $0
         i32.load
         i32.load
         i32.const 63
         i32.eq
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $0
          i32.load
          local.tee $1
          i32.store
          local.get $1
          i32.const 1
          call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
          i32.const 58
          i32.eq
         else
          i32.const 0
         end
         if
          local.get $0
          i32.const 63
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
          drop
          local.get $0
          i32.const 58
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
          drop
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#isCapturing
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 1
        end
        local.set $1
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store offset=20
        i32.const 2
        global.set $~argumentsLength
        local.get $3
        local.get $1
        i32.const -1
        call $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=24
        local.get $2
        local.get $1
        call $~lib/array/Array<~lib/string/String>#push
        drop
        local.get $0
        i32.const 41
        call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
        drop
       else
        local.get $1
        i32.const 123
        i32.eq
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $1
         local.get $1
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner3
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         i64.const 0
         i64.store
         local.get $4
         local.get $0
         i32.load
         local.tee $5
         i32.store
         local.get $4
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner3
         global.get $~lib/memory/__stack_pointer
         local.tee $6
         i64.const 0
         i64.store
         local.get $6
         local.get $5
         i32.load offset=8
         local.tee $1
         i32.store
         local.get $6
         local.get $1
         call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor
         local.tee $1
         i32.store offset=4
         local.get $1
         local.get $5
         i32.load offset=4
         i32.store offset=4
         local.get $1
         local.get $5
         i32.load
         i32.store
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $4
         local.get $1
         i32.store offset=4
         local.get $0
         i32.const 123
         call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
         drop
         block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit
          local.tee $4
          i32.const -1
          i32.eq
          if
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.add
           global.set $~lib/memory/__stack_pointer
           i32.const 0
           local.set $1
           br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange
          end
          block $folding-inner1
           local.get $0
           i32.load
           i32.load
           i32.const 125
           i32.eq
           if
            i32.const 0
            global.set $~argumentsLength
            local.get $0
            i32.const -1
            call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
            drop
            local.get $4
            local.get $4
            call $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor
            local.set $1
            br $folding-inner1
           else
            local.get $0
            i32.load
            i32.load
            i32.const 44
            i32.eq
            if
             i32.const 0
             global.set $~argumentsLength
             local.get $0
             i32.const -1
             call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
             drop
             local.get $0
             call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseDigit
             local.set $5
             local.get $0
             i32.load
             i32.load
             i32.const 125
             i32.eq
             if
              i32.const 0
              global.set $~argumentsLength
              local.get $0
              i32.const -1
              call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
              drop
              local.get $4
              local.get $5
              call $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor
              local.set $1
              br $folding-inner1
             end
            end
           end
           local.get $0
           local.get $1
           i32.store
           local.get $1
           if
            local.get $0
            local.get $1
            i32.const 0
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.add
           global.set $~lib/memory/__stack_pointer
           i32.const 0
           local.set $1
           br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/parser/Parser#maybeParseRepetitionRange
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
         end
         local.get $1
         i32.store offset=8
         local.get $1
         if (result i32)
          global.get $~lib/memory/__stack_pointer
          local.get $2
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
          local.tee $3
          i32.store offset=16
          local.get $3
          local.get $1
          i32.load
          local.get $1
          i32.load offset=4
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy
          call $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor
         else
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter
         end
         local.set $1
        else
         local.get $1
         i32.const 43
         i32.eq
         local.get $1
         i32.const 63
         i32.eq
         i32.or
         local.get $1
         i32.const 42
         i32.eq
         i32.or
         if
          local.get $2
          i32.load offset=12
          i32.eqz
          if
           i32.const 4656
           i32.const 4112
           i32.const 255
           i32.const 11
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $2
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
          local.tee $1
          i32.store offset=8
          i32.const 0
          global.set $~argumentsLength
          local.get $1
          local.get $0
          i32.const -1
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
          local.get $0
          call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#isGreedy
          call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
          local.set $1
         else
          local.get $1
          i32.const 91
          i32.eq
          if
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner3
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i64.const 0
           i64.store
           local.get $1
           i32.const 0
           i32.store offset=8
           local.get $0
           i32.const 91
           call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
           drop
           local.get $0
           i32.load
           i32.load
           i32.const 94
           i32.eq
           local.tee $1
           if
            local.get $0
            i32.const 94
            call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
            drop
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 0
           call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
           local.tee $3
           i32.store
           loop $while-continue|00
            local.get $0
            i32.load
            i32.load
            i32.const 93
            i32.ne
            if (result i32)
             i32.const 0
            else
             local.get $3
             i32.load offset=12
            end
            i32.eqz
            if
             local.get $0
             i32.load
             i32.load
             i32.const 92
             i32.ne
             if (result i32)
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.load
              local.tee $4
              i32.store offset=4
              local.get $4
              i32.const 1
              call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
              i32.const 45
              i32.eq
             else
              i32.const 0
             end
             if (result i32)
              global.get $~lib/memory/__stack_pointer
              local.get $0
              i32.load
              local.tee $4
              i32.store offset=4
              local.get $4
              i32.const 2
              call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#lookahead
              i32.const 93
              i32.ne
             else
              i32.const 0
             end
             if (result i32)
              i32.const 0
              global.set $~argumentsLength
              local.get $0
              i32.const -1
              call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
              local.get $0
              i32.const 45
              call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
              drop
              i32.const 0
              global.set $~argumentsLength
              local.get $0
              i32.const -1
              call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
              call $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor
             else
              local.get $0
              i32.load
              i32.load
              i32.const 92
              i32.eq
              if (result i32)
               i32.const 0
               global.set $~argumentsLength
               local.get $0
               i32.const -1
               call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
               drop
               local.get $0
               i32.load
               i32.load
               local.tee $4
               i32.const 45
               i32.eq
               local.get $4
               i32.const 94
               i32.eq
               i32.or
               local.get $4
               i32.const 93
               i32.eq
               i32.or
               local.get $4
               i32.const 92
               i32.eq
               i32.or
               if (result i32)
                i32.const 0
                global.set $~argumentsLength
                local.get $0
                i32.const -1
                call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
                call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
               else
                i32.const 0
                global.set $~argumentsLength
                local.get $0
                i32.const -1
                call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
                call $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor
               end
              else
               i32.const 0
               global.set $~argumentsLength
               local.get $0
               i32.const -1
               call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
               call $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor
              end
             end
             local.set $4
             global.get $~lib/memory/__stack_pointer
             local.get $4
             i32.store offset=8
             local.get $3
             local.get $4
             call $~lib/array/Array<~lib/string/String>#push
             drop
             global.get $~lib/memory/__stack_pointer
             local.get $0
             i32.load
             local.tee $4
             i32.store offset=4
             local.get $4
             call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
             i32.eqz
             if
              i32.const 4768
              i32.const 4112
              i32.const 316
              i32.const 9
              call $~lib/builtins/abort
              unreachable
             end
             br $while-continue|00
            end
           end
           local.get $0
           i32.const 93
           call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#eatToken
           drop
           local.get $3
           local.get $1
           call $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor
           local.set $1
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.add
           global.set $~lib/memory/__stack_pointer
          else
           local.get $0
           call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseCharacter
           local.set $1
          end
         end
        end
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.store offset=24
        local.get $2
        local.get $1
        call $~lib/array/Array<~lib/string/String>#push
        drop
       end
      end
      br $while-continue|0
     end
    end
   end
   local.get $2
   i32.load offset=12
   i32.const 1
   i32.gt_s
   if (result i32)
    local.get $2
    call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
   else
    local.get $2
    i32.const 0
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/expandRepetitions (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 36
   memory.fill
   local.get $1
   local.get $0
   i32.load
   local.tee $5
   i32.store
   local.get $5
   i32.load
   i32.const 9
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $5
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $1
       i32.const 26
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 5216
     i32.const 63
     i32.const 26
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    i32.store offset=4
    local.get $5
    i32.load offset=12
    i32.const 1000
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 5344
     i32.store offset=8
     i32.const 1000
     i32.const 10
     call $~lib/number/I32#toString
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     i32.const 5344
     local.get $0
     call $~lib/string/String#concat
     i32.const 5216
     i32.const 66
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    i32.const 24
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.const 24
    memory.fill
    local.get $1
    local.get $0
    i32.load offset=4
    local.tee $3
    i32.store
    block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/walker/parentAsConcatNode
     local.get $3
     i32.load
     i32.const 3
     i32.ne
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.load
      local.tee $7
      i32.store offset=4
      local.get $1
      i32.const 1
      i32.const 2
      i32.const 21
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $0
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=4
      i32.store offset=16
      local.get $0
      i32.const 0
      local.get $7
      call $~lib/array/Array<~lib/string/String>#__uset
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=8
      local.get $1
      local.get $0
      call $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor
      local.tee $0
      i32.store offset=20
      block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#replace@virtual
       block $folding-inner1
        block $default
         block $case4
          block $case1
           local.get $3
           i32.const 8
           i32.sub
           i32.load
           i32.const 17
           i32.sub
           br_table $folding-inner1 $default $default $default $default $case1 $case4 $folding-inner1 $default $folding-inner1 $default $default $default $folding-inner1 $default
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner2
          global.get $~lib/memory/__stack_pointer
          local.tee $1
          i32.const 0
          i32.store
          local.get $1
          local.get $3
          i32.load offset=4
          local.tee $8
          i32.store
          i32.const -1
          local.set $1
          block $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
           local.get $8
           i32.load offset=12
           local.tee $9
           i32.const 0
           i32.le_s
           i32.const 1
           local.get $9
           select
           br_if $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
           local.get $8
           i32.load offset=4
           local.set $4
           loop $while-continue|0
            local.get $2
            local.get $9
            i32.lt_s
            if
             local.get $4
             local.get $2
             local.tee $1
             i32.const 2
             i32.shl
             i32.add
             i32.load
             local.get $7
             i32.eq
             br_if $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
             local.get $1
             i32.const 1
             i32.add
             local.set $2
             br $while-continue|0
            end
           end
           i32.const -1
           local.set $1
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner2
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          i32.const 0
          i32.store
          local.get $2
          local.get $8
          i32.const 0
          i32.const 2147483647
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
          local.tee $2
          i32.store
          local.get $2
          local.get $1
          local.get $0
          call $~lib/array/Array<~lib/string/String>#__uset
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $3
          local.get $2
          i32.store offset=4
          local.get $2
          if
           local.get $3
           local.get $2
           i32.const 0
           call $byn-split-outlined-A$~lib/rt/itcms/__link
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 4
          i32.add
          global.set $~lib/memory/__stack_pointer
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#replace@virtual
         end
         local.get $3
         i32.load offset=4
         local.get $7
         i32.eq
         if
          local.get $3
          local.get $0
          i32.store offset=4
         else
          local.get $3
          local.get $0
          i32.store offset=8
         end
         local.get $0
         if
          local.get $3
          local.get $0
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#replace@virtual
        end
        i32.const 7216
        i32.const 4528
        i32.const 29
        i32.const 5
        call $~lib/builtins/abort
        unreachable
       end
       local.get $3
       local.get $0
       i32.store offset=4
       local.get $0
       if
        local.get $3
        local.get $0
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
      end
      br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/walker/parentAsConcatNode
     end
     block $__inlined_func$~lib/rt/__instanceof1 (result i32)
      local.get $3
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $0
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|03
        i32.const 1
        local.get $0
        i32.const 22
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof1
        drop
        local.get $0
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $0
        br_if $do-loop|03
       end
      end
      i32.const 0
     end
     if (result i32)
      local.get $3
     else
      i32.const 5152
      i32.const 5216
      i32.const 54
      i32.const 10
      call $~lib/builtins/abort
      unreachable
     end
     local.set $0
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 24
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $6
    local.get $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $3
    i32.store offset=20
    i32.const 0
    local.set $1
    i32.const -1
    local.set $2
    block $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf1
     local.get $3
     i32.load offset=12
     local.tee $4
     i32.const 0
     i32.le_s
     i32.const 1
     local.get $4
     select
     br_if $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf1
     local.get $3
     i32.load offset=4
     local.set $6
     loop $while-continue|02
      local.get $1
      local.get $4
      i32.lt_s
      if
       local.get $6
       local.get $1
       local.tee $2
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.get $5
       i32.eq
       br_if $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf1
       local.get $2
       i32.const 1
       i32.add
       local.set $1
       br $while-continue|02
      end
     end
     i32.const -1
     local.set $2
    end
    local.get $5
    i32.load offset=8
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $5
    i32.load offset=4
    local.tee $6
    i32.store offset=24
    local.get $1
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
    local.tee $7
    i32.store offset=28
    local.get $4
    i32.const 0
    i32.gt_s
    if
     local.get $7
     i32.const 0
     local.get $6
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
     i32.const 1
     local.set $1
     loop $for-loop|0
      local.get $1
      local.get $4
      i32.lt_s
      if
       local.get $6
       call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=32
       local.get $7
       local.get $1
       local.get $8
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|0
      end
     end
    end
    local.get $5
    i32.load offset=12
    i32.const -1
    i32.eq
    if
     local.get $6
     call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=32
     local.get $1
     i32.const 42
     local.get $5
     i32.load8_u offset=16
     call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=12
     local.get $7
     local.get $1
     call $~lib/array/Array<~lib/string/String>#push
     drop
    else
     local.get $5
     i32.load offset=12
     local.get $5
     i32.load offset=8
     i32.sub
     local.set $4
     i32.const 0
     local.set $1
     loop $for-loop|1
      local.get $1
      local.get $4
      i32.lt_s
      if
       local.get $6
       call $~lib/assemblyscript-regex/assembly/parser/node/Node#clone@virtual
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=32
       local.get $8
       i32.const 63
       local.get $5
       i32.load8_u offset=16
       call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=12
       local.get $7
       local.get $8
       call $~lib/array/Array<~lib/string/String>#push
       drop
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|1
      end
     end
    end
    local.get $3
    i32.const 0
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=32
    local.get $1
    local.get $7
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    local.get $3
    local.get $2
    i32.const 1
    i32.add
    i32.const 2147483647
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=12
    local.get $0
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat
    local.tee $1
    i32.store offset=4
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/parser/walker/walkNode (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i32.const 0
   i32.store offset=8
   local.get $3
   block $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual (result i32)
    block $default
     block $case5
      block $case4
       block $case3
        block $case2
         block $case1
          block $case0
           local.get $0
           i32.const 8
           i32.sub
           i32.load
           i32.const 17
           i32.sub
           br_table $case0 $default $default $default $default $case1 $case4 $case5 $default $case3 $default $default $default $case2 $default
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner1
          global.get $~lib/memory/__stack_pointer
          local.tee $3
          i64.const 0
          i64.store
          local.get $3
          i32.const 0
          i32.store offset=8
          local.get $0
          i32.load offset=4
          if
           global.get $~lib/memory/__stack_pointer
           i32.const 1
           i32.const 2
           i32.const 21
           i32.const 0
           call $~lib/rt/__newArray
           local.tee $3
           i32.store
           global.get $~lib/memory/__stack_pointer
           local.get $3
           i32.load offset=4
           i32.store offset=4
           global.get $~lib/memory/__stack_pointer
           local.get $0
           i32.load offset=4
           local.tee $4
           i32.store offset=8
           local.get $4
           i32.eqz
           if
            i32.const 4976
            i32.const 4528
            i32.const 39
            i32.const 33
            call $~lib/builtins/abort
            unreachable
           end
           local.get $3
           i32.const 0
           local.get $4
           call $~lib/array/Array<~lib/string/String>#__uset
          else
           global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
           local.set $3
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          local.get $3
          br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual
         end
         local.get $0
         i32.load offset=4
         br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual
        end
        local.get $0
        call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
        br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual
       end
       local.get $0
       call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
       br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i64.const 0
      i64.store
      local.get $3
      i32.const 2
      i32.const 2
      i32.const 21
      i32.const 0
      call $~lib/rt/__newArray
      local.tee $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.load offset=4
      i32.store offset=4
      local.get $3
      i32.const 0
      local.get $0
      i32.load offset=4
      call $~lib/array/Array<~lib/string/String>#__uset
      local.get $3
      i32.const 1
      local.get $0
      i32.load offset=8
      call $~lib/array/Array<~lib/string/String>#__uset
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual
     end
     local.get $0
     call $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children
     br $__inlined_func$~lib/assemblyscript-regex/assembly/parser/node/Node#children@virtual
    end
    global.get $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
   end
   local.tee $5
   i32.store
   local.get $5
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $3
   loop $for-loop|0
    local.get $3
    i32.const 0
    i32.ge_s
    if
     local.get $5
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=4
     local.get $4
     local.get $0
     local.get $2
     call $~lib/assemblyscript-regex/assembly/parser/walker/walkNode
     local.get $3
     i32.const 1
     i32.sub
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 8
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   local.get $4
   local.get $0
   i32.store
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $4
   local.get $1
   i32.store offset=4
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store offset=8
   i32.const 1
   global.set $~argumentsLength
   local.get $4
   local.get $2
   i32.load
   call_indirect $0 (type $i32_=>_none)
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterSetNode~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $folding-inner1
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $0
        i32.load
        i32.const 4
        i32.sub
        br_table $case1|0 $case3|0 $case2|0 $case0|0 $case3|0
       end
       block $__inlined_func$~lib/rt/__instanceof (result i32)
        local.get $0
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $1
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|0
          i32.const 1
          local.get $1
          i32.const 32
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof
          drop
          local.get $1
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $1
          br_if $do-loop|0
         end
        end
        i32.const 0
       end
       i32.eqz
       if
        i32.const 5152
        i32.const 7584
        i32.const 54
        i32.const 13
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       local.get $0
       i32.store
       local.get $1
       global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
       local.tee $2
       i32.store offset=4
       local.get $1
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       local.get $0
       i32.load offset=4
       local.get $0
       i32.load offset=8
       call $~lib/assemblyscript-regex/assembly/util/Range#constructor
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store
       local.get $2
       i32.load8_u offset=1
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i32.const 0
       i32.const 20
       memory.fill
       local.get $0
       i32.const 12
       i32.const 41
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store
       local.get $0
       local.get $1
       i32.store offset=8
       local.get $1
       if
        local.get $0
        local.get $1
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $0
       i32.const 0
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.const 1
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
       local.tee $0
       i32.store
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 43
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $3
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load offset=4
       i32.store offset=8
       local.get $3
       i32.const 0
       local.get $1
       call $~lib/array/Array<~lib/string/String>#__uset
       local.get $0
       local.get $3
       i32.store offset=4
       local.get $3
       if
        local.get $0
        local.get $3
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
        local.tee $3
        i32.store offset=12
        local.get $2
        local.get $1
        local.get $3
        call $~lib/assemblyscript-regex/assembly/util/Range#intersection
        local.tee $2
        i32.store offset=8
        local.get $2
        if
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load offset=4
         local.tee $3
         i32.store offset=16
         local.get $2
         i32.load
         i32.const 32
         i32.sub
         local.get $2
         i32.load offset=4
         i32.const 32
         i32.sub
         call $~lib/assemblyscript-regex/assembly/util/Range#constructor
         local.set $2
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.store offset=12
         local.get $3
         local.get $2
         call $~lib/array/Array<~lib/string/String>#push
         drop
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
        local.tee $3
        i32.store offset=12
        local.get $2
        local.get $1
        local.get $3
        call $~lib/assemblyscript-regex/assembly/util/Range#intersection
        local.tee $1
        i32.store offset=4
        local.get $1
        if
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load offset=4
         local.tee $2
         i32.store offset=16
         local.get $1
         i32.load
         i32.const 32
         i32.add
         local.get $1
         i32.load offset=4
         i32.const 32
         i32.add
         call $~lib/assemblyscript-regex/assembly/util/Range#constructor
         local.set $1
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.store offset=12
         local.get $2
         local.get $1
         call $~lib/array/Array<~lib/string/String>#push
         drop
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $folding-inner1
      end
      block $__inlined_func$~lib/rt/__instanceof0 (result i32)
       local.get $0
       i32.const 20
       i32.sub
       i32.load offset=12
       local.tee $1
       i32.const 21616
       i32.load
       i32.le_u
       if
        loop $do-loop|02
         i32.const 1
         local.get $1
         i32.const 27
         i32.eq
         br_if $__inlined_func$~lib/rt/__instanceof0
         drop
         local.get $1
         i32.const 3
         i32.shl
         i32.const 21620
         i32.add
         i32.load offset=4
         local.tee $1
         br_if $do-loop|02
        end
       end
       i32.const 0
      end
      i32.eqz
      if
       i32.const 5152
       i32.const 7584
       i32.const 59
       i32.const 13
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.store
      local.get $1
      global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
      local.tee $1
      i32.store offset=4
      local.get $0
      local.get $1
      call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode
      local.set $0
      br $folding-inner1
     end
     block $__inlined_func$~lib/rt/__instanceof3 (result i32)
      local.get $0
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $1
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|05
        i32.const 1
        local.get $1
        i32.const 28
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof3
        drop
        local.get $1
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $1
        br_if $do-loop|05
       end
      end
      i32.const 0
     end
     i32.eqz
     if
      i32.const 5152
      i32.const 7584
      i32.const 64
      i32.const 13
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.store
     local.get $1
     global.get $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
     local.tee $1
     i32.store offset=4
     local.get $0
     local.get $1
     call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode
     local.set $0
     br $folding-inner1
    end
    i32.const 7712
    i32.const 7584
    i32.const 68
    i32.const 11
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner8
   block $folding-inner6
    block $folding-inner4
     block $folding-inner3 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner8
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.const 28
      memory.fill
      block $folding-inner2
       block $folding-inner1
        local.get $1
        i32.eqz
        br_if $folding-inner1
        block $case8|0
         block $case6|0
          block $case5|0
           block $case4|0
            block $case3|0
             block $case2|0
              block $case1|0
               block $case0|0
                local.get $1
                i32.load
                i32.const 1
                i32.sub
                br_table $folding-inner1 $case3|0 $case2|0 $case1|0 $case4|0 $case5|0 $case8|0 $case0|0 $case8|0 $case6|0 $case8|0
               end
               global.get $~lib/memory/__stack_pointer
               block $__inlined_func$~lib/rt/__instanceof (result i32)
                local.get $1
                local.tee $2
                i32.const 20
                i32.sub
                i32.load offset=12
                local.tee $1
                i32.const 21616
                i32.load
                i32.le_u
                if
                 loop $do-loop|0
                  i32.const 1
                  local.get $1
                  i32.const 30
                  i32.eq
                  br_if $__inlined_func$~lib/rt/__instanceof
                  drop
                  local.get $1
                  i32.const 3
                  i32.shl
                  i32.const 21620
                  i32.add
                  i32.load offset=4
                  local.tee $1
                  br_if $do-loop|0
                 end
                end
                i32.const 0
               end
               i32.eqz
               if
                i32.const 5152
                i32.const 7392
                i32.const 184
                i32.const 22
                call $~lib/builtins/abort
                unreachable
               end
               local.get $2
               i32.store
               global.get $~lib/memory/__stack_pointer
               local.tee $1
               local.get $2
               i32.load offset=4
               local.tee $3
               i32.store offset=4
               local.get $1
               local.get $0
               local.get $3
               call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
               local.tee $0
               i32.store offset=8
               local.get $2
               i32.load offset=8
               local.tee $1
               i32.const 63
               i32.eq
               if
                local.get $2
                i32.load8_u offset=12
                global.get $~lib/memory/__stack_pointer
                i32.const 16
                i32.sub
                global.set $~lib/memory/__stack_pointer
                global.get $~lib/memory/__stack_pointer
                i32.const 22740
                i32.lt_s
                br_if $folding-inner8
                global.get $~lib/memory/__stack_pointer
                local.tee $1
                i64.const 0
                i64.store
                local.get $1
                i64.const 0
                i64.store offset=8
                i32.const 0
                global.set $~argumentsLength
                local.get $1
                i32.const 0
                call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
                local.tee $2
                i32.store
                i32.const 0
                global.set $~argumentsLength
                global.get $~lib/memory/__stack_pointer
                i32.const 0
                call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
                local.tee $1
                i32.store offset=4
                if
                 global.get $~lib/memory/__stack_pointer
                 local.tee $3
                 local.get $2
                 i32.load
                 local.tee $4
                 i32.store offset=8
                 local.get $3
                 local.get $0
                 i32.load
                 local.tee $3
                 i32.store offset=12
                 local.get $4
                 local.get $3
                 call $~lib/array/Array<~lib/string/String>#push
                 drop
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.load
                 local.tee $3
                 i32.store offset=8
                 local.get $3
                 local.get $1
                 call $~lib/array/Array<~lib/string/String>#push
                 drop
                else
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.load
                 local.tee $3
                 i32.store offset=8
                 local.get $3
                 local.get $1
                 call $~lib/array/Array<~lib/string/String>#push
                 drop
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.load
                 local.tee $3
                 i32.store offset=8
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.load
                 local.tee $4
                 i32.store offset=12
                 local.get $3
                 local.get $4
                 call $~lib/array/Array<~lib/string/String>#push
                 drop
                end
                global.get $~lib/memory/__stack_pointer
                local.get $0
                i32.load offset=4
                i32.load
                local.tee $0
                i32.store offset=8
                local.get $0
                local.get $1
                call $~lib/array/Array<~lib/string/String>#push
                drop
                br $folding-inner2
               else
                local.get $1
                i32.const 43
                i32.eq
                if
                 local.get $2
                 i32.load8_u offset=12
                 global.get $~lib/memory/__stack_pointer
                 i32.const 16
                 i32.sub
                 global.set $~lib/memory/__stack_pointer
                 global.get $~lib/memory/__stack_pointer
                 i32.const 22740
                 i32.lt_s
                 br_if $folding-inner8
                 global.get $~lib/memory/__stack_pointer
                 local.tee $2
                 i64.const 0
                 i64.store
                 local.get $2
                 i64.const 0
                 i64.store offset=8
                 i32.const 0
                 global.set $~argumentsLength
                 local.get $2
                 i32.const 0
                 call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
                 local.tee $2
                 i32.store
                 i32.const 0
                 global.set $~argumentsLength
                 global.get $~lib/memory/__stack_pointer
                 i32.const 0
                 call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
                 local.tee $3
                 i32.store offset=4
                 global.get $~lib/memory/__stack_pointer
                 local.get $2
                 i32.load
                 local.tee $4
                 i32.store offset=8
                 global.get $~lib/memory/__stack_pointer
                 local.get $0
                 i32.load
                 local.tee $5
                 i32.store offset=12
                 local.get $4
                 local.get $5
                 call $~lib/array/Array<~lib/string/String>#push
                 drop
                 if
                  global.get $~lib/memory/__stack_pointer
                  local.tee $1
                  local.get $0
                  i32.load offset=4
                  i32.load
                  local.tee $4
                  i32.store offset=8
                  local.get $1
                  local.get $0
                  i32.load
                  local.tee $1
                  i32.store offset=12
                  local.get $4
                  local.get $1
                  call $~lib/array/Array<~lib/string/String>#push
                  drop
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.load offset=4
                  i32.load
                  local.tee $0
                  i32.store offset=8
                  local.get $0
                  local.get $3
                  call $~lib/array/Array<~lib/string/String>#push
                  drop
                 else
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.load offset=4
                  i32.load
                  local.tee $1
                  i32.store offset=8
                  local.get $1
                  local.get $3
                  call $~lib/array/Array<~lib/string/String>#push
                  drop
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.load offset=4
                  i32.load
                  local.tee $1
                  i32.store offset=8
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.load
                  local.tee $0
                  i32.store offset=12
                  local.get $1
                  local.get $0
                  call $~lib/array/Array<~lib/string/String>#push
                  drop
                 end
                 local.get $2
                 local.get $3
                 call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
                 br $folding-inner3
                else
                 local.get $1
                 i32.const 42
                 i32.eq
                 if
                  local.get $2
                  i32.load8_u offset=12
                  global.get $~lib/memory/__stack_pointer
                  i32.const 16
                  i32.sub
                  global.set $~lib/memory/__stack_pointer
                  global.get $~lib/memory/__stack_pointer
                  i32.const 22740
                  i32.lt_s
                  br_if $folding-inner8
                  global.get $~lib/memory/__stack_pointer
                  local.tee $1
                  i64.const 0
                  i64.store
                  local.get $1
                  i64.const 0
                  i64.store offset=8
                  i32.const 0
                  global.set $~argumentsLength
                  local.get $1
                  i32.const 0
                  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
                  local.tee $2
                  i32.store
                  i32.const 0
                  global.set $~argumentsLength
                  global.get $~lib/memory/__stack_pointer
                  i32.const 0
                  call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
                  local.tee $1
                  i32.store offset=4
                  if
                   global.get $~lib/memory/__stack_pointer
                   local.tee $3
                   local.get $0
                   i32.load offset=4
                   i32.load
                   local.tee $4
                   i32.store offset=8
                   local.get $3
                   local.get $0
                   i32.load
                   local.tee $3
                   i32.store offset=12
                   local.get $4
                   local.get $3
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load offset=4
                   i32.load
                   local.tee $3
                   i32.store offset=8
                   local.get $3
                   local.get $1
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.load
                   local.tee $3
                   i32.store offset=8
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load
                   local.tee $0
                   i32.store offset=12
                   local.get $3
                   local.get $0
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.load
                   local.tee $0
                   i32.store offset=8
                   local.get $0
                   local.get $1
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                  else
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load offset=4
                   i32.load
                   local.tee $3
                   i32.store offset=8
                   local.get $3
                   local.get $1
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load offset=4
                   i32.load
                   local.tee $3
                   i32.store offset=8
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load
                   local.tee $4
                   i32.store offset=12
                   local.get $3
                   local.get $4
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.load
                   local.tee $3
                   i32.store offset=8
                   local.get $3
                   local.get $1
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                   global.get $~lib/memory/__stack_pointer
                   local.get $2
                   i32.load
                   local.tee $3
                   i32.store offset=8
                   global.get $~lib/memory/__stack_pointer
                   local.get $0
                   i32.load
                   local.tee $0
                   i32.store offset=12
                   local.get $3
                   local.get $0
                   call $~lib/array/Array<~lib/string/String>#push
                   drop
                  end
                  br $folding-inner2
                 else
                  global.get $~lib/memory/__stack_pointer
                  i32.const 7504
                  i32.store offset=12
                  i32.const 1
                  global.set $~argumentsLength
                  local.get $1
                  call $~lib/string/String.fromCharCode@varargs
                  local.set $0
                  global.get $~lib/memory/__stack_pointer
                  local.get $0
                  i32.store offset=4
                  i32.const 7504
                  local.get $0
                  call $~lib/string/String#concat
                  i32.const 7392
                  i32.const 194
                  i32.const 11
                  call $~lib/builtins/abort
                  unreachable
                 end
                 unreachable
                end
                unreachable
               end
               unreachable
              end
              block $__inlined_func$~lib/rt/__instanceof0 (result i32)
               local.get $1
               local.tee $2
               i32.const 20
               i32.sub
               i32.load offset=12
               local.tee $1
               i32.const 21616
               i32.load
               i32.le_u
               if
                loop $do-loop|02
                 i32.const 1
                 local.get $1
                 i32.const 27
                 i32.eq
                 br_if $__inlined_func$~lib/rt/__instanceof0
                 drop
                 local.get $1
                 i32.const 3
                 i32.shl
                 i32.const 21620
                 i32.add
                 i32.load offset=4
                 local.tee $1
                 br_if $do-loop|02
                end
               end
               i32.const 0
              end
              i32.eqz
              if
               i32.const 5152
               i32.const 7392
               i32.const 201
               i32.const 37
               call $~lib/builtins/abort
               unreachable
              end
              global.get $~lib/memory/__stack_pointer
              local.tee $1
              local.get $2
              i32.store offset=4
              local.get $1
              local.get $0
              i32.load
              local.tee $0
              i32.store offset=16
              local.get $2
              local.get $0
              call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterNode
              local.set $1
              global.get $~lib/memory/__stack_pointer
              local.get $1
              i32.store offset=12
              global.get $~lib/memory/__stack_pointer
              i32.const 8
              i32.sub
              global.set $~lib/memory/__stack_pointer
              global.get $~lib/memory/__stack_pointer
              i32.const 22740
              i32.lt_s
              br_if $folding-inner8
              global.get $~lib/memory/__stack_pointer
              local.tee $0
              i64.const 0
              i64.store
              i32.const 0
              global.set $~argumentsLength
              local.get $0
              i32.const 0
              call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
              local.tee $0
              i32.store
              global.get $~lib/memory/__stack_pointer
              local.set $3
              global.get $~lib/memory/__stack_pointer
              i32.const 8
              i32.sub
              global.set $~lib/memory/__stack_pointer
              global.get $~lib/memory/__stack_pointer
              i32.const 22740
              i32.lt_s
              br_if $folding-inner8
              global.get $~lib/memory/__stack_pointer
              local.tee $2
              i64.const 0
              i64.store
              local.get $2
              i32.const 16
              i32.const 38
              call $~lib/rt/itcms/__new
              local.tee $2
              i32.store
              br $folding-inner4
             end
             global.get $~lib/memory/__stack_pointer
             block $__inlined_func$~lib/rt/__instanceof3 (result i32)
              local.get $1
              local.tee $2
              i32.const 20
              i32.sub
              i32.load offset=12
              local.tee $1
              i32.const 21616
              i32.load
              i32.le_u
              if
               loop $do-loop|05
                i32.const 1
                local.get $1
                i32.const 22
                i32.eq
                br_if $__inlined_func$~lib/rt/__instanceof3
                drop
                local.get $1
                i32.const 3
                i32.shl
                i32.const 21620
                i32.add
                i32.load offset=4
                local.tee $1
                br_if $do-loop|05
               end
              end
              i32.const 0
             end
             i32.eqz
             if
              i32.const 5152
              i32.const 7392
              i32.const 204
              i32.const 30
              call $~lib/builtins/abort
              unreachable
             end
             local.get $2
             i32.load offset=4
             local.tee $2
             i32.store offset=20
             local.get $2
             i32.load offset=12
             i32.eqz
             br_if $folding-inner1
             global.get $~lib/memory/__stack_pointer
             local.get $2
             i32.const 0
             call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
             local.set $3
             global.get $~lib/memory/__stack_pointer
             local.get $3
             i32.store offset=4
             local.get $0
             local.get $3
             call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
             local.tee $1
             i32.store offset=8
             i32.const 1
             local.set $3
             local.get $2
             i32.load offset=12
             local.set $4
             loop $for-loop|1
              local.get $3
              local.get $4
              i32.lt_s
              if
               global.get $~lib/memory/__stack_pointer
               local.get $2
               local.get $3
               call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
               local.set $6
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store offset=16
               local.get $0
               local.get $6
               call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
               local.set $6
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.sub
               global.set $~lib/memory/__stack_pointer
               global.get $~lib/memory/__stack_pointer
               i32.const 22740
               i32.lt_s
               br_if $folding-inner8
               global.get $~lib/memory/__stack_pointer
               local.tee $7
               i64.const 0
               i64.store
               local.get $7
               i32.const 0
               i32.store offset=8
               local.get $7
               local.get $1
               i32.load offset=4
               i32.load
               local.tee $8
               i32.store
               local.get $7
               local.get $6
               i32.load
               local.tee $7
               i32.store offset=4
               local.get $8
               local.get $7
               call $~lib/array/Array<~lib/string/String>#push
               drop
               global.get $~lib/memory/__stack_pointer
               local.get $1
               i32.load
               local.tee $1
               i32.store offset=4
               global.get $~lib/memory/__stack_pointer
               local.get $6
               i32.load offset=4
               local.tee $6
               i32.store offset=8
               local.get $1
               local.get $6
               call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
               local.set $1
               global.get $~lib/memory/__stack_pointer
               i32.const 12
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $1
               i32.store offset=8
               local.get $3
               i32.const 1
               i32.add
               local.set $3
               br $for-loop|1
              end
             end
             global.get $~lib/memory/__stack_pointer
             i32.const 28
             i32.add
             global.set $~lib/memory/__stack_pointer
             local.get $1
             return
            end
            global.get $~lib/memory/__stack_pointer
            block $__inlined_func$~lib/rt/__instanceof7 (result i32)
             local.get $1
             i32.const 20
             i32.sub
             i32.load offset=12
             local.tee $2
             i32.const 21616
             i32.load
             i32.le_u
             if
              loop $do-loop|09
               i32.const 1
               local.get $2
               i32.const 23
               i32.eq
               br_if $__inlined_func$~lib/rt/__instanceof7
               drop
               local.get $2
               i32.const 3
               i32.shl
               i32.const 21620
               i32.add
               i32.load offset=4
               local.tee $2
               br_if $do-loop|09
              end
             end
             i32.const 0
            end
            i32.eqz
            if
             i32.const 5152
             i32.const 7392
             i32.const 215
             i32.const 22
             call $~lib/builtins/abort
             unreachable
            end
            local.get $1
            i32.store offset=8
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.load offset=4
            local.tee $2
            i32.store offset=24
            local.get $0
            local.get $2
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
            local.set $2
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.store offset=12
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.load offset=8
            local.tee $1
            i32.store offset=24
            local.get $0
            local.get $1
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
            local.set $0
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            i32.const 16
            i32.sub
            global.set $~lib/memory/__stack_pointer
            global.get $~lib/memory/__stack_pointer
            i32.const 22740
            i32.lt_s
            br_if $folding-inner8
            global.get $~lib/memory/__stack_pointer
            local.tee $1
            i64.const 0
            i64.store
            local.get $1
            i64.const 0
            i64.store offset=8
            i32.const 0
            global.set $~argumentsLength
            local.get $1
            i32.const 0
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
            local.tee $1
            i32.store
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.load
            local.tee $3
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.load
            local.tee $4
            i32.store offset=8
            local.get $3
            local.get $4
            call $~lib/array/Array<~lib/string/String>#push
            drop
            global.get $~lib/memory/__stack_pointer
            local.get $1
            i32.load
            local.tee $3
            i32.store offset=4
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load
            local.tee $4
            i32.store offset=8
            local.get $3
            local.get $4
            call $~lib/array/Array<~lib/string/String>#push
            drop
            i32.const 0
            global.set $~argumentsLength
            global.get $~lib/memory/__stack_pointer
            i32.const 0
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
            local.tee $3
            i32.store offset=12
            global.get $~lib/memory/__stack_pointer
            local.get $2
            i32.load offset=4
            i32.load
            local.tee $2
            i32.store offset=4
            local.get $2
            local.get $3
            call $~lib/array/Array<~lib/string/String>#push
            drop
            global.get $~lib/memory/__stack_pointer
            local.get $0
            i32.load offset=4
            i32.load
            local.tee $0
            i32.store offset=4
            local.get $0
            local.get $3
            call $~lib/array/Array<~lib/string/String>#push
            drop
            local.get $1
            local.get $3
            call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
            br $folding-inner3
           end
           block $__inlined_func$~lib/rt/__instanceof10 (result i32)
            local.get $1
            i32.const 20
            i32.sub
            i32.load offset=12
            local.tee $2
            i32.const 21616
            i32.load
            i32.le_u
            if
             loop $do-loop|012
              i32.const 1
              local.get $2
              i32.const 31
              i32.eq
              br_if $__inlined_func$~lib/rt/__instanceof10
              drop
              local.get $2
              i32.const 3
              i32.shl
              i32.const 21620
              i32.add
              i32.load offset=4
              local.tee $2
              br_if $do-loop|012
             end
            end
            i32.const 0
           end
           i32.eqz
           if
            i32.const 5152
            i32.const 7392
            i32.const 224
            i32.const 13
            call $~lib/builtins/abort
            unreachable
           end
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           local.get $1
           i32.store offset=4
           local.get $2
           local.get $0
           i32.load
           local.tee $0
           i32.store offset=16
           local.get $2
           i32.const 12
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner8
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           i64.const 0
           i64.store
           local.get $2
           i32.const 0
           i32.store offset=8
           local.get $0
           global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher._flags
           local.get $2
           local.get $1
           i32.load offset=4
           local.tee $4
           i32.store
           local.get $2
           i32.const 7824
           i32.store offset=4
           local.get $2
           i32.const 12
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner8
           global.get $~lib/memory/__stack_pointer
           local.tee $0
           i64.const 0
           i64.store
           local.get $0
           i32.const 0
           i32.store offset=8
           local.get $0
           local.get $4
           i32.load offset=12
           local.tee $5
           i32.const 2
           i32.const 40
           i32.const 0
           call $~lib/rt/__newArray
           local.tee $6
           i32.store
           local.get $6
           i32.load offset=4
           local.set $7
           loop $for-loop|0
            local.get $3
            local.get $5
            local.get $4
            i32.load offset=12
            local.tee $0
            local.get $0
            local.get $5
            i32.gt_s
            select
            i32.lt_s
            if
             global.get $~lib/memory/__stack_pointer
             local.tee $8
             local.get $3
             i32.const 2
             i32.shl
             local.tee $0
             local.get $4
             i32.load offset=4
             i32.add
             i32.load
             local.tee $9
             i32.store offset=4
             i32.const 3
             global.set $~argumentsLength
             local.get $8
             local.get $9
             local.get $3
             local.get $4
             i32.const 7824
             i32.load
             call_indirect $0 (type $i32_i32_i32_=>_i32)
             local.tee $8
             i32.store offset=8
             local.get $0
             local.get $7
             i32.add
             local.get $8
             i32.store
             local.get $8
             if
              local.get $6
              local.get $8
              i32.const 1
              call $byn-split-outlined-A$~lib/rt/itcms/__link
             end
             local.get $3
             i32.const 1
             i32.add
             local.set $3
             br $for-loop|0
            end
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $2
           local.get $6
           i32.store offset=8
           local.get $1
           i32.load8_u offset=8
           local.set $0
           global.get $~lib/memory/__stack_pointer
           i32.const 4
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner8
           global.get $~lib/memory/__stack_pointer
           local.tee $1
           i32.const 0
           i32.store
           local.get $1
           i32.const 9
           i32.const 39
           call $~lib/rt/itcms/__new
           local.tee $1
           i32.store
           local.get $1
           local.get $6
           i32.store offset=4
           local.get $6
           if
            local.get $1
            local.get $6
            i32.const 0
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
           local.get $1
           local.get $0
           i32.store8 offset=8
           global.get $~lib/memory/__stack_pointer
           local.get $1
           i32.const 3
           call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor
           local.tee $1
           i32.store
           global.get $~lib/memory/__stack_pointer
           i32.const 4
           i32.add
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 12
           i32.add
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           local.tee $0
           local.get $1
           i32.store offset=12
           local.get $0
           i32.const 8
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner8
           global.get $~lib/memory/__stack_pointer
           local.tee $0
           i64.const 0
           i64.store
           i32.const 0
           global.set $~argumentsLength
           local.get $0
           i32.const 0
           call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
           local.tee $0
           i32.store
           global.get $~lib/memory/__stack_pointer
           local.set $3
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.sub
           global.set $~lib/memory/__stack_pointer
           global.get $~lib/memory/__stack_pointer
           i32.const 22740
           i32.lt_s
           br_if $folding-inner8
           global.get $~lib/memory/__stack_pointer
           local.tee $2
           i64.const 0
           i64.store
           local.get $2
           i32.const 16
           i32.const 46
           call $~lib/rt/itcms/__new
           local.tee $2
           i32.store
           br $folding-inner4
          end
          block $__inlined_func$~lib/rt/__instanceof13 (result i32)
           local.get $1
           i32.const 20
           i32.sub
           i32.load offset=12
           local.tee $2
           i32.const 21616
           i32.load
           i32.le_u
           if
            loop $do-loop|015
             i32.const 1
             local.get $2
             i32.const 28
             i32.eq
             br_if $__inlined_func$~lib/rt/__instanceof13
             drop
             local.get $2
             i32.const 3
             i32.shl
             i32.const 21620
             i32.add
             i32.load offset=4
             local.tee $2
             br_if $do-loop|015
            end
           end
           i32.const 0
          end
          i32.eqz
          if
           i32.const 5152
           i32.const 7392
           i32.const 231
           i32.const 13
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $1
          i32.store offset=4
          local.get $2
          local.get $0
          i32.load
          local.tee $0
          i32.store offset=16
          local.get $1
          local.get $0
          call $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher.fromCharacterClassNode
          local.set $1
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.store offset=12
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner8
          global.get $~lib/memory/__stack_pointer
          local.tee $0
          i64.const 0
          i64.store
          i32.const 0
          global.set $~argumentsLength
          local.get $0
          i32.const 0
          call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
          local.tee $0
          i32.store
          global.get $~lib/memory/__stack_pointer
          local.set $3
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner8
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          i64.const 0
          i64.store
          local.get $2
          i32.const 16
          i32.const 47
          call $~lib/rt/itcms/__new
          local.tee $2
          i32.store
          br $folding-inner4
         end
         global.get $~lib/memory/__stack_pointer
         block $__inlined_func$~lib/rt/__instanceof16 (result i32)
          local.get $1
          i32.const 20
          i32.sub
          i32.load offset=12
          local.tee $2
          i32.const 21616
          i32.load
          i32.le_u
          if
           loop $do-loop|018
            i32.const 1
            local.get $2
            i32.const 24
            i32.eq
            br_if $__inlined_func$~lib/rt/__instanceof16
            drop
            local.get $2
            i32.const 3
            i32.shl
            i32.const 21620
            i32.add
            i32.load offset=4
            local.tee $2
            br_if $do-loop|018
           end
          end
          i32.const 0
         end
         i32.eqz
         if
          i32.const 5152
          i32.const 7392
          i32.const 236
          i32.const 22
          call $~lib/builtins/abort
          unreachable
         end
         local.get $1
         i32.store offset=8
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load offset=4
         local.tee $2
         i32.store offset=16
         local.get $0
         local.get $2
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store offset=12
         local.get $1
         i32.load8_u offset=8
         local.set $2
         local.get $1
         i32.load offset=12
         local.set $1
         global.get $~lib/memory/__stack_pointer
         i32.const 20
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner8
         global.get $~lib/memory/__stack_pointer
         local.tee $3
         i32.const 0
         i32.const 20
         memory.fill
         local.get $3
         local.get $0
         i32.load
         local.tee $4
         i32.store
         local.get $3
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner8
         global.get $~lib/memory/__stack_pointer
         local.tee $5
         i64.const 0
         i64.store
         local.get $5
         i32.const 24
         i32.const 15
         call $~lib/rt/itcms/__new
         local.tee $5
         i32.store
         local.get $5
         local.get $2
         i32.store8 offset=17
         local.get $5
         local.get $1
         i32.store offset=20
         local.get $5
         i32.const -1
         i32.store offset=8
         local.get $5
         i32.const 3936
         i32.store offset=12
         local.get $5
         i32.const 3936
         i32.const 0
         call $byn-split-outlined-A$~lib/rt/itcms/__link
         local.get $5
         i32.const 0
         i32.store8 offset=16
         i32.const 0
         global.set $~argumentsLength
         global.get $~lib/memory/__stack_pointer
         local.get $5
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
         local.tee $1
         i32.store
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load
         local.tee $2
         i32.store offset=4
         local.get $2
         local.get $4
         call $~lib/array/Array<~lib/string/String>#push
         drop
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $3
         local.get $1
         i32.store offset=4
         i32.const 0
         global.set $~argumentsLength
         global.get $~lib/memory/__stack_pointer
         i32.const 0
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
         local.tee $2
         i32.store offset=8
         global.get $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner8
         global.get $~lib/memory/__stack_pointer
         local.tee $4
         i64.const 0
         i64.store
         local.get $4
         i32.const 12
         i32.const 48
         call $~lib/rt/itcms/__new
         local.tee $4
         i32.store
         local.get $4
         local.get $1
         i32.store offset=8
         local.get $1
         if
          local.get $4
          local.get $1
          i32.const 0
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         i32.const 0
         global.set $~argumentsLength
         global.get $~lib/memory/__stack_pointer
         local.get $4
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
         local.tee $4
         i32.store
         global.get $~lib/memory/__stack_pointer
         local.get $4
         i32.load
         local.tee $5
         i32.store offset=4
         local.get $5
         local.get $2
         call $~lib/array/Array<~lib/string/String>#push
         drop
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $4
         i32.store offset=12
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load offset=4
         i32.load
         local.tee $0
         i32.store offset=16
         local.get $0
         local.get $4
         call $~lib/array/Array<~lib/string/String>#push
         drop
         local.get $1
         local.get $2
         call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 20
         i32.add
         global.set $~lib/memory/__stack_pointer
         br $folding-inner6
        end
        i32.const 7856
        i32.const 7392
        i32.const 246
        i32.const 9
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner8
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i64.const 0
       i64.store
       local.get $0
       i32.const 0
       i32.store offset=8
       i32.const 0
       global.set $~argumentsLength
       local.get $0
       i32.const 0
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
       local.tee $0
       i32.store
       i32.const 0
       global.set $~argumentsLength
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
       local.tee $1
       i32.store offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.load
       local.tee $2
       i32.store offset=8
       local.get $2
       local.get $1
       call $~lib/array/Array<~lib/string/String>#push
       drop
       local.get $0
       local.get $1
       call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $folding-inner6
      end
      local.get $2
      local.get $1
      call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $folding-inner6
    end
    local.get $2
    local.get $1
    i32.store offset=12
    local.get $1
    if
     local.get $2
     local.get $1
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 0
    i32.store8 offset=8
    i32.const 0
    global.set $~argumentsLength
    global.get $~lib/memory/__stack_pointer
    local.get $2
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $2
    i32.store offset=4
    local.get $2
    local.get $0
    call $~lib/array/Array<~lib/string/String>#push
    drop
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    local.get $1
    i32.store offset=4
    local.get $1
    local.get $0
    call $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor~anonymous|0 (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $1
      i32.const 15
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 15
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 5040
    i32.const 141
    i32.const 29
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.store
   local.get $0
   i32.load8_u offset=17
   if
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
    local.tee $2
    i32.store offset=4
    block $__inlined_func$~lib/rt/__instanceof3 (result i32)
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|05
       i32.const 1
       local.get $1
       i32.const 15
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof3
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|05
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 5040
     i32.const 143
     i32.const 26
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    local.get $2
    local.get $0
    call $~lib/array/Array<~lib/string/String>#push
    drop
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/walker/walker (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const -1
  local.set $3
  block $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
   local.get $2
   i32.load offset=12
   local.tee $6
   i32.const 0
   i32.le_s
   i32.const 1
   local.get $6
   select
   br_if $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
   local.get $2
   i32.load offset=4
   local.set $5
   loop $while-continue|0
    local.get $4
    local.get $6
    i32.lt_s
    if
     local.get $5
     local.get $4
     local.tee $3
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.get $0
     i32.eq
     br_if $__inlined_func$~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#indexOf
     local.get $3
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   i32.const -1
   local.set $3
  end
  local.get $3
  i32.const 0
  i32.ge_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 1
  global.set $~argumentsLength
  local.get $0
  local.get $1
  i32.load
  call_indirect $0 (type $i32_=>_none)
  local.get $2
  local.get $0
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $5
  i32.store
  i32.const 0
  local.set $0
  local.get $5
  i32.load offset=12
  local.set $4
  loop $for-loop|0
   local.get $0
   local.get $4
   i32.lt_s
   if
    local.get $5
    local.get $0
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=4
    local.get $3
    local.get $1
    local.get $2
    call $~lib/assemblyscript-regex/assembly/nfa/walker/walker
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 28
   memory.fill
   local.get $1
   i32.const 28
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   local.get $0
   i32.store offset=20
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $1
   i32.const 4848
   i32.store offset=24
   local.get $1
   i32.const 4848
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store8 offset=12
   local.get $1
   i32.const 0
   i32.store8 offset=13
   local.get $1
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 4
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $3
   i32.const 0
   i32.store
   local.get $3
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#constructor
   local.tee $0
   i32.store
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   local.get $3
   i32.load
   local.tee $0
   i32.store
   local.get $0
   call $~lib/assemblyscript-regex/assembly/parser/string-iterator/StringIterator#more
   if (result i32)
    local.get $3
    call $~lib/assemblyscript-regex/assembly/parser/parser/Parser#parseSequence
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=4
    local.get $0
    call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
   else
    i32.const 0
    call $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor
   end
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 4
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store8
   local.get $2
   i32.const 0
   i32.store8 offset=1
   local.get $2
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 0
   i32.store8 offset=3
   global.get $~lib/memory/__stack_pointer
   i32.const 4848
   i32.store offset=4
   local.get $2
   i32.const 4848
   i32.const 4848
   i32.const 0
   call $~lib/string/String#indexOf
   i32.const -1
   i32.ne
   i32.store8
   global.get $~lib/memory/__stack_pointer
   i32.const 4880
   i32.store offset=4
   local.get $2
   i32.const 4848
   i32.const 4880
   i32.const 0
   call $~lib/string/String#indexOf
   i32.const -1
   i32.ne
   i32.store8 offset=1
   global.get $~lib/memory/__stack_pointer
   i32.const 4912
   i32.store offset=4
   local.get $2
   i32.const 4848
   i32.const 4912
   i32.const 0
   call $~lib/string/String#indexOf
   i32.const -1
   i32.ne
   i32.store8 offset=2
   global.get $~lib/memory/__stack_pointer
   i32.const 4944
   i32.store offset=4
   local.get $2
   i32.const 4848
   i32.const 4944
   i32.const 0
   call $~lib/string/String#indexOf
   i32.const -1
   i32.ne
   i32.store8 offset=3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   local.tee $0
   i32.store offset=12
   local.get $0
   if (result i32)
    local.get $0
    i32.load
    i32.const 3
    i32.eq
   else
    i32.const 0
   end
   if
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $4
     i32.load offset=4
     local.tee $3
     i32.store offset=16
     local.get $3
     i32.eqz
     if
      i32.const 4976
      i32.const 5040
      i32.const 128
      i32.const 28
      call $~lib/builtins/abort
      unreachable
     end
     local.get $5
     local.get $3
     i32.store offset=16
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 22
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 5040
     i32.const 128
     i32.const 28
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    local.get $3
    i32.load offset=4
    local.tee $0
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    i32.load
    local.tee $3
    i32.store offset=20
    local.get $1
    local.get $3
    i32.const 94
    call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is
    i32.store8 offset=13
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.get $0
    i32.load offset=12
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $0
    i32.store offset=20
    local.get $1
    local.get $0
    i32.const 36
    call $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode.is
    i32.store8 offset=12
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 7328
   i32.store offset=24
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   local.get $4
   i32.load offset=4
   local.tee $0
   i32.store
   local.get $0
   if
    local.get $0
    local.get $4
    i32.const 7328
    call $~lib/assemblyscript-regex/assembly/parser/walker/walkNode
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 4
   i32.const 35
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   local.get $0
   local.get $2
   i32.store
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.load offset=4
   local.tee $3
   i32.store offset=4
   local.get $0
   local.get $3
   call $~lib/assemblyscript-regex/assembly/nfa/nfa/AutomataFactor#automataForNode
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store offset=8
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor
   global.set $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.load offset=8
   i32.load
   local.tee $4
   i32.store offset=20
   local.get $3
   i32.const 7920
   i32.store offset=24
   i32.const 2
   global.set $~argumentsLength
   i32.const 0
   local.set $0
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 14
    i32.const 7952
    call $~lib/rt/__newArray
    local.tee $0
    i32.store
   end
   local.get $4
   i32.const 7920
   local.get $0
   call $~lib/assemblyscript-regex/assembly/nfa/walker/walker
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   global.get $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
   local.tee $0
   i32.store offset=16
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $1
   local.get $2
   i32.store offset=4
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner3
   block $folding-inner2
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    i64.const 0
    i64.store
    local.get $4
    i64.const 0
    i64.store offset=8
    local.get $2
    i32.load offset=12
    local.set $4
    loop $for-loop|0
     local.get $4
     local.get $5
     i32.gt_s
     if
      local.get $5
      local.get $2
      i32.load offset=12
      i32.ge_u
      if
       i32.const 3728
       i32.const 4016
       i32.const 114
       i32.const 42
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      i32.load offset=4
      local.get $5
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.get $0
      i32.load offset=4
      i32.eq
      br_if $folding-inner3
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      br $for-loop|0
     end
    end
    local.get $0
    i32.load offset=4
    local.set $4
    local.get $2
    local.get $2
    i32.load offset=12
    local.tee $5
    i32.const 1
    i32.add
    local.tee $6
    i32.const 2
    i32.const 1
    call $~lib/array/ensureCapacity
    local.get $2
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $4
    i32.store
    local.get $2
    local.get $6
    i32.store offset=12
    block $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@virtual
     block $folding-inner10
      block $default
       block $case4
        block $case3
         block $case2
          block $case1
           local.get $0
           local.tee $4
           i32.const 8
           i32.sub
           i32.load
           local.tee $0
           i32.const 15
           i32.ne
           if
            local.get $0
            i32.const 38
            i32.sub
            br_table $case2 $default $default $default $default $default $default $default $case3 $case4 $case1 $default
           end
           local.get $4
           local.get $3
           i32.store offset=8
           i32.const 2
           local.set $0
           br $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@virtual
          end
          local.get $4
          i32.load offset=8
          i32.load8_u offset=17
          if
           local.get $1
           local.get $4
           i32.load offset=8
           local.tee $0
           i32.load offset=8
           local.get $3
           call $~lib/string/String#substring
           local.set $5
           local.get $0
           local.get $5
           i32.store offset=12
           local.get $5
           if
            local.get $0
            local.get $5
            i32.const 0
            call $byn-split-outlined-A$~lib/rt/itcms/__link
           end
          end
          i32.const 2
          local.set $0
          br $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@virtual
         end
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner2
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         i32.const 0
         i32.store
         local.get $0
         local.get $4
         i32.load offset=12
         local.tee $0
         i32.store
         local.get $0
         i32.load offset=4
         local.get $3
         local.get $1
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
         i32.ge_u
         if (result i32)
          i32.const -1
         else
          local.get $1
          local.get $3
          i32.const 1
          i32.shl
          i32.add
          i32.load16_u
         end
         local.tee $5
         i32.const 32
         i32.or
         local.get $5
         local.get $0
         i32.load8_u offset=8
         select
         i32.ne
         local.set $0
         br $folding-inner10
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.sub
        global.set $~lib/memory/__stack_pointer
        global.get $~lib/memory/__stack_pointer
        i32.const 22740
        i32.lt_s
        br_if $folding-inner2
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        i32.const 0
        i32.store
        local.get $0
        local.get $4
        i32.load offset=12
        local.tee $0
        i32.store
        local.get $0
        local.get $3
        local.get $1
        i32.const 20
        i32.sub
        i32.load offset=16
        i32.const 1
        i32.shr_u
        i32.ge_u
        if (result i32)
         i32.const -1
        else
         local.get $1
         local.get $3
         i32.const 1
         i32.shl
         i32.add
         i32.load16_u
        end
        call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches
        i32.eqz
        local.set $0
        br $folding-inner10
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i32.const 0
       i32.store
       local.get $0
       local.get $4
       i32.load offset=12
       local.tee $0
       i32.store
       local.get $0
       local.get $3
       local.get $1
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const 1
       i32.shr_u
       i32.ge_u
       if (result i32)
        i32.const -1
       else
        local.get $1
        local.get $3
        i32.const 1
        i32.shl
        i32.add
        i32.load16_u
       end
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches
       i32.eqz
       local.set $0
       br $folding-inner10
      end
      i32.const 2
      local.set $0
      br $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/nfa/State#matches@virtual
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    local.get $0
    if
     local.get $0
     i32.const 1
     i32.eq
     br_if $folding-inner3
    else
     local.get $3
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.eq
     br_if $folding-inner3
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 51
     i32.const 8064
     call $~lib/rt/__newArray
     local.tee $2
     i32.store
     local.get $3
     i32.const 1
     i32.add
     local.set $3
    end
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.load
    local.tee $6
    i32.store offset=4
    block $folding-inner1
     local.get $6
     i32.load offset=12
     i32.eqz
     if
      local.get $1
      i32.const 0
      local.get $3
      call $~lib/string/String#substring
      local.set $0
      br $folding-inner1
     end
     i32.const 0
     local.set $5
     local.get $6
     i32.load offset=12
     local.set $7
     loop $for-loop|1
      local.get $5
      local.get $7
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.get $6
       local.get $5
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.set $0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=8
       local.get $0
       local.get $1
       local.get $2
       local.get $3
       call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch
       local.tee $0
       i32.store offset=12
       local.get $0
       i32.const 0
       call $~lib/string/String.__eq
       i32.eqz
       if
        local.get $4
        if (result i32)
         block $__inlined_func$~lib/rt/__instanceof (result i32)
          local.get $4
          i32.const 20
          i32.sub
          i32.load offset=12
          local.tee $1
          i32.const 21616
          i32.load
          i32.le_u
          if
           loop $do-loop|0
            i32.const 1
            local.get $1
            i32.const 15
            i32.eq
            br_if $__inlined_func$~lib/rt/__instanceof
            drop
            local.get $1
            i32.const 3
            i32.shl
            i32.const 21620
            i32.add
            i32.load offset=4
            local.tee $1
            br_if $do-loop|0
           end
          end
          i32.const 0
         end
        else
         i32.const 0
        end
        if
         block $__inlined_func$~lib/rt/__instanceof2 (result i32)
          local.get $4
          i32.const 20
          i32.sub
          i32.load offset=12
          local.tee $1
          i32.const 21616
          i32.load
          i32.le_u
          if
           loop $do-loop|04
            i32.const 1
            local.get $1
            i32.const 15
            i32.eq
            br_if $__inlined_func$~lib/rt/__instanceof2
            drop
            local.get $1
            i32.const 3
            i32.shl
            i32.const 21620
            i32.add
            i32.load offset=4
            local.tee $1
            br_if $do-loop|04
           end
          end
          i32.const 0
         end
         i32.eqz
         if
          i32.const 5152
          i32.const 5040
          i32.const 52
          i32.const 10
          call $~lib/builtins/abort
          unreachable
         end
         local.get $4
         i32.const 1
         i32.store8 offset=16
        end
        br $folding-inner1
       end
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|1
      end
     end
     br $folding-inner3
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 36
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 36
   memory.fill
   local.get $2
   local.get $0
   i32.load offset=16
   local.tee $6
   i32.store
   local.get $6
   i32.load offset=12
   local.set $2
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.gt_s
    if
     local.get $6
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $4
     i32.const 3936
     i32.store offset=12
     local.get $4
     i32.const 3936
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $7
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.load offset=8
    i32.load
    local.tee $0
    i32.store offset=4
    local.get $2
    i32.const 3936
    i32.store offset=8
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    local.get $0
    i32.const 3936
    call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs
    local.tee $0
    i32.store offset=12
    local.get $0
    i32.const 0
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     i32.const 2
     i32.const 3
     i32.const 0
     call $~lib/rt/__newArray
     local.tee $2
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load offset=4
     i32.store offset=20
     local.get $2
     i32.const 0
     local.get $0
     call $~lib/array/Array<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=8
     local.get $2
     i32.const 0
     local.get $1
     call $~lib/assemblyscript-regex/assembly/regexp/Match#constructor
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 36
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.load
   local.set $3
   loop $for-loop|1
    local.get $3
    local.tee $2
    local.get $7
    i32.const 1
    local.get $0
    i32.load8_u offset=13
    if (result i32)
     local.get $0
     i32.load offset=4
     i32.load8_u offset=3
    else
     i32.const 1
    end
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.load offset=8
     i32.load
     local.tee $8
     i32.store offset=4
     local.get $5
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     block $__inlined_func$~lib/string/String#substr
      local.get $1
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      local.tee $4
      local.get $2
      i32.const 0
      i32.lt_s
      if
       local.get $2
       local.get $4
       i32.add
       local.tee $2
       i32.const 0
       local.get $2
       i32.const 0
       i32.gt_s
       select
       local.set $2
      end
      local.get $2
      i32.sub
      i32.const 1
      i32.shl
      local.tee $9
      i32.const 0
      i32.le_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 3936
       local.set $4
       br $__inlined_func$~lib/string/String#substr
      end
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.const 1
      call $~lib/rt/itcms/__new
      local.tee $4
      i32.store
      local.get $4
      local.get $1
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      local.get $9
      memory.copy
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store offset=8
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $8
     local.get $4
     call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs
     local.tee $4
     i32.store offset=16
     local.get $4
     i32.const 0
     call $~lib/string/String.__eq
     i32.eqz
     if
      block $for-continue|1
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       i32.const 8128
       i32.store offset=8
       local.get $2
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       i32.const 0
       local.set $2
       local.get $6
       i32.load offset=12
       local.set $5
       loop $for-loop|04
        local.get $2
        local.get $5
        local.get $6
        i32.load offset=12
        local.tee $8
        local.get $5
        local.get $8
        i32.lt_s
        select
        i32.lt_s
        if
         global.get $~lib/memory/__stack_pointer
         local.get $6
         i32.load offset=4
         local.get $2
         i32.const 2
         i32.shl
         i32.add
         i32.load
         local.tee $8
         i32.store
         i32.const 3
         global.set $~argumentsLength
         local.get $8
         local.get $2
         local.get $6
         i32.const 8128
         i32.load
         call_indirect $0 (type $i32_i32_i32_=>_none)
         local.get $2
         i32.const 1
         i32.add
         local.set $2
         br $for-loop|04
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 1
       i32.const 2
       i32.const 3
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $8
       i32.store offset=24
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.load offset=4
       i32.store offset=28
       local.get $8
       i32.const 0
       local.get $4
       call $~lib/array/Array<~lib/string/String>#__uset
       local.get $8
       i32.store offset=28
       global.get $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.const 20
       memory.fill
       block $__inlined_func$~lib/assemblyscript-regex/assembly/regexp/lastCapturesForGroup
        local.get $6
        i32.load offset=12
        i32.eqz
        if
         i32.const 0
         i32.const 2
         i32.const 3
         i32.const 8160
         call $~lib/rt/__newArray
         local.set $4
         br $__inlined_func$~lib/assemblyscript-regex/assembly/regexp/lastCapturesForGroup
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $2
        i32.const 1
        i32.const 2
        i32.const 3
        i32.const 0
        call $~lib/rt/__newArray
        local.tee $4
        i32.store
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.load offset=4
        i32.store offset=4
        local.get $4
        i32.const 0
        local.get $6
        i32.load offset=4
        i32.load
        i32.load offset=12
        call $~lib/array/Array<~lib/string/String>#__uset
        local.get $2
        local.get $4
        i32.store offset=4
        local.get $6
        i32.load offset=4
        i32.load
        i32.load offset=20
        local.set $5
        i32.const 0
        local.set $2
        loop $for-loop|05
         local.get $2
         local.get $6
         i32.load offset=12
         i32.lt_s
         if
          global.get $~lib/memory/__stack_pointer
          local.get $6
          local.get $2
          call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
          local.tee $10
          i32.store offset=8
          local.get $10
          i32.load offset=20
          local.get $5
          i32.ne
          if
           local.get $10
           i32.load offset=20
           local.set $5
           global.get $~lib/memory/__stack_pointer
           local.get $10
           i32.load offset=12
           local.tee $10
           i32.store offset=12
           local.get $4
           local.get $10
           call $~lib/array/Array<~lib/string/String>#push
           drop
          else
           local.get $10
           i32.load8_u offset=16
           if
            local.get $4
            i32.load offset=12
            i32.const 1
            i32.sub
            local.set $11
            global.get $~lib/memory/__stack_pointer
            local.get $10
            i32.load offset=12
            local.tee $10
            i32.store offset=16
            local.get $4
            local.get $11
            local.get $10
            call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
           end
          end
          local.get $2
          i32.const 1
          i32.add
          local.set $2
          br $for-loop|05
         end
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.tee $2
       local.get $4
       i32.store offset=32
       local.get $2
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       local.get $8
       i32.load offset=12
       local.tee $2
       local.get $4
       i32.load offset=12
       local.tee $10
       i32.add
       local.tee $5
       i32.const 268435455
       i32.gt_u
       if
        i32.const 3968
        i32.const 4016
        i32.const 272
        i32.const 60
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.const 2
       i32.const 3
       i32.const 0
       call $~lib/rt/__newArray
       local.tee $11
       i32.store
       local.get $11
       i32.load offset=4
       local.set $12
       local.get $2
       i32.const 2
       i32.shl
       local.set $5
       local.get $8
       i32.load offset=4
       local.set $13
       i32.const 0
       local.set $2
       loop $for-loop|02
        local.get $2
        local.get $5
        i32.lt_u
        if
         local.get $2
         local.get $12
         i32.add
         local.get $2
         local.get $13
         i32.add
         i32.load
         local.tee $8
         i32.store
         local.get $8
         if
          local.get $11
          local.get $8
          i32.const 1
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         br $for-loop|02
        end
       end
       local.get $5
       local.get $12
       i32.add
       local.set $5
       local.get $4
       i32.load offset=4
       local.set $4
       local.get $10
       i32.const 2
       i32.shl
       local.set $8
       i32.const 0
       local.set $2
       loop $for-loop|15
        local.get $2
        local.get $8
        i32.lt_u
        if
         local.get $2
         local.get $5
         i32.add
         local.get $2
         local.get $4
         i32.add
         i32.load
         local.tee $10
         i32.store
         local.get $10
         if
          local.get $11
          local.get $10
          i32.const 1
          call $byn-split-outlined-A$~lib/rt/itcms/__link
         end
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         br $for-loop|15
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store offset=8
       local.get $11
       local.get $3
       local.get $1
       call $~lib/assemblyscript-regex/assembly/regexp/Match#constructor
       local.tee $2
       i32.store offset=24
       local.get $2
       i32.load offset=4
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.load
       local.tee $5
       i32.store offset=8
       local.get $5
       i32.const 0
       call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store offset=4
       local.get $5
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const 1
       i32.shr_u
       i32.add
       local.set $4
       local.get $0
       i32.load8_u offset=13
       if
        local.get $3
        i32.const 0
        local.get $0
        i32.load offset=4
        i32.load8_u offset=3
        select
        if (result i32)
         local.get $3
         i32.const 1
         i32.sub
         local.tee $5
         local.get $1
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
         i32.ge_u
         if (result i32)
          i32.const -1
         else
          local.get $1
          local.get $5
          i32.const 1
          i32.shl
          i32.add
          i32.load16_u
         end
         i32.const 10
         i32.ne
        else
         local.get $3
        end
        br_if $for-continue|1
       end
       local.get $0
       i32.load8_u offset=12
       if
        local.get $4
        local.get $7
        i32.ne
        i32.const 0
        local.get $0
        i32.load offset=4
        i32.load8_u offset=3
        select
        if (result i32)
         local.get $4
         local.get $1
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
         i32.ge_u
         if (result i32)
          i32.const -1
         else
          local.get $1
          local.get $4
          i32.const 1
          i32.shl
          i32.add
          i32.load16_u
         end
         i32.const 10
         i32.ne
        else
         local.get $4
         local.get $7
         i32.ne
        end
        br_if $for-continue|1
       end
       local.get $0
       i32.load offset=4
       i32.load8_u
       if
        local.get $0
        local.get $4
        i32.store
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 36
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $2
       return
      end
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   local.get $0
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 36
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/versionCompare/hasValidParts (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  loop $for-loop|0
   local.get $2
   local.get $1
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 7984
     i32.store
     i32.const 7984
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 8032
     i32.store
     i32.const 8032
    end
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    i32.const 4848
    i32.store offset=4
    local.get $4
    local.get $3
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    local.tee $3
    i32.store offset=8
    local.get $1
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $3
    local.get $4
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  i32.load offset=12
  i32.eqz
  i32.eqz
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#map<f64> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  local.get $0
  i32.load offset=12
  local.tee $5
  i32.const 3
  i32.const 53
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store
  local.get $3
  i32.load offset=4
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $5
   local.get $0
   i32.load offset=12
   local.tee $6
   local.get $5
   local.get $6
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    local.get $2
    i32.const 3
    i32.shl
    i32.add
    local.get $6
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_f64)
    f64.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $start:assembly/bucketing/versionCompare~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result f64)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill
  local.get $2
  if (result i32)
   local.get $2
   i32.load8_u
  else
   i32.const 0
  end
  local.set $3
  local.get $2
  if (result i32)
   local.get $2
   i32.load8_u offset=1
  else
   i32.const 0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 3504
  i32.store
  local.get $4
  local.get $0
  i32.const 3504
  call $~lib/string/String#split
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 3504
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 3504
  call $~lib/string/String#split
  local.tee $4
  i32.store offset=8
  local.get $3
  local.get $0
  call $assembly/bucketing/versionCompare/hasValidParts
  local.set $1
  local.get $3
  local.get $4
  call $assembly/bucketing/versionCompare/hasValidParts
  i32.const 0
  local.get $1
  select
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  if
   loop $while-continue|0
    local.get $0
    i32.load offset=12
    local.get $4
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 5632
     i32.store
     local.get $0
     i32.const 5632
     call $~lib/array/Array<~lib/string/String>#push
     drop
     br $while-continue|0
    end
   end
   loop $while-continue|1
    local.get $4
    i32.load offset=12
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 5632
     i32.store
     local.get $4
     i32.const 5632
     call $~lib/array/Array<~lib/string/String>#push
     drop
     br $while-continue|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 53
  i32.const 8192
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 53
  i32.const 8224
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 8256
   i32.store
   local.get $1
   local.get $0
   i32.const 8256
   call $~lib/array/Array<~lib/string/String>#map<f64>
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8288
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.const 8288
   call $~lib/array/Array<~lib/string/String>#map<f64>
   local.tee $2
   i32.store offset=16
  end
  i32.const 0
  local.set $0
  block $folding-inner1
   block $folding-inner0
    loop $for-loop|2
     local.get $0
     local.get $1
     i32.load offset=12
     i32.lt_s
     if
      local.get $0
      local.get $2
      i32.load offset=12
      i32.eq
      br_if $folding-inner0
      local.get $1
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.get $2
      local.get $0
      call $~lib/array/Array<f64>#__get
      f64.ne
      if
       local.get $1
       local.get $0
       call $~lib/array/Array<f64>#__get
       local.get $2
       local.get $0
       call $~lib/array/Array<f64>#__get
       f64.gt
       if
        br $folding-inner0
       else
        br $folding-inner1
       end
       unreachable
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|2
     end
    end
    local.get $1
    i32.load offset=12
    local.get $2
    i32.load offset=12
    i32.ne
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    f64.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  f64.const -1
 )
 (func $~lib/array/Array<~lib/string/String>#map<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $7
  i32.store
  local.get $7
  i32.load offset=4
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $3
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $2
    i32.const 2
    i32.shl
    local.tee $5
    local.get $0
    i32.load offset=4
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    i32.const 3
    global.set $~argumentsLength
    local.get $8
    local.get $6
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $6
    i32.store offset=8
    local.get $4
    local.get $5
    i32.add
    local.get $6
    i32.store
    local.get $6
    if
     local.get $7
     local.get $6
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/bucketing/bucketing/_generateBoundedHashes (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i64.const 0
   i64.store offset=8
   local.get $1
   i32.const 1
   call $assembly/helpers/murmurhash/murmurhashV3
   local.set $1
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 16
   i32.const 88
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   local.get $4
   f64.const 0
   f64.store
   local.get $4
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8576
   i32.store offset=8
   local.get $0
   i32.const 8576
   call $~lib/string/String#concat
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   local.get $4
   local.get $3
   local.get $1
   call $assembly/helpers/murmurhash/murmurhashV3
   f64.convert_i32_u
   f64.const 4294967295
   f64.div
   f64.store
   local.get $4
   local.get $0
   local.get $1
   call $assembly/helpers/murmurhash/murmurhashV3
   f64.convert_i32_u
   f64.const 4294967295
   f64.div
   f64.store offset=8
   local.get $4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=8
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     local.get $3
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64> (param $0 i32) (param $1 i32) (param $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Value.Float
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $0
  i32.load offset=8
  local.set $2
  local.get $3
  local.get $0
  i32.load offset=16
  local.tee $4
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $3
  i32.store
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.lt_s
   if
    local.get $2
    local.get $1
    i32.const 12
    i32.mul
    i32.add
    local.tee $5
    i32.load offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load
     local.tee $5
     i32.store offset=4
     local.get $3
     local.get $0
     local.get $5
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $3
  local.get $0
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $3
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 44
  memory.fill
  local.get $2
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $2
  local.get $3
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $2
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load offset=12
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $3
  i32.store offset=8
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.load offset=12
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $4
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $5
    local.get $4
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get
    local.tee $5
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $5
    call $~lib/assemblyscript-json/assembly/JSON/Value#stringify@virtual
    local.tee $5
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 8832
    i32.store offset=36
    i32.const 8832
    local.get $4
    call $~lib/string/String#concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    global.get $~lib/memory/__stack_pointer
    i32.const 8864
    i32.store offset=32
    local.get $4
    i32.const 8864
    call $~lib/string/String#concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=28
    local.get $4
    local.get $5
    call $~lib/string/String#concat
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=24
    local.get $3
    local.get $1
    local.get $4
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 8896
  i32.store offset=24
  local.get $0
  i32.const 8928
  i32.store offset=40
  local.get $3
  i32.load offset=4
  local.get $3
  i32.load offset=12
  i32.const 8928
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=32
  i32.const 8896
  local.get $0
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 8960
  i32.store offset=28
  local.get $0
  i32.const 8960
  call $~lib/string/String#concat
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#keys
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  i32.load
  local.tee $2
  i32.store
  local.get $2
  local.get $1
  local.get $1
  call $~lib/util/hash/HASH<~lib/string/String>
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  local.get $1
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null> (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $2
  if (result i32)
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  else
   global.get $~lib/assemblyscript-json/assembly/JSON/NULL
  end
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 32
   memory.fill
   local.get $2
   i32.const 72
   i32.const 93
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.store offset=12
   local.get $2
   i32.const 0
   i32.store offset=16
   local.get $2
   i32.const 0
   i32.store offset=20
   local.get $2
   f64.const 0
   f64.store offset=24
   local.get $2
   i32.const 0
   i32.store offset=44
   local.get $2
   i32.const 0
   i32.store offset=32
   local.get $2
   i32.const 0
   i32.store offset=36
   local.get $2
   i32.const 0
   i32.store offset=40
   local.get $2
   i32.const 0
   i32.store offset=48
   local.get $2
   i32.const 0
   i32.store offset=52
   local.get $2
   i32.const 0
   i32.store offset=56
   local.get $2
   i32.const 0
   i32.store offset=60
   local.get $2
   i32.const 0
   i32.store offset=64
   local.get $2
   i32.const 0
   i32.store offset=68
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $2
   i32.store
   local.get $2
   local.get $0
   i32.load offset=4
   local.tee $3
   i32.store
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=8
   local.tee $3
   i32.store offset=4
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=12
   local.tee $3
   i32.store offset=8
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=16
   local.tee $3
   i32.store offset=12
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=20
   local.tee $3
   i32.store offset=16
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=24
   local.tee $3
   i32.store offset=20
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   f64.load offset=32
   f64.store offset=24
   local.get $2
   local.get $0
   i32.load offset=40
   local.tee $3
   i32.store offset=32
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=44
   local.tee $3
   i32.store offset=36
   local.get $3
   if
    local.get $2
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $0
   i32.load offset=48
   local.tee $0
   i32.store offset=44
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $0
   i32.store offset=40
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=32
   local.tee $0
   i32.store offset=4
   local.get $0
   if
    loop $for-loop|0
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $1
     local.get $3
     i32.load offset=12
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      local.get $4
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store offset=12
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load offset=40
      local.tee $4
      i32.store offset=8
      local.get $0
      local.get $3
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=16
      local.get $4
      local.get $3
      local.get $5
      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=36
   local.tee $0
   i32.store offset=20
   local.get $0
   if
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $1
     local.get $3
     i32.load offset=12
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=8
      local.get $4
      local.get $1
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store offset=24
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load offset=40
      local.tee $4
      i32.store offset=8
      local.get $0
      local.get $3
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=16
      local.get $4
      local.get $3
      local.get $5
      call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
   end
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/date/Date#constructor
   local.tee $0
   i32.store offset=48
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   call $~lib/bindings/dom/Date.now
   i64.trunc_sat_f64_s
   call $~lib/date/Date#constructor
   local.tee $0
   i32.store offset=52
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   global.get $assembly/managers/platformDataManager/_platformData
   if
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/managers/platformDataManager/_platformData
    local.tee $1
    i32.store
    local.get $1
    i32.eqz
    if
     i32.const 4976
     i32.const 9344
     i32.const 13
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 9264
    i32.const 9344
    i32.const 11
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.store offset=28
   local.get $2
   local.get $1
   i32.load offset=4
   local.tee $0
   i32.store offset=56
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $1
   i32.load offset=8
   local.tee $0
   i32.store offset=60
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $1
   i32.load offset=12
   local.tee $0
   i32.store offset=64
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   local.get $1
   i32.load offset=16
   local.tee $0
   i32.store offset=68
   local.get $0
   if
    local.get $2
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=4
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.load offset=8
  i32.ge_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=4
  call $~lib/typedarray/Uint8Array#__get
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=4
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.load offset=8
  i32.ge_s
  if
   i32.const 9680
   i32.const 9568
   i32.const 156
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=8
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=4
  local.tee $0
  i32.const 1
  i32.add
  i32.store offset=4
  local.get $1
  local.get $0
  call $~lib/typedarray/Uint8Array#__get
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  local.get $0
  i32.load
  local.tee $2
  i32.store
  local.get $1
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Arr#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#addValue (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  if (result i32)
   i32.const 1
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store
   local.get $3
   i32.load offset=12
  end
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $0
   local.get $2
   call $~lib/array/Array<~lib/string/String>#push
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $3
  i32.store offset=4
  local.get $3
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $3
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $3
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $3
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $3
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
    local.tee $3
    i32.store offset=4
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 9744
    i32.const 78
    i32.const 8
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   local.get $3
   local.get $1
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
   local.tee $1
   i32.store offset=4
   local.get $1
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof3 (result i32)
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $3
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|05
       i32.const 1
       local.get $3
       i32.const 74
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof3
       drop
       local.get $3
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $3
       br_if $do-loop|05
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   if
    block $__inlined_func$~lib/rt/__instanceof6 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
     local.tee $1
     i32.store offset=4
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|08
       i32.const 1
       local.get $0
       i32.const 74
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof6
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|08
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 9744
     i32.const 80
     i32.const 13
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    local.get $1
    local.get $2
    call $~lib/assemblyscript-json/assembly/JSON/Arr#push
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
   local.tee $1
   block $__inlined_func$~lib/string/String#charCodeAt (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 8832
    i32.store
    i32.const -1
    i32.const 8828
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt
    drop
    i32.const 8832
    i32.load16_u
   end
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 8832
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt0 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10064
    i32.store
    i32.const -1
    i32.const 10060
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt0
    drop
    i32.const 10064
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10064
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt2 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10096
    i32.store
    i32.const -1
    i32.const 10092
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt2
    drop
    i32.const 10096
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10096
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt4 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10128
    i32.store
    i32.const -1
    i32.const 10124
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt4
    drop
    i32.const 10128
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10160
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt6 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10192
    i32.store
    i32.const -1
    i32.const 10188
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt6
    drop
    i32.const 10192
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10224
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt8 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10256
    i32.store
    i32.const -1
    i32.const 10252
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt8
    drop
    i32.const 10256
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10288
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt10 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10320
    i32.store
    i32.const -1
    i32.const 10316
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt10
    drop
    i32.const 10320
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 10352
    return
   end
   block $__inlined_func$~lib/string/String#charCodeAt12 (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 10384
    i32.store
    i32.const -1
    i32.const 10380
    i32.load
    i32.const 1
    i32.shr_u
    i32.eqz
    br_if $__inlined_func$~lib/string/String#charCodeAt12
    drop
    i32.const 10384
    i32.load16_u
   end
   local.get $1
   i32.eq
   if
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $2
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $3
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.set $1
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readHexDigit
    local.get $2
    i32.const 12
    i32.shl
    local.get $3
    i32.const 8
    i32.shl
    i32.add
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.add
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store
    local.get $1
    i32.const 2
    local.get $0
    i32.const 65535
    i32.gt_u
    local.tee $1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $1
    if
     local.get $0
     i32.const 1114111
     i32.gt_u
     if
      i32.const 0
      i32.const 9520
      i32.const 39
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
     local.get $2
     local.get $0
     i32.const 65536
     i32.sub
     local.tee $0
     i32.const 10
     i32.shr_u
     i32.const 55296
     i32.or
     local.get $0
     i32.const 1023
     i32.and
     i32.const 56320
     i32.or
     i32.const 16
     i32.shl
     i32.or
     i32.store
    else
     local.get $2
     local.get $0
     i32.store16
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $2
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 10480
   i32.store
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   call $~lib/string/String.fromCharCode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 10480
   local.get $0
   call $~lib/string/String#concat
   i32.const 9568
   i32.const 306
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
  local.set $1
  block $__inlined_func$~lib/string/String#charCodeAt (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 8832
   i32.store
   i32.const -1
   i32.const 8828
   i32.load
   i32.const 1
   i32.shr_u
   i32.eqz
   br_if $__inlined_func$~lib/string/String#charCodeAt
   drop
   i32.const 8832
   i32.load16_u
  end
  local.get $1
  i32.ne
  if
   i32.const 9904
   i32.const 9568
   i32.const 245
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
  i32.load offset=4
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $2
  i32.store offset=4
  loop $for-loop|0
   block $folding-inner0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.tee $3
    i32.const 32
    i32.lt_s
    if
     i32.const 9984
     i32.const 9568
     i32.const 254
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    block $__inlined_func$~lib/string/String#charCodeAt0 (result i32)
     global.get $~lib/memory/__stack_pointer
     i32.const 8832
     i32.store
     i32.const -1
     i32.const 8828
     i32.load
     i32.const 1
     i32.shr_u
     i32.eqz
     br_if $__inlined_func$~lib/string/String#charCodeAt0
     drop
     i32.const 8832
     i32.load16_u
    end
    local.get $3
    i32.eq
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     i32.const 1
     global.set $~argumentsLength
     local.get $0
     local.get $1
     call $~lib/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
     local.tee $0
     i32.store offset=8
     local.get $2
     i32.load offset=12
     i32.eqz
     br_if $folding-inner0
     local.get $2
     local.get $0
     call $~lib/array/Array<~lib/string/String>#push
     drop
     global.get $~lib/memory/__stack_pointer
     i32.const 3936
     i32.store offset=12
     local.get $2
     i32.load offset=4
     local.get $2
     i32.load offset=12
     i32.const 3936
     call $~lib/util/string/joinStringArray
     local.set $0
     br $folding-inner0
    else
     block $__inlined_func$~lib/string/String#charCodeAt2 (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 10064
      i32.store
      i32.const -1
      i32.const 10060
      i32.load
      i32.const 1
      i32.shr_u
      i32.eqz
      br_if $__inlined_func$~lib/string/String#charCodeAt2
      drop
      i32.const 10064
      i32.load16_u
     end
     local.get $3
     i32.eq
     if (result i32)
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      i32.load offset=4
      local.get $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       local.get $0
       call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.store offset=12
       i32.const 1
       global.set $~argumentsLength
       local.get $3
       local.get $1
       call $~lib/assemblyscript-json/assembly/decoder/DecoderState#readString@varargs
       local.set $1
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store offset=12
       local.get $2
       local.get $1
       call $~lib/array/Array<~lib/string/String>#push
       drop
      end
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readEscapedChar
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=12
      local.get $2
      local.get $1
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $0
      call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
      i32.load offset=4
     else
      local.get $1
     end
    end
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#popObject (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load
  local.tee $1
  i32.store
  local.get $1
  i32.load offset=12
  i32.const 1
  i32.gt_s
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readAndAssert (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  loop $for-loop|0
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.lt_s
   if
    local.get $2
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.ge_u
    if (result i32)
     i32.const -1
    else
     local.get $1
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u
    end
    local.set $3
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    local.get $3
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 10896
     i32.store offset=8
     i32.const 10896
     local.get $1
     call $~lib/string/String#concat
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 10944
     i32.store offset=4
     local.get $0
     i32.const 10944
     call $~lib/string/String#concat
     i32.const 9568
     i32.const 396
     i32.const 7
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseNumber (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $6
   i64.const 0
   i64.store
   local.get $6
   i32.const 0
   i32.store offset=8
   i32.const 3936
   local.set $2
   local.get $6
   i32.const 3936
   i32.store
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
   i32.const 45
   i32.eq
   if (result f64)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
    i32.const 1
    global.set $~argumentsLength
    call $~lib/string/String.fromCharCode@varargs
    local.set $6
    global.get $~lib/memory/__stack_pointer
    local.get $6
    i32.store offset=4
    i32.const 3936
    local.get $6
    call $~lib/string/String#concat
    local.tee $2
    i32.store
    f64.const -1
   else
    f64.const 1
   end
   local.set $8
   loop $while-continue|0
    local.get $0
    call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
    i32.const 48
    i32.ge_s
    if (result i32)
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 57
     i32.le_s
    else
     i32.const 0
    end
    if (result i32)
     i32.const 1
    else
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 46
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 45
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 43
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 69
     i32.eq
    end
    if (result i32)
     i32.const 1
    else
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#peekChar
     i32.const 101
     i32.eq
    end
    if
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#readChar
     local.set $6
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     global.set $~argumentsLength
     local.get $6
     call $~lib/string/String.fromCharCode@varargs
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=4
     local.get $2
     local.get $7
     call $~lib/string/String#concat
     local.tee $2
     i32.store
     local.get $6
     i32.const 101
     i32.eq
     local.get $6
     i32.const 69
     i32.eq
     i32.or
     local.get $6
     i32.const 46
     i32.eq
     i32.or
     local.get $6
     i32.const 43
     i32.eq
     i32.or
     local.get $6
     i32.const 45
     i32.eq
     i32.or
     if
      i32.const 1
      local.set $1
     else
      local.get $4
      local.get $4
      f64.const 10
      f64.mul
      local.get $6
      i32.const 48
      i32.sub
      f64.convert_i32_s
      f64.add
      local.get $1
      select
      local.set $4
      local.get $3
      i32.const 1
      i32.add
      local.set $3
     end
     br $while-continue|0
    end
   end
   local.get $3
   i32.const 0
   i32.gt_s
   if
    local.get $1
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 11008
     i32.store offset=4
     local.get $2
     i32.const 11008
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store offset=8
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     i32.load
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     local.get $2
     call $~lib/util/string/strtod
     local.set $4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 0
     i32.store
     local.get $0
     local.get $4
     call $~lib/assemblyscript-json/assembly/JSON/Value.Float
     local.tee $0
     i32.store
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $1
     i32.store offset=8
     local.get $0
     call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state
     i32.load
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 0
     i32.store
     local.get $0
     local.get $4
     local.get $8
     f64.mul
     i64.trunc_sat_f64_s
     call $~lib/assemblyscript-json/assembly/JSON/Value.Integer
     local.tee $0
     i32.store
    end
    local.get $1
    local.get $3
    local.get $0
    call $~lib/assemblyscript-json/assembly/JSON/Handler#addValue
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#deserialize (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 12
   i32.const 101
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   local.get $1
   i32.store offset=8
   local.get $1
   if
    local.get $2
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $2
   i32.const 3936
   i32.store
   local.get $2
   i32.const 3936
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
   local.get $2
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $0
   local.get $2
   i32.store offset=4
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $0
   call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#parseValue
   i32.eqz
   if
    i32.const 11264
    i32.const 9568
    i32.const 144
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Handler#reset (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  loop $while-continue|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store
   local.get $1
   i32.load offset=12
   i32.const 0
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $1
    i32.store
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop
    drop
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/assembly/util/index/Buffer.fromString
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store offset=4
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  i32.load
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  i32.load
  local.tee $1
  i32.store offset=4
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Handler#reset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getStringFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $2
  i32.store
  local.get $2
  if
   local.get $2
   i32.load
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 11664
   i32.store offset=8
   i32.const 11664
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 11664
   i32.store offset=8
   i32.const 11664
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 11664
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3936
   i32.store offset=12
   i32.const 11664
   i32.const 11660
   i32.load
   i32.const 2
   i32.shr_u
   i32.const 3936
   call $~lib/util/string/joinStringArray
   i32.const 11712
   i32.const 26
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONOptional (param $0 i32) (param $1 i32) (param $2 f64) (result f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i64.const 0
  i64.store offset=8
  local.get $3
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $3
  i32.store
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   return
  end
  local.get $3
  if (result i32)
   local.get $3
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 91
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 91
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 11712
    i32.const 107
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $3
   i32.store offset=4
   local.get $3
   f64.load
   local.set $2
   local.get $0
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   local.get $3
   if (result i32)
    local.get $3
    if (result i32)
     block $__inlined_func$~lib/rt/__instanceof3 (result i32)
      local.get $3
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $0
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|05
        i32.const 1
        local.get $0
        i32.const 104
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof3
        drop
        local.get $0
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $0
        br_if $do-loop|05
       end
      end
      i32.const 0
     end
    else
     i32.const 0
    end
   else
    i32.const 0
   end
   if
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~lib/rt/__instanceof06 (result i32)
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|028
       i32.const 1
       local.get $1
       i32.const 104
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof06
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|028
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 11712
     i32.const 109
     i32.const 21
     call $~lib/builtins/abort
     unreachable
    end
    local.get $3
    i32.store offset=8
    local.get $3
    i64.load
    f64.convert_i64_s
    local.set $2
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.get $3
    call $~lib/assemblyscript-json/assembly/JSON/Value#toString@virtual
    local.tee $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 12048
    i32.store offset=4
    i32.const 12048
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 12048
    i32.store offset=4
    i32.const 12048
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 12048
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=12
    i32.const 12048
    i32.const 12044
    i32.load
    i32.const 2
    i32.shr_u
    i32.const 3936
    call $~lib/util/string/joinStringArray
    i32.const 11712
    i32.const 112
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
 )
 (func $assembly/types/dvcUser/DVCUser#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 24
  memory.fill
  local.get $1
  i32.const 52
  i32.const 95
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  local.get $1
  i32.const 0
  i32.store offset=24
  local.get $1
  f64.const 0
  f64.store offset=32
  local.get $1
  i32.const 0
  i32.store offset=48
  local.get $1
  i32.const 0
  i32.store offset=40
  local.get $1
  i32.const 0
  i32.store offset=44
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $3
  i32.store offset=4
  local.get $3
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 11328
   i32.const 11440
   i32.const 35
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  block $__inlined_func$~lib/rt/__instanceof0 (result i32)
   local.get $3
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $0
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|02
     i32.const 1
     local.get $0
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof0
     drop
     local.get $0
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $0
     br_if $do-loop|02
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 11440
   i32.const 36
   i32.const 22
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 1376
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 1376
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 1424
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 1424
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=8
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11808
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 11808
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=12
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11840
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 11840
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=16
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 1488
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 1488
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=20
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 1648
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 1648
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=24
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11888
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 11888
  f64.const -1
  call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
  f64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i32.const 1696
  i32.store offset=12
  local.get $2
  local.get $3
  i32.const 1696
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=48
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 1744
  i32.store offset=12
  local.get $0
  local.get $3
  i32.const 1744
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $0
  i32.store offset=16
  local.get $0
  call $assembly/helpers/jsonHelpers/isFlatJSONObj
  i32.eqz
  if
   i32.const 12096
   i32.const 11440
   i32.const 52
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $0
  i32.store offset=40
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 12240
  i32.store offset=12
  local.get $0
  local.get $3
  i32.const 12240
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $0
  i32.store offset=20
  local.get $0
  call $assembly/helpers/jsonHelpers/isFlatJSONObj
  i32.eqz
  if
   i32.const 12304
   i32.const 11440
   i32.const 58
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $0
  i32.store offset=44
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.load offset=12
  local.set $4
  loop $for-loop|0
   local.get $3
   local.get $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $0
    i32.load offset=4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store
    i32.const 4
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $6
    local.get $3
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.tee $2
    i32.store offset=4
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/segmentation/getFilterValues (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  local.get $1
  local.get $0
  i32.load offset=20
  local.tee $0
  i32.store
  local.get $1
  local.get $0
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $1
  i32.const 13200
  i32.store offset=8
  i32.const 0
  i32.const 2
  i32.const 75
  i32.const 13232
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $0
  i32.const 13200
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>>
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/bucketing/segmentation/getFilterValuesAsStrings~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $1
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $2
      i32.const 102
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $2
      i32.const 102
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 12928
    i32.const 332
    i32.const 38
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   local.set $1
  end
  local.get $3
  local.get $1
  i32.store
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store offset=4
   local.get $0
   local.get $1
   call $~lib/array/Array<~lib/string/String>#push
   drop
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/getFilterValuesAsStrings (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $0
  call $assembly/bucketing/segmentation/getFilterValues
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13264
  i32.store offset=4
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 13296
  call $~lib/rt/__newArray
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $0
  i32.const 13264
  local.get $1
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>>
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/bucketing/segmentation/_checkStringsFilter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i64.const 0
  i64.store offset=8
  local.get $3
  local.get $1
  i32.load offset=8
  local.tee $2
  i32.store
  local.get $3
  local.get $1
  call $assembly/bucketing/segmentation/getFilterValuesAsStrings
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1904
  i32.store offset=8
  local.get $2
  i32.const 1904
  call $~lib/string/String.__eq
  if
   local.get $0
   i32.const 0
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 0
   else
    local.get $1
    local.get $0
    call $~lib/array/Array<~lib/string/String>#includes
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 1936
   i32.store offset=8
   local.get $2
   i32.const 1936
   call $~lib/string/String.__eq
   if
    local.get $0
    i32.const 0
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 1
    else
     local.get $1
     local.get $0
     call $~lib/array/Array<~lib/string/String>#includes
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.eqz
    local.set $0
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 2096
    i32.store offset=8
    local.get $2
    i32.const 2096
    call $~lib/string/String.__eq
    if
     local.get $0
     i32.const 0
     call $~lib/string/String.__eq
     if (result i32)
      i32.const 0
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 3936
      i32.store offset=8
      local.get $0
      i32.const 3936
      call $~lib/string/String.__eq
      i32.eqz
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 16
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 2128
     i32.store offset=8
     local.get $2
     i32.const 2128
     call $~lib/string/String.__eq
     if
      local.get $0
      i32.const 0
      call $~lib/string/String.__eq
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       i32.const 3936
       i32.store offset=8
       local.get $0
       i32.const 3936
       call $~lib/string/String.__eq
      end
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 16
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 2160
      i32.store offset=8
      local.get $2
      i32.const 2160
      call $~lib/string/String.__eq
      if
       local.get $0
       i32.const 0
       call $~lib/string/String.__eq
       if (result i32)
        i32.const 1
       else
        local.get $1
        local.get $0
        call $assembly/helpers/lodashHelpers/findString
        local.set $0
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.store offset=12
        local.get $0
        if (result i32)
         local.get $0
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
        else
         i32.const 0
        end
        i32.eqz
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 16
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.eqz
       local.set $0
      else
       global.get $~lib/memory/__stack_pointer
       i32.const 2208
       i32.store offset=8
       local.get $2
       i32.const 2208
       call $~lib/string/String.__eq
       if
        local.get $0
        i32.const 0
        call $~lib/string/String.__eq
        if (result i32)
         i32.const 1
        else
         local.get $1
         local.get $0
         call $assembly/helpers/lodashHelpers/findString
         local.set $0
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store offset=12
         local.get $0
         if (result i32)
          local.get $0
          i32.const 20
          i32.sub
          i32.load offset=16
          i32.const 1
          i32.shr_u
         else
          i32.const 0
         end
         i32.eqz
        end
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        global.get $~lib/memory/__stack_pointer
        i32.const 16
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 1
        local.set $0
       end
      end
     end
    end
   end
  end
  local.get $0
 )
 (func $assembly/helpers/lodashHelpers/replace (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i64.const 0
    i64.store
    local.get $3
    i64.const 0
    i64.store offset=8
    local.get $3
    local.get $1
    local.get $0
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#exec
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $1
    if (result i32)
     local.get $1
     i32.load
    else
     i32.const 0
    end
    if (result i32)
     local.get $1
     i32.load
    else
     i32.const 0
    end
    local.tee $6
    i32.store offset=4
    local.get $6
    i32.const 0
    local.get $1
    select
    i32.eqz
    br_if $folding-inner1
    loop $for-loop|0
     local.get $2
     local.get $6
     i32.load offset=12
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store offset=8
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      block $__inlined_func$~lib/string/String#replace
       local.get $1
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const 1
       i32.shr_u
       local.tee $3
       local.get $0
       i32.const 20
       i32.sub
       i32.load offset=16
       i32.const 1
       i32.shr_u
       local.tee $7
       i32.ge_u
       if
        local.get $3
        local.get $7
        i32.le_u
        if
         i32.const 3936
         local.get $0
         local.get $1
         local.get $0
         call $~lib/string/String.__eq
         select
         local.set $0
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        br $__inlined_func$~lib/string/String#replace
       end
       local.get $0
       local.get $1
       i32.const 0
       call $~lib/string/String#indexOf
       local.tee $8
       i32.const -1
       i32.xor
       if
        i32.const 3932
        i32.load
        i32.const 1
        i32.shr_u
        local.tee $4
        local.get $7
        local.get $3
        i32.sub
        local.tee $7
        i32.add
        local.tee $1
        if
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.const 1
         i32.shl
         i32.const 1
         call $~lib/rt/itcms/__new
         local.tee $1
         i32.store
         local.get $1
         local.get $0
         local.get $8
         i32.const 1
         i32.shl
         local.tee $9
         memory.copy
         local.get $1
         local.get $9
         i32.add
         i32.const 3936
         local.get $4
         i32.const 1
         i32.shl
         memory.copy
         local.get $1
         local.get $4
         local.get $8
         i32.add
         i32.const 1
         i32.shl
         i32.add
         local.get $0
         local.get $3
         local.get $8
         i32.add
         i32.const 1
         i32.shl
         i32.add
         local.get $7
         local.get $8
         i32.sub
         i32.const 1
         i32.shl
         memory.copy
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $1
         local.set $0
         br $__inlined_func$~lib/string/String#replace
        end
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
      end
      local.get $0
      i32.store offset=12
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    br $folding-inner1
   end
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/bucketing/segmentation/checkVersionFilter (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 44
   memory.fill
   local.get $0
   if (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
   else
    i32.const 0
   end
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 44
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 1936
   i32.store
   local.get $2
   i32.const 1936
   call $~lib/string/String.__eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 1904
    i32.store offset=4
    i32.const 1
    local.set $6
    i32.const 1904
   else
    local.get $2
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 1904
   i32.store
   i32.const 1904
   call $~lib/string/String.__eq
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 13328
    i32.store
    local.get $3
    i32.const 4848
    i32.store offset=8
    local.get $3
    i32.const 13328
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    local.tee $7
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 13376
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4848
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 13376
    call $~lib/assemblyscript-regex/assembly/regexp/RegExp#constructor
    local.tee $8
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=24
    local.get $0
    local.get $7
    call $assembly/helpers/lodashHelpers/replace
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=8
    local.get $0
    local.get $8
    call $assembly/helpers/lodashHelpers/replace
    local.tee $0
    i32.store offset=28
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 3
    i32.const 13408
    call $~lib/rt/__newArray
    local.tee $9
    i32.store offset=32
    loop $for-loop|0
     local.get $4
     local.get $1
     i32.load offset=12
     i32.lt_s
     if
      local.get $1
      local.get $4
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.tee $10
      local.get $3
      i32.store offset=36
      local.get $10
      i32.const 3936
      i32.store offset=40
      local.get $3
      local.get $7
      call $assembly/helpers/lodashHelpers/replace
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      global.get $~lib/memory/__stack_pointer
      i32.const 3936
      i32.store offset=36
      local.get $3
      local.get $8
      call $assembly/helpers/lodashHelpers/replace
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $9
      local.get $3
      call $~lib/array/Array<~lib/string/String>#push
      drop
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    local.get $9
    local.set $1
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i64.const 0
   i64.store offset=8
   local.get $3
   i32.const 3504
   i32.store
   local.get $3
   local.get $0
   i32.const 3504
   call $~lib/string/String#split
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 5632
    i32.store
    local.get $0
    i32.const 5632
    call $~lib/array/Array<~lib/string/String>#push
    drop
   end
   local.get $0
   i32.load offset=12
   i32.const 3
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 5632
    i32.store
    local.get $0
    i32.const 5632
    call $~lib/array/Array<~lib/string/String>#push
    drop
   end
   i32.const 0
   local.set $3
   loop $for-loop|03
    local.get $3
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $7
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 3936
     i32.store
     local.get $7
     i32.const 3936
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 5632
      i32.store offset=12
      local.get $0
      local.get $3
      i32.const 5632
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|03
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 3504
   i32.store
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load offset=12
   i32.const 3504
   call $~lib/util/string/joinStringArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $7
   i32.store offset=28
   i32.const 0
   local.set $3
   i32.const 0
   local.set $0
   loop $for-loop|1
    local.get $0
    local.get $1
    i32.load offset=12
    i32.lt_s
    if
     block $for-break1
      local.get $1
      local.get $0
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.tee $8
      local.get $4
      i32.store offset=20
      block $__inlined_func$assembly/bucketing/segmentation/checkVersionValue (result i32)
       local.get $8
       i32.const 12
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       i64.const 0
       i64.store
       local.get $8
       i32.const 0
       i32.store offset=8
       block $folding-inner1
        local.get $7
        if (result i32)
         local.get $4
         i32.const 20
         i32.sub
         i32.load offset=16
         i32.const 1
         i32.shr_u
        else
         i32.const 0
        end
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $8
         i32.const 4
         i32.sub
         global.set $~lib/memory/__stack_pointer
         global.get $~lib/memory/__stack_pointer
         i32.const 22740
         i32.lt_s
         br_if $folding-inner2
         global.get $~lib/memory/__stack_pointer
         local.tee $9
         i32.const 0
         i32.store
         local.get $9
         i32.const 2
         i32.const 8
         call $~lib/rt/itcms/__new
         local.tee $9
         i32.store
         local.get $9
         i32.const 0
         i32.store8
         local.get $9
         i32.const 0
         i32.store8 offset=1
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         local.get $8
         local.get $9
         i32.store
         local.get $9
         i32.const 1
         i32.store8 offset=1
         local.get $9
         i32.const 0
         i32.store8
         local.get $8
         local.get $9
         i32.store offset=4
         i32.const 3
         global.set $~argumentsLength
         local.get $7
         local.get $4
         local.get $9
         i32.const 8320
         i32.load
         call_indirect $0 (type $i32_i32_i32_=>_f64)
         local.tee $5
         local.get $5
         f64.ne
         if
          global.get $~lib/memory/__stack_pointer
          i32.const 12
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
          br $__inlined_func$assembly/bucketing/segmentation/checkVersionValue
         else
          local.get $5
          f64.const 0
          f64.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           i32.const 1904
           i32.store offset=8
           local.get $2
           if (result i32)
            local.get $2
            i32.const 1904
            i32.const 0
            call $~lib/string/String#indexOf
            i32.const -1
            i32.ne
           else
            i32.const 0
           end
          else
           i32.const 0
          end
          br_if $folding-inner1
          local.get $5
          f64.const 1
          f64.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           i32.const 1968
           i32.store offset=8
           local.get $2
           if (result i32)
            local.get $2
            i32.const 1968
            i32.const 0
            call $~lib/string/String#indexOf
            i32.const -1
            i32.ne
           else
            i32.const 0
           end
          else
           i32.const 0
          end
          br_if $folding-inner1
          local.get $5
          f64.const -1
          f64.eq
          if (result i32)
           global.get $~lib/memory/__stack_pointer
           i32.const 2032
           i32.store offset=8
           local.get $2
           if (result i32)
            local.get $2
            i32.const 2032
            i32.const 0
            call $~lib/string/String#indexOf
            i32.const -1
            i32.ne
           else
            i32.const 0
           end
          else
           i32.const 0
          end
          br_if $folding-inner1
         end
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 12
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 0
        br $__inlined_func$assembly/bucketing/segmentation/checkVersionValue
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
      end
      if
       i32.const 1
       local.set $3
       br $for-break1
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|1
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 44
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   i32.eqz
   local.get $3
   local.get $6
   select
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/segmentation/_checkVersionFilters (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  local.get $1
  i32.load offset=8
  local.tee $2
  i32.store
  local.get $3
  local.get $1
  call $assembly/bucketing/segmentation/getFilterValuesAsStrings
  local.tee $3
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1904
  i32.store offset=8
  local.get $2
  i32.const 1904
  call $~lib/string/String.__eq
  if (result i32)
   local.get $0
   local.get $1
   call $assembly/bucketing/segmentation/_checkStringsFilter
  else
   local.get $0
   local.get $3
   local.get $2
   call $assembly/bucketing/segmentation/checkVersionFilter
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/bucketing/segmentation/checkValueExists (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $1
      i32.const 102
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 102
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 12928
    i32.const 372
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $3
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof3 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|05
      i32.const 1
      local.get $1
      i32.const 91
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof3
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|05
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof06 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|028
      i32.const 1
      local.get $1
      i32.const 91
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof06
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|028
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 12928
    i32.const 373
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $4
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof9 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|011
      i32.const 1
      local.get $1
      i32.const 104
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof9
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|011
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof312 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0514
      i32.const 1
      local.get $1
      i32.const 104
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof312
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|0514
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 12928
    i32.const 374
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $5
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof15 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|017
      i32.const 1
      local.get $1
      i32.const 103
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof15
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|017
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof6 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|08
      i32.const 1
      local.get $1
      i32.const 103
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof6
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|08
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 12928
    i32.const 375
    i32.const 38
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $1
  i32.store offset=12
  i32.const 1
  local.get $1
  i32.const 1
  local.get $5
  i32.const 1
  local.get $4
  local.get $3
  select
  select
  select
  i32.const 0
  local.get $0
  select
  if (result i32)
   local.get $3
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $3
    i32.load
    local.tee $1
    i32.store offset=16
    local.get $0
    i32.const 3936
    i32.store offset=20
    local.get $1
    i32.const 3936
    call $~lib/string/String.__eq
    i32.eqz
   else
    i32.const 1
   end
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   if (result i32)
    local.get $4
    f64.load
    local.tee $2
    local.get $2
    f64.eq
   else
    i32.const 1
   end
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   if
    local.get $5
    i64.load
    drop
   end
   i32.const 0
  else
   i32.const 1
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.eqz
 )
 (func $assembly/bucketing/segmentation/_checkBooleanFilter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i32.const 0
   i32.store offset=8
   local.get $3
   local.get $1
   i32.load offset=8
   local.tee $4
   i32.store
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i64.const 0
   i64.store
   local.get $5
   i32.const 0
   i32.store offset=8
   local.get $5
   local.get $1
   call $assembly/bucketing/segmentation/getFilterValues
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13568
   i32.store offset=4
   i32.const 0
   i32.const 0
   i32.const 119
   i32.const 13600
   call $~lib/rt/__newArray
   local.set $5
   global.get $~lib/memory/__stack_pointer
   local.get $5
   i32.store offset=8
   local.get $1
   i32.const 13568
   local.get $5
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#reduce<~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>>
   local.set $5
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 2160
   i32.store offset=8
   local.get $4
   i32.const 2160
   call $~lib/string/String.__eq
   if (result i32)
    i32.const 1
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 1904
    i32.store offset=8
    local.get $4
    i32.const 1904
    call $~lib/string/String.__eq
   end
   if (result i32)
    i32.const -1
    local.set $1
    block $__inlined_func$~lib/array/Array<bool>#indexOf
     local.get $5
     i32.load offset=12
     local.tee $3
     i32.const 0
     i32.le_s
     i32.const 1
     local.get $3
     select
     br_if $__inlined_func$~lib/array/Array<bool>#indexOf
     local.get $5
     i32.load offset=4
     local.set $4
     loop $while-continue|0
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $4
       local.get $2
       local.tee $1
       i32.add
       i32.load8_u
       i32.const 0
       i32.ne
       local.get $0
       i32.const 0
       i32.ne
       i32.eq
       br_if $__inlined_func$~lib/array/Array<bool>#indexOf
       local.get $1
       i32.const 1
       i32.add
       local.set $2
       br $while-continue|0
      end
     end
     i32.const -1
     local.set $1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    i32.const 0
    i32.ge_s
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 2208
    i32.store offset=8
    local.get $4
    i32.const 2208
    call $~lib/string/String.__eq
    if (result i32)
     i32.const 1
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 1936
     i32.store offset=8
     local.get $4
     i32.const 1936
     call $~lib/string/String.__eq
    end
    if (result i32)
     i32.const -1
     local.set $1
     block $__inlined_func$~lib/array/Array<bool>#indexOf1
      local.get $5
      i32.load offset=12
      local.tee $3
      i32.const 0
      i32.le_s
      i32.const 1
      local.get $3
      select
      br_if $__inlined_func$~lib/array/Array<bool>#indexOf1
      local.get $5
      i32.load offset=4
      local.set $4
      loop $while-continue|02
       local.get $2
       local.get $3
       i32.lt_s
       if
        local.get $4
        local.get $2
        local.tee $1
        i32.add
        i32.load8_u
        i32.const 0
        i32.ne
        local.get $0
        i32.const 0
        i32.ne
        i32.eq
        br_if $__inlined_func$~lib/array/Array<bool>#indexOf1
        local.get $1
        i32.const 1
        i32.add
        local.set $2
        br $while-continue|02
       end
      end
      i32.const -1
      local.set $1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     i32.const 0
     i32.lt_s
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 2096
     i32.store offset=8
     local.get $4
     i32.const 2096
     call $~lib/string/String.__eq
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 1
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 2128
      i32.store offset=8
      local.get $4
      i32.const 2128
      call $~lib/string/String.__eq
      drop
      global.get $~lib/memory/__stack_pointer
      i32.const 12
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
     end
    end
   end
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/bucketing/segmentation/_checkCustomData (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill
  local.get $2
  local.get $1
  i32.load offset=8
  local.tee $3
  i32.store
  local.get $2
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=12
   local.tee $2
   i32.store offset=4
   local.get $0
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  else
   i32.const 0
  end
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 2096
  i32.store offset=4
  local.get $3
  i32.const 2096
  call $~lib/string/String.__eq
  if
   local.get $2
   call $assembly/bucketing/segmentation/checkValueExists
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 2128
   i32.store offset=4
   local.get $3
   i32.const 2128
   call $~lib/string/String.__eq
   if
    local.get $2
    call $assembly/bucketing/segmentation/checkValueExists
    i32.eqz
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.load offset=16
    local.tee $4
    i32.store offset=12
    local.get $0
    i32.const 2368
    i32.store offset=4
    local.get $2
    i32.const 0
    local.get $4
    i32.const 2368
    call $~lib/string/String.__eq
    select
    if (result i32)
     local.get $2
     if (result i32)
      block $__inlined_func$~lib/rt/__instanceof (result i32)
       local.get $2
       i32.const 20
       i32.sub
       i32.load offset=12
       local.tee $0
       i32.const 21616
       i32.load
       i32.le_u
       if
        loop $do-loop|0
         i32.const 1
         local.get $0
         i32.const 102
         i32.eq
         br_if $__inlined_func$~lib/rt/__instanceof
         drop
         local.get $0
         i32.const 3
         i32.shl
         i32.const 21620
         i32.add
         i32.load offset=4
         local.tee $0
         br_if $do-loop|0
        end
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     if (result i32)
      i32.const 1
     else
      local.get $2
      if (result i32)
       block $__inlined_func$~lib/rt/__instanceof0 (result i32)
        local.get $2
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|02
          i32.const 1
          local.get $0
          i32.const 96
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof0
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|02
         end
        end
        i32.const 0
       end
      else
       i32.const 0
      end
     end
    else
     i32.const 0
    end
    if
     local.get $2
     if (result i32)
      block $__inlined_func$~lib/rt/__instanceof4 (result i32)
       local.get $2
       i32.const 20
       i32.sub
       i32.load offset=12
       local.tee $0
       i32.const 21616
       i32.load
       i32.le_u
       if
        loop $do-loop|06
         i32.const 1
         local.get $0
         i32.const 96
         i32.eq
         br_if $__inlined_func$~lib/rt/__instanceof4
         drop
         local.get $0
         i32.const 3
         i32.shl
         i32.const 21620
         i32.add
         i32.load offset=4
         local.tee $0
         br_if $do-loop|06
        end
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     if (result i32)
      i32.const 0
      local.get $1
      call $assembly/bucketing/segmentation/_checkStringsFilter
     else
      global.get $~lib/memory/__stack_pointer
      block $__inlined_func$~lib/rt/__instanceof7 (result i32)
       local.get $2
       i32.const 20
       i32.sub
       i32.load offset=12
       local.tee $0
       i32.const 21616
       i32.load
       i32.le_u
       if
        loop $do-loop|09
         i32.const 1
         local.get $0
         i32.const 102
         i32.eq
         br_if $__inlined_func$~lib/rt/__instanceof7
         drop
         local.get $0
         i32.const 3
         i32.shl
         i32.const 21620
         i32.add
         i32.load offset=4
         local.tee $0
         br_if $do-loop|09
        end
       end
       i32.const 0
      end
      i32.eqz
      if
       i32.const 5152
       i32.const 12928
       i32.const 300
       i32.const 29
       call $~lib/builtins/abort
       unreachable
      end
      local.get $2
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.load
      local.tee $0
      i32.store offset=12
      local.get $0
      local.get $1
      call $assembly/bucketing/segmentation/_checkStringsFilter
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.load offset=16
     local.tee $4
     i32.store offset=12
     local.get $0
     i32.const 2448
     i32.store offset=4
     local.get $2
     i32.const 0
     local.get $4
     i32.const 2448
     call $~lib/string/String.__eq
     select
     if (result i32)
      local.get $2
      if (result i32)
       block $__inlined_func$~lib/rt/__instanceof10 (result i32)
        local.get $2
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|012
          i32.const 1
          local.get $0
          i32.const 91
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof10
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|012
         end
        end
        i32.const 0
       end
      else
       i32.const 0
      end
      if (result i32)
       i32.const 1
      else
       local.get $2
       if (result i32)
        block $__inlined_func$~lib/rt/__instanceof13 (result i32)
         local.get $2
         i32.const 20
         i32.sub
         i32.load offset=12
         local.tee $0
         i32.const 21616
         i32.load
         i32.le_u
         if
          loop $do-loop|015
           i32.const 1
           local.get $0
           i32.const 104
           i32.eq
           br_if $__inlined_func$~lib/rt/__instanceof13
           drop
           local.get $0
           i32.const 3
           i32.shl
           i32.const 21620
           i32.add
           i32.load offset=4
           local.tee $0
           br_if $do-loop|015
          end
         end
         i32.const 0
        end
       else
        i32.const 0
       end
      end
     else
      i32.const 0
     end
     if
      local.get $2
      local.get $1
      call $assembly/bucketing/segmentation/checkNumbersFilterJSONValue
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 20
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $1
      i32.load offset=16
      local.tee $4
      i32.store offset=12
      local.get $0
      i32.const 2400
      i32.store offset=4
      local.get $2
      i32.const 0
      local.get $4
      i32.const 2400
      call $~lib/string/String.__eq
      select
      if (result i32)
       local.get $2
       if (result i32)
        block $__inlined_func$~lib/rt/__instanceof16 (result i32)
         local.get $2
         i32.const 20
         i32.sub
         i32.load offset=12
         local.tee $0
         i32.const 21616
         i32.load
         i32.le_u
         if
          loop $do-loop|018
           i32.const 1
           local.get $0
           i32.const 103
           i32.eq
           br_if $__inlined_func$~lib/rt/__instanceof16
           drop
           local.get $0
           i32.const 3
           i32.shl
           i32.const 21620
           i32.add
           i32.load offset=4
           local.tee $0
           br_if $do-loop|018
          end
         end
         i32.const 0
        end
       else
        i32.const 0
       end
      else
       i32.const 0
      end
      if
       global.get $~lib/memory/__stack_pointer
       block $__inlined_func$~lib/rt/__instanceof019 (result i32)
        local.get $2
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|0221
          i32.const 1
          local.get $0
          i32.const 103
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof019
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|0221
         end
        end
        i32.const 0
       end
       i32.eqz
       if
        i32.const 5152
        i32.const 12928
        i32.const 307
        i32.const 27
        call $~lib/builtins/abort
        unreachable
       end
       local.get $2
       i32.store offset=16
       local.get $2
       i32.load8_u
       local.get $1
       call $assembly/bucketing/segmentation/_checkBooleanFilter
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 20
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       local.get $2
       if (result i32)
        i32.const 0
       else
        global.get $~lib/memory/__stack_pointer
        i32.const 1936
        i32.store offset=4
        local.get $3
        i32.const 1936
        call $~lib/string/String.__eq
       end
       if (result i32)
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 1
       else
        global.get $~lib/memory/__stack_pointer
        i32.const 20
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 0
       end
       local.set $0
      end
     end
    end
   end
  end
  local.get $0
 )
 (func $assembly/bucketing/segmentation/filterFunctionsBySubtype (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 1488
  i32.store
  local.get $0
  i32.const 1488
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=16
   local.tee $0
   i32.store offset=4
   local.get $0
   local.get $2
   call $assembly/bucketing/segmentation/_checkStringsFilter
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 1424
   i32.store
   local.get $0
   i32.const 1424
   call $~lib/string/String.__eq
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load offset=4
    local.tee $0
    i32.store offset=4
    local.get $0
    local.get $2
    call $assembly/bucketing/segmentation/_checkStringsFilter
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 1376
    i32.store
    local.get $0
    i32.const 1376
    call $~lib/string/String.__eq
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $0
     i32.store offset=4
     local.get $0
     local.get $2
     call $assembly/bucketing/segmentation/_checkStringsFilter
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
    else
     global.get $~lib/memory/__stack_pointer
     i32.const 1648
     i32.store
     local.get $0
     i32.const 1648
     call $~lib/string/String.__eq
     if
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.load offset=20
      local.tee $0
      i32.store offset=4
      local.get $0
      local.get $2
      call $assembly/bucketing/segmentation/_checkVersionFilters
      local.set $0
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
     else
      global.get $~lib/memory/__stack_pointer
      i32.const 1584
      i32.store
      local.get $0
      i32.const 1584
      call $~lib/string/String.__eq
      if
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.load offset=60
       local.tee $0
       i32.store offset=4
       local.get $0
       local.get $2
       call $assembly/bucketing/segmentation/_checkVersionFilters
       local.set $0
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
      else
       global.get $~lib/memory/__stack_pointer
       i32.const 1696
       i32.store
       local.get $0
       i32.const 1696
       call $~lib/string/String.__eq
       if
        global.get $~lib/memory/__stack_pointer
        local.get $1
        i32.load offset=44
        local.tee $0
        i32.store offset=4
        local.get $0
        local.get $2
        call $assembly/bucketing/segmentation/_checkStringsFilter
        local.set $0
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
       else
        global.get $~lib/memory/__stack_pointer
        i32.const 1536
        i32.store
        local.get $0
        i32.const 1536
        call $~lib/string/String.__eq
        if
         global.get $~lib/memory/__stack_pointer
         local.get $1
         i32.load offset=56
         local.tee $0
         i32.store offset=4
         local.get $0
         local.get $2
         call $assembly/bucketing/segmentation/_checkStringsFilter
         local.set $0
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
        else
         global.get $~lib/memory/__stack_pointer
         i32.const 1744
         i32.store
         local.get $0
         i32.const 1744
         call $~lib/string/String.__eq
         if
          local.get $2
          if (result i32)
           block $__inlined_func$~lib/rt/__instanceof (result i32)
            local.get $2
            i32.const 20
            i32.sub
            i32.load offset=12
            local.tee $0
            i32.const 21616
            i32.load
            i32.le_u
            if
             loop $do-loop|0
              i32.const 1
              local.get $0
              i32.const 117
              i32.eq
              br_if $__inlined_func$~lib/rt/__instanceof
              drop
              local.get $0
              i32.const 3
              i32.shl
              i32.const 21620
              i32.add
              i32.load offset=4
              local.tee $0
              br_if $do-loop|0
             end
            end
            i32.const 0
           end
          else
           i32.const 0
          end
          i32.eqz
          if
           i32.const 13440
           i32.const 12928
           i32.const 94
           i32.const 13
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $1
          i32.load offset=40
          local.tee $1
          i32.store offset=4
          block $__inlined_func$~lib/rt/__instanceof0 (result i32)
           local.get $2
           i32.const 20
           i32.sub
           i32.load offset=12
           local.tee $0
           i32.const 21616
           i32.load
           i32.le_u
           if
            loop $do-loop|02
             i32.const 1
             local.get $0
             i32.const 117
             i32.eq
             br_if $__inlined_func$~lib/rt/__instanceof0
             drop
             local.get $0
             i32.const 3
             i32.shl
             i32.const 21620
             i32.add
             i32.load offset=4
             local.tee $0
             br_if $do-loop|02
            end
           end
           i32.const 0
          end
          i32.eqz
          if
           i32.const 5152
           i32.const 12928
           i32.const 96
           i32.const 63
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $2
          i32.store
          local.get $1
          local.get $2
          call $assembly/bucketing/segmentation/_checkCustomData
          local.set $0
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
         else
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
          local.set $0
         end
        end
       end
      end
     end
    end
   end
  end
  local.get $0
 )
 (func $assembly/bucketing/segmentation/doesUserPassFilter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill
  local.get $2
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $2
  i32.const 1200
  i32.store offset=4
  local.get $3
  i32.const 1200
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $2
  i32.const 1264
  i32.store offset=4
  local.get $3
  i32.const 1264
  call $~lib/string/String.__eq
  i32.eqz
  if
   block $folding-inner0
    local.get $0
    if (result i32)
     block $__inlined_func$~lib/rt/__instanceof (result i32)
      local.get $0
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $2
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|0
        i32.const 1
        local.get $2
        i32.const 114
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof
        drop
        local.get $2
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $2
        br_if $do-loop|0
       end
      end
      i32.const 0
     end
    else
     i32.const 0
    end
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Value#toString@virtual
     local.tee $0
     i32.store offset=8
     i32.const 12896
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 12896
     i32.store offset=4
     i32.const 12896
     i32.const 1
     local.get $0
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 12896
     i32.store offset=4
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    block $__inlined_func$~lib/rt/__instanceof0 (result i32)
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $2
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|02
       i32.const 1
       local.get $2
       i32.const 114
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof0
       drop
       local.get $2
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $2
       br_if $do-loop|02
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 12928
     i32.const 63
     i32.const 24
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.load offset=4
    local.tee $3
    i32.store offset=16
    local.get $2
    i32.const 1856
    i32.store
    i32.const 1856
    local.get $3
    call $~lib/array/Array<~lib/string/String>#includes
    i32.eqz
    if
     i32.const 13168
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 13168
     i32.store offset=4
     i32.const 13168
     i32.const 1
     local.get $3
     call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
     global.get $~lib/memory/__stack_pointer
     i32.const 13168
     i32.store offset=4
     br $folding-inner0
    end
    local.get $3
    local.get $1
    local.get $0
    call $assembly/bucketing/segmentation/filterFunctionsBySubtype
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 3936
   i32.store offset=12
   local.get $2
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 2
   i32.shr_u
   i32.const 3936
   call $~lib/util/string/joinStringArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   call $~lib/bindings/dom/console.log
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/bucketing/segmentation/_evaluateOperator (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.load
  local.tee $3
  i32.store
  block $folding-inner0
   local.get $3
   i32.load offset=12
   i32.eqz
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.load offset=4
   local.tee $4
   i32.store
   local.get $3
   i32.const 1088
   i32.store offset=4
   local.get $4
   i32.const 1088
   call $~lib/string/String.__eq
   if (result i32)
    loop $for-loop|0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     local.get $2
     local.get $3
     i32.load offset=12
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.load
      local.tee $4
      i32.store
      local.get $3
      local.get $4
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store offset=8
      local.get $3
      local.get $1
      call $assembly/bucketing/segmentation/doesUserPassFilter
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       return
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   else
    loop $for-loop|1
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     local.get $2
     local.get $3
     i32.load offset=12
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      local.get $0
      i32.load
      local.tee $4
      i32.store
      local.get $3
      local.get $4
      local.get $2
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $3
      i32.store offset=8
      local.get $3
      local.get $1
      call $assembly/bucketing/segmentation/doesUserPassFilter
      i32.eqz
      br_if $folding-inner0
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|1
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Value.String
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/date/Date#toISOString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 112
  memory.fill
  local.get $0
  i32.load
  local.tee $1
  i32.const 0
  i32.lt_s
  local.tee $3
  local.get $1
  i32.const 10000
  i32.ge_s
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 13808
   i32.const 13840
   local.get $3
   select
   local.tee $3
   i32.store
   local.get $1
   i32.const 31
   i32.shr_s
   local.tee $5
   local.get $1
   local.get $5
   i32.add
   i32.xor
   i32.const 10
   call $~lib/number/I32#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 5632
   i32.store offset=12
   local.get $1
   i32.const 6
   call $~lib/string/String#padStart
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $4
   local.get $3
   local.get $1
   call $~lib/string/String#concat
   local.tee $1
   i32.store offset=16
  else
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 10
   call $~lib/number/I32#toString
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 5632
   i32.store offset=8
   local.get $1
   i32.const 4
   call $~lib/string/String#padStart
   local.tee $1
   i32.store offset=16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13808
  i32.store offset=100
  local.get $1
  i32.const 13808
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=92
  local.get $0
  i32.load offset=4
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=104
  global.get $~lib/memory/__stack_pointer
  i32.const 5632
  i32.store offset=108
  local.get $3
  i32.const 2
  call $~lib/string/String#padStart
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=96
  local.get $1
  local.get $3
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=84
  global.get $~lib/memory/__stack_pointer
  i32.const 13808
  i32.store offset=88
  local.get $1
  i32.const 13808
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=76
  local.get $0
  i32.load offset=8
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=84
  global.get $~lib/memory/__stack_pointer
  i32.const 5632
  i32.store offset=92
  local.get $3
  i32.const 2
  call $~lib/string/String#padStart
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=80
  local.get $1
  local.get $3
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=68
  global.get $~lib/memory/__stack_pointer
  i32.const 13872
  i32.store offset=72
  local.get $1
  i32.const 13872
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  i64.const 86400000
  i64.const 0
  local.get $0
  i64.load offset=16
  i64.const 86400000
  i64.rem_s
  local.tee $2
  i64.const 0
  i64.lt_s
  select
  local.get $2
  i64.add
  i32.wrap_i64
  i32.const 3600000
  i32.div_s
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=68
  global.get $~lib/memory/__stack_pointer
  i32.const 5632
  i32.store offset=76
  local.get $3
  i32.const 2
  call $~lib/string/String#padStart
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=64
  local.get $1
  local.get $3
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  global.get $~lib/memory/__stack_pointer
  i32.const 10560
  i32.store offset=56
  local.get $1
  i32.const 10560
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  i64.const 3600000
  i64.const 0
  local.get $0
  i64.load offset=16
  i64.const 3600000
  i64.rem_s
  local.tee $2
  i64.const 0
  i64.lt_s
  select
  local.get $2
  i64.add
  i32.wrap_i64
  i32.const 60000
  i32.div_s
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=52
  global.get $~lib/memory/__stack_pointer
  i32.const 5632
  i32.store offset=60
  local.get $3
  i32.const 2
  call $~lib/string/String#padStart
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=48
  local.get $1
  local.get $3
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 10560
  i32.store offset=40
  local.get $1
  i32.const 10560
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  i64.const 60000
  i64.const 0
  local.get $0
  i64.load offset=16
  i64.const 60000
  i64.rem_s
  local.tee $2
  i64.const 0
  i64.lt_s
  select
  local.get $2
  i64.add
  i32.wrap_i64
  i32.const 1000
  i32.div_s
  i32.const 10
  call $~lib/number/I32#toString
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=36
  global.get $~lib/memory/__stack_pointer
  i32.const 5632
  i32.store offset=44
  local.get $3
  i32.const 2
  call $~lib/string/String#padStart
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=32
  local.get $1
  local.get $3
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 3504
  i32.store offset=24
  local.get $1
  i32.const 3504
  call $~lib/string/String#concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  i64.const 1000
  i64.const 0
  local.get $0
  i64.load offset=16
  i64.const 1000
  i64.rem_s
  local.tee $2
  i64.const 0
  i64.lt_s
  select
  local.get $2
  i64.add
  i32.wrap_i64
  i32.const 10
  call $~lib/number/I32#toString
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 5632
  i32.store offset=28
  local.get $0
  i32.const 3
  call $~lib/string/String#padStart
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=20
  local.get $1
  local.get $0
  call $~lib/string/String#concat
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13904
  i32.store offset=4
  local.get $0
  i32.const 13904
  call $~lib/string/String#concat
  global.get $~lib/memory/__stack_pointer
  i32.const 112
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/isValidString (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 20
  memory.fill
  local.get $4
  local.get $0
  local.get $1
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $0
  i32.store
  local.get $2
  local.get $0
  call $~lib/array/Array<~lib/string/String>#includes
  i32.eqz
  if
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 14160
    i32.store offset=4
    local.get $3
    local.get $2
    i32.load offset=4
    local.get $2
    i32.load offset=12
    i32.const 14160
    call $~lib/util/string/joinStringArray
    local.tee $2
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 14112
    i32.store offset=12
    i32.const 14112
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 14112
    i32.store offset=12
    i32.const 14112
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 14112
    i32.store offset=12
    i32.const 14112
    i32.const 5
    local.get $2
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 14112
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=4
    i32.const 14112
    i32.const 14108
    i32.load
    i32.const 2
    i32.shr_u
    i32.const 3936
    call $~lib/util/string/joinStringArray
    i32.const 11712
    i32.const 50
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   else
    global.get $~lib/memory/__stack_pointer
    i32.const 14384
    i32.store offset=4
    i32.const 14384
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 14384
    i32.store offset=4
    i32.const 14384
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 14384
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=16
    i32.const 14384
    i32.const 14380
    i32.load
    i32.const 2
    i32.shr_u
    i32.const 3936
    call $~lib/util/string/joinStringArray
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=12
    local.get $1
    call $~lib/bindings/dom/console.log
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/date/Date.fromString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 28
  memory.fill
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.eqz
  if
   i32.const 9168
   i32.const 9216
   i32.const 45
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 13872
  i32.store
  local.get $0
  i32.const 13872
  i32.const 0
  call $~lib/string/String#indexOf
  local.tee $6
  i32.const -1
  i32.xor
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 0
   local.get $6
   call $~lib/string/String#substring
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $6
   i32.const 1
   i32.add
   i32.const 2147483647
   call $~lib/string/String#substring
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 10560
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 10560
   call $~lib/string/String#split
   local.tee $0
   i32.store offset=12
   local.get $0
   i32.load offset=12
   local.tee $6
   i32.const 1
   i32.le_s
   if
    i32.const 9168
    i32.const 9216
    i32.const 62
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=16
   local.get $3
   call $~lib/util/string/strtol<i32>
   local.set $3
   local.get $0
   i32.const 1
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=16
   local.get $4
   call $~lib/util/string/strtol<i32>
   local.set $4
   local.get $6
   i32.const 3
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.const 2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $0
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    i32.const 3504
    i32.store
    local.get $0
    i32.const 3504
    i32.const 0
    call $~lib/string/String#indexOf
    local.tee $6
    i32.const -1
    i32.xor
    if
     local.get $0
     i32.const 0
     local.get $6
     call $~lib/string/String#substring
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store offset=16
     local.get $2
     call $~lib/util/string/strtol<i32>
     local.set $2
     local.get $0
     local.get $6
     i32.const 1
     i32.add
     i32.const 2147483647
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=16
     local.get $0
     call $~lib/util/string/strtol<i32>
     local.set $5
    else
     local.get $0
     call $~lib/util/string/strtol<i32>
     local.set $2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 13808
  i32.store
  local.get $0
  local.get $1
  i32.const 13808
  call $~lib/string/String#split
  local.tee $6
  i32.store offset=24
  local.get $6
  i32.const 0
  call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store offset=16
  local.get $0
  call $~lib/util/string/strtol<i32>
  i32.const 1
  local.set $0
  local.get $6
  i32.load offset=12
  local.tee $1
  i32.const 2
  i32.ge_s
  if (result i32)
   local.get $6
   i32.const 1
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=16
   local.get $0
   call $~lib/util/string/strtol<i32>
   local.set $0
   local.get $1
   i32.const 3
   i32.ge_s
   if (result i32)
    local.get $6
    i32.const 2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=16
    local.get $1
    call $~lib/util/string/strtol<i32>
   else
    i32.const 1
   end
  else
   i32.const 1
  end
  local.set $1
  local.get $0
  i32.const 2
  i32.le_s
  i32.sub
  local.tee $6
  local.get $6
  i32.const 399
  i32.sub
  local.get $6
  i32.const 0
  i32.ge_s
  select
  i32.const 400
  i32.div_s
  local.set $7
  local.get $5
  i64.extend_i32_s
  local.get $2
  i32.const 1000
  i32.mul
  i64.extend_i32_s
  local.get $4
  i32.const 60000
  i32.mul
  i64.extend_i32_s
  local.get $3
  i32.const 3600000
  i32.mul
  i64.extend_i32_s
  local.get $0
  i32.const -3
  i32.const 9
  local.get $0
  i32.const 2
  i32.gt_s
  select
  i32.add
  i32.const 153
  i32.mul
  i32.const 2
  i32.add
  i32.const 5
  i32.div_u
  local.get $1
  i32.add
  local.get $6
  local.get $7
  i32.const 400
  i32.mul
  i32.sub
  local.tee $0
  i32.const 365
  i32.mul
  local.get $0
  i32.const 2
  i32.shr_u
  i32.add
  local.get $0
  i32.const 100
  i32.div_u
  i32.sub
  i32.add
  local.get $7
  i32.const 146097
  i32.mul
  i32.add
  i32.const 719469
  i32.sub
  i64.extend_i32_s
  i64.const 86400000
  i64.mul
  i64.add
  i64.add
  i64.add
  i64.add
  call $~lib/date/Date#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONObj (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  local.get $0
  i32.const 13728
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store
  local.get $0
  if (result f64)
   local.get $0
   call $assembly/helpers/jsonHelpers/getF64FromJSONValue
  else
   f64.const nan:0x8000000000000
  end
  local.tee $1
  local.get $1
  f64.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/number/F64#toString
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 14432
   i32.store offset=8
   i32.const 14432
   i32.const 1
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 14432
   i32.store offset=8
   i32.const 14432
   i32.const 3
   i32.const 13728
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 14432
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3936
   i32.store offset=12
   i32.const 14432
   i32.const 14428
   i32.load
   i32.const 2
   i32.shr_u
   i32.const 3936
   call $~lib/util/string/joinStringArray
   i32.const 11712
   i32.const 97
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/target/RolloutStage#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 16
  i32.const 78
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  f64.const 0
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13696
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 2976
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 13696
  i32.const 2976
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.tee $2
  i32.store
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13776
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 13776
  call $assembly/helpers/jsonHelpers/getDateFromJSON
  local.tee $2
  i32.store offset=4
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13728
  i32.store offset=4
  local.get $1
  local.get $0
  call $assembly/helpers/jsonHelpers/getF64FromJSONObj
  f64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/bucketing/bucketing/getCurrentRolloutPercentage (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.const 40
  memory.fill
  local.get $0
  f64.load offset=8
  local.set $2
  local.get $5
  local.get $0
  i32.load offset=16
  local.tee $6
  i32.store
  local.get $6
  i64.load offset=16
  local.set $7
  local.get $1
  i64.load offset=16
  local.set $3
  local.get $5
  local.get $0
  i32.load
  local.tee $1
  i32.store offset=4
  local.get $5
  i32.const 2640
  i32.store offset=8
  local.get $1
  i32.const 2640
  call $~lib/string/String.__eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 1
   f64.const 0
   local.get $3
   local.get $7
   i64.ge_s
   select
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.load offset=20
  local.tee $6
  i32.store
  local.get $1
  i32.const 0
  i32.const 2
  i32.const 79
  i32.const 13632
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 79
  i32.const 13664
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=16
  local.get $6
  if
   loop $for-loop|0
    local.get $4
    local.get $6
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     local.get $4
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $8
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.load offset=4
     local.tee $9
     i32.store offset=24
     local.get $9
     i64.load offset=16
     local.get $3
     i64.le_s
     if (result i32)
      local.get $1
      local.get $8
      call $~lib/array/Array<~lib/string/String>#push
     else
      local.get $5
      local.get $8
      call $~lib/array/Array<~lib/string/String>#push
     end
     drop
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  if (result i32)
   local.get $1
   i32.load offset=12
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   local.get $1
   i32.load offset=12
   i32.const 1
   i32.sub
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  else
   i32.const 0
  end
  local.tee $1
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $5
  if (result i32)
   local.get $5
   i32.load offset=12
   i32.const 0
   i32.gt_s
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
  else
   i32.const 0
  end
  local.tee $4
  i32.store offset=32
  i32.const 0
  local.get $3
  local.get $7
  i64.gt_s
  local.get $1
  select
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 13696
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 2896
   i32.store offset=36
   local.get $1
   i32.const 13696
   i32.const 2896
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
   global.get $~lib/memory/__stack_pointer
   i32.const 13728
   i32.store offset=8
   local.get $1
   i32.const 13728
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
   global.get $~lib/memory/__stack_pointer
   i32.const 13776
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $0
   i32.store offset=36
   local.get $0
   call $~lib/date/Date#toISOString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=36
   local.get $1
   i32.const 13776
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/types/target/RolloutStage#constructor
   local.tee $1
   i32.store offset=20
  end
  block $folding-inner1
   block $folding-inner0
    local.get $1
    i32.eqz
    br_if $folding-inner0
    local.get $4
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $4
     i32.load
     local.tee $5
     i32.store offset=4
     local.get $0
     i32.const 2896
     i32.store offset=8
     local.get $5
     i32.const 2896
     call $~lib/string/String.__eq
    else
     i32.const 1
    end
    if
     local.get $1
     f64.load offset=8
     local.set $2
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $1
    i32.load offset=4
    local.tee $5
    i32.store offset=24
    local.get $3
    local.get $5
    i64.load offset=16
    i64.sub
    f64.convert_i64_s
    local.get $0
    local.get $4
    i32.load offset=4
    local.tee $5
    i32.store offset=24
    local.get $5
    i64.load offset=16
    local.get $0
    local.get $1
    i32.load offset=4
    local.tee $0
    i32.store offset=24
    local.get $0
    i64.load offset=16
    i64.sub
    f64.convert_i64_s
    f64.div
    local.tee $2
    f64.const 0
    f64.eq
    br_if $folding-inner0
    local.get $1
    f64.load offset=8
    local.tee $10
    local.get $4
    f64.load offset=8
    local.get $10
    f64.sub
    f64.add
    local.get $2
    f64.mul
    local.set $2
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 40
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 40
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/bucketing/bucketing/_doesUserPassRollout (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  call $~lib/bindings/dom/Date.now
  i64.trunc_sat_f64_s
  call $~lib/date/Date#constructor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $0
  local.get $2
  call $assembly/bucketing/bucketing/getCurrentRolloutPercentage
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
  local.get $3
  f64.le
  if (result i32)
   local.get $3
   i64.reinterpret_f64
   i64.const 1
   i64.shl
   i64.const 2
   i64.sub
   i64.const -9007199254740994
   i64.le_u
  else
   i32.const 0
  end
 )
 (func $assembly/helpers/arrayHelpers/sortObjectsByString<assembly/types/target/TargetDistribution>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  loop $while-continue|0
   block $__inlined_func$~lib/string/String#charCodeAt (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    i32.const -1
    local.get $2
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.ge_u
    br_if $__inlined_func$~lib/string/String#charCodeAt
    drop
    local.get $3
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
   end
   local.set $4
   block $__inlined_func$~lib/string/String#charCodeAt0 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.load
    local.tee $3
    i32.store
    i32.const -1
    local.get $2
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.ge_u
    br_if $__inlined_func$~lib/string/String#charCodeAt0
    drop
    local.get $3
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
   end
   local.get $4
   i32.eq
   if (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $3
    i32.store
    local.get $2
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
   else
    i32.const 0
   end
   if
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $3
  i32.store
  local.get $3
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.get $2
  i32.gt_u
  if
   local.get $3
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   i32.load16_u
   drop
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load
  local.tee $3
  i32.store
  local.get $3
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.get $2
  i32.gt_u
  if
   local.get $3
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   i32.load16_u
   drop
  end
  block $__inlined_func$~lib/string/String#charCodeAt9 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $0
   i32.store
   i32.const -1
   local.get $2
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ge_u
   br_if $__inlined_func$~lib/string/String#charCodeAt9
   drop
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   i32.load16_u
  end
  block $__inlined_func$~lib/string/String#charCodeAt11 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load
   local.tee $1
   i32.store
   i32.const -1
   local.get $2
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.ge_u
   br_if $__inlined_func$~lib/string/String#charCodeAt11
   drop
   local.get $1
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   i32.load16_u
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.sub
 )
 (func $~lib/util/sort/extendRunRight<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $5
  i32.store
  local.get $4
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $6
  i32.store offset=4
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $6
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $7
     i32.load offset=4
     local.tee $5
     i32.store
     local.get $6
     local.get $7
     i32.load
     local.tee $6
     i32.store offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $6
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     local.tee $5
     i32.store offset=8
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load offset=4
     local.tee $6
     i32.store
     local.get $1
     local.get $5
     i32.load
     local.tee $1
     i32.store offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $6
     local.get $1
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/bucketing/bucketing/_decideTargetVariation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 24
   memory.fill
   local.get $2
   i32.const 0
   i32.const 2
   i32.const 122
   i32.const 15616
   call $~lib/rt/__newArray
   local.tee $5
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=12
    local.tee $2
    i32.store offset=4
    local.get $7
    local.get $2
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i32.const 0
     i32.store
     local.get $2
     i32.const 8
     i32.const 121
     call $~lib/rt/itcms/__new
     local.tee $3
     i32.store
     local.get $3
     i32.const 0
     i32.store
     local.get $3
     i32.const 0
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $4
     local.get $3
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=12
     local.tee $2
     i32.store offset=8
     local.get $3
     local.get $2
     local.get $7
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $2
     i32.store offset=4
     local.get $2
     if
      local.get $3
      local.get $2
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=12
     local.tee $2
     i32.store offset=8
     local.get $3
     local.get $2
     local.get $7
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     i32.load
     local.tee $2
     i32.store
     local.get $2
     if
      local.get $3
      local.get $2
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $5
     local.get $3
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 15648
   i32.store offset=8
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 15680
   i32.store
   local.get $5
   i32.load offset=4
   local.get $5
   i32.load offset=12
   i32.const 15680
   call $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   local.get $0
   local.get $5
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 81
   i32.const 15712
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=8
   loop $for-loop|05
    local.get $8
    local.get $5
    i32.load offset=12
    i32.lt_s
    if
     local.get $5
     local.get $8
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     i32.load offset=4
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store
     local.get $2
     local.get $0
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $8
     i32.const 1
     i32.add
     local.set $8
     br $for-loop|05
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 15648
   i32.store
   i32.const 15648
   i32.const 15648
   call $~lib/string/String.__eq
   if
    local.get $2
    i32.load offset=4
    local.get $2
    i32.load offset=12
    call $~lib/util/bytes/REVERSE<assembly/types/target/TargetDistribution>
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store offset=16
   i32.const 0
   local.set $0
   loop $for-loop|1
    local.get $0
    local.get $2
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     local.get $0
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $3
     i32.store offset=20
     local.get $6
     local.get $3
     f64.load offset=8
     f64.add
     local.tee $6
     local.get $1
     f64.gt
     local.get $1
     f64.const 0
     f64.ge
     i32.and
     if
      local.get $3
      i32.load
      global.get $~lib/memory/__stack_pointer
      i32.const 24
      i32.add
      global.set $~lib/memory/__stack_pointer
      return
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   i32.const 15744
   i32.const 15840
   i32.const 61
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,i64>#keys (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $0
  i32.load offset=8
  local.set $2
  local.get $3
  local.get $0
  i32.load offset=16
  local.tee $4
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $3
  i32.store
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.lt_s
   if
    local.get $2
    local.get $1
    i32.const 24
    i32.mul
    i32.add
    local.tee $5
    i32.load offset=16
    i32.const 1
    i32.and
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.load
     local.tee $5
     i32.store offset=4
     local.get $3
     local.get $0
     local.get $5
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  local.get $3
  local.get $0
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $3
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<~lib/string/String,i64>#find (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load
  local.get $2
  local.get $0
  i32.load offset=4
  i32.and
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $0
  loop $while-continue|0
   local.get $0
   if
    local.get $0
    i32.load offset=16
    local.tee $2
    i32.const 1
    i32.and
    if (result i32)
     i32.const 0
    else
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     local.get $3
     local.get $1
     call $~lib/string/String.__eq
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     return
    end
    local.get $2
    i32.const -2
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/bucketing/bucketing/_generateBucketedConfig (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 f64)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 84
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 84
   memory.fill
   local.get $2
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor
   local.tee $12
   i32.store
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor
   local.tee $10
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
   local.tee $9
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 24
   memory.fill
   local.get $0
   i32.const 0
   i32.const 2
   i32.const 113
   i32.const 12464
   call $~lib/rt/__newArray
   local.tee $14
   i32.store
   loop $for-loop|0
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load offset=8
    local.tee $0
    i32.store offset=4
    local.get $5
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $2
     i32.load offset=8
     local.tee $3
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $5
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $15
     i32.store offset=8
     i32.const 0
     local.set $0
     i32.const 0
     local.set $4
     loop $for-loop|1
      global.get $~lib/memory/__stack_pointer
      local.get $15
      i32.load offset=16
      i32.load offset=16
      local.tee $3
      i32.store offset=4
      local.get $4
      local.get $3
      i32.load offset=12
      i32.lt_s
      if
       block $for-break1
        global.get $~lib/memory/__stack_pointer
        local.tee $3
        local.get $15
        i32.load offset=16
        i32.load offset=16
        local.tee $16
        i32.store offset=4
        local.get $3
        local.get $16
        local.get $4
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.tee $3
        i32.store offset=12
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.load offset=4
        i32.load offset=4
        local.tee $16
        i32.store offset=4
        local.get $16
        local.get $1
        call $assembly/bucketing/segmentation/_evaluateOperator
        if
         local.get $3
         local.set $0
         br $for-break1
        end
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        br $for-loop|1
       end
      end
     end
     local.get $0
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $3
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      i32.const 0
      i32.store
      local.get $4
      i32.const 8
      i32.const 112
      call $~lib/rt/itcms/__new
      local.tee $4
      i32.store
      local.get $4
      i32.const 0
      i32.store
      local.get $4
      i32.const 0
      i32.store offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $3
      local.get $4
      i32.store offset=16
      local.get $4
      local.get $15
      i32.store
      local.get $15
      if
       local.get $4
       local.get $15
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $4
      local.get $0
      i32.store offset=4
      local.get $0
      if
       local.get $4
       local.get $0
       i32.const 0
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $3
      local.get $4
      i32.store offset=20
      local.get $14
      local.get $4
      call $~lib/array/Array<~lib/string/String>#push
      drop
     end
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $14
   i32.store offset=12
   loop $for-loop|01
    local.get $11
    local.get $14
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $14
     local.get $11
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $0
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $4
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $0
     i32.store offset=24
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.load
     local.tee $3
     i32.store offset=28
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $5
     i32.store offset=32
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $5
     call $assembly/bucketing/bucketing/_generateBoundedHashes
     local.tee $3
     i32.store offset=36
     local.get $3
     f64.load
     local.set $8
     local.get $3
     f64.load offset=8
     local.set $7
     local.get $0
     i32.load offset=8
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $3
      i32.store offset=28
      local.get $3
      local.get $8
      call $assembly/bucketing/bucketing/_doesUserPassRollout
     else
      i32.const 1
     end
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      local.get $7
      call $assembly/bucketing/bucketing/_decideTargetVariation
      local.tee $5
      i32.store offset=40
      i32.const 0
      local.set $3
      i32.const 0
      local.set $13
      loop $for-loop|12
       global.get $~lib/memory/__stack_pointer
       local.get $4
       i32.load offset=12
       local.tee $0
       i32.store offset=28
       local.get $13
       local.get $0
       i32.load offset=12
       i32.lt_s
       if
        block $for-break13
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         local.get $4
         i32.load offset=12
         local.tee $15
         i32.store offset=28
         local.get $0
         local.get $15
         local.get $13
         call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
         local.tee $0
         i32.store offset=44
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.load
         local.tee $15
         i32.store offset=28
         local.get $15
         local.get $5
         call $~lib/string/String.__eq
         if
          local.get $0
          local.set $3
          br $for-break13
         end
         local.get $13
         i32.const 1
         i32.add
         local.set $13
         br $for-loop|12
        end
       end
      end
      local.get $3
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 15936
       i32.store offset=28
       i32.const 15936
       local.get $5
       call $~lib/string/String#concat
       i32.const 15840
       i32.const 216
       i32.const 13
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      local.get $4
      i32.load offset=8
      local.tee $13
      i32.store offset=32
      local.get $0
      local.get $4
      i32.load
      local.tee $15
      i32.store offset=52
      local.get $0
      local.get $4
      i32.load offset=4
      local.tee $16
      i32.store offset=56
      local.get $0
      local.get $4
      i32.load offset=8
      local.tee $17
      i32.store offset=60
      local.get $0
      local.get $3
      i32.load offset=4
      local.tee $18
      i32.store offset=64
      local.get $0
      local.get $3
      i32.load offset=8
      local.tee $0
      i32.store offset=68
      local.get $15
      local.get $16
      local.get $17
      local.get $5
      local.get $18
      local.get $0
      i32.const 0
      call $assembly/types/bucketedUserConfig/SDKFeature#constructor
      local.set $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store offset=48
      local.get $10
      local.get $13
      local.get $0
      call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.load
      local.tee $0
      i32.store offset=32
      local.get $9
      local.get $0
      local.get $5
      call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
      i32.const 0
      local.set $13
      loop $for-loop|2
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.load offset=12
       local.tee $0
       i32.store offset=28
       local.get $13
       local.get $0
       i32.load offset=12
       i32.lt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.tee $0
        local.get $3
        i32.load offset=12
        local.tee $4
        i32.store offset=28
        local.get $0
        local.get $4
        local.get $13
        call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
        local.tee $15
        i32.store offset=44
        i32.const 0
        local.set $0
        i32.const 0
        local.set $5
        loop $for-loop|3
         global.get $~lib/memory/__stack_pointer
         local.get $2
         i32.load offset=12
         local.tee $4
         i32.store offset=28
         local.get $5
         local.get $4
         i32.load offset=12
         i32.lt_s
         if
          block $for-break3
           global.get $~lib/memory/__stack_pointer
           local.tee $4
           local.get $2
           i32.load offset=12
           local.tee $16
           i32.store offset=28
           local.get $4
           local.get $16
           local.get $5
           call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
           local.tee $4
           i32.store offset=72
           global.get $~lib/memory/__stack_pointer
           local.get $4
           i32.load
           local.tee $16
           i32.store offset=28
           global.get $~lib/memory/__stack_pointer
           local.get $15
           i32.load
           local.tee $17
           i32.store offset=32
           local.get $16
           local.get $17
           call $~lib/string/String.__eq
           if
            local.get $4
            local.set $0
            br $for-break3
           end
           local.get $5
           i32.const 1
           i32.add
           local.set $5
           br $for-loop|3
          end
         end
        end
        local.get $0
        i32.eqz
        if
         global.get $~lib/memory/__stack_pointer
         local.tee $0
         i32.const 16016
         i32.store offset=28
         local.get $0
         local.get $15
         i32.load
         local.tee $0
         i32.store offset=32
         i32.const 16016
         local.get $0
         call $~lib/string/String#concat
         i32.const 15840
         i32.const 242
         i32.const 17
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.tee $4
        local.get $0
        i32.load
        local.tee $5
        i32.store offset=32
        local.get $4
        local.get $0
        i32.load offset=4
        local.tee $16
        i32.store offset=48
        local.get $4
        local.get $0
        i32.load offset=8
        local.tee $17
        i32.store offset=52
        local.get $4
        local.get $15
        i32.load offset=4
        local.tee $15
        i32.store offset=56
        local.get $4
        local.get $5
        local.get $16
        local.get $17
        local.get $15
        i32.const 0
        call $assembly/types/bucketedUserConfig/SDKVariable#constructor
        local.tee $4
        i32.store offset=76
        global.get $~lib/memory/__stack_pointer
        local.get $0
        i32.load offset=8
        local.tee $0
        i32.store offset=32
        local.get $12
        local.get $0
        local.get $4
        call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
        local.get $13
        i32.const 1
        i32.add
        local.set $13
        br $for-loop|2
       end
      end
     end
     local.get $11
     i32.const 1
     i32.add
     local.set $11
     br $for-loop|01
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $2
   i32.load
   local.tee $1
   i32.store offset=32
   local.get $0
   local.get $2
   i32.load offset=4
   local.tee $4
   i32.store offset=48
   local.get $0
   local.get $2
   i32.load offset=16
   local.tee $2
   i32.store offset=52
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   i32.const 3
   i32.const 111
   i32.const 16096
   call $~lib/rt/__newArray
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/map/Map<~lib/string/String,i64>#keys
   local.tee $5
   i32.store offset=4
   i32.const 0
   local.set $3
   loop $for-loop|04
    local.get $3
    local.get $5
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $11
     i32.store offset=8
     local.get $2
     local.get $11
     call $~lib/map/Map<~lib/string/String,i64>#get
     local.set $6
     local.get $12
     local.get $11
     local.get $11
     call $~lib/util/hash/HASH<~lib/string/String>
     call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
     i32.eqz
     if
      local.get $0
      local.get $6
      call $~lib/array/Array<i64>#push
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|04
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=80
   local.get $1
   local.get $4
   local.get $10
   local.get $9
   local.get $12
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor
   global.get $~lib/memory/__stack_pointer
   i32.const 84
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $4
  i32.store offset=4
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.load offset=12
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $2
    i32.store offset=8
    local.get $0
    local.get $2
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $5
    local.get $2
    local.get $3
    call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#keys
  local.tee $4
  i32.store offset=4
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.load offset=12
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $2
    i32.store offset=8
    local.get $0
    local.get $2
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=12
    local.get $5
    local.get $2
    local.get $3
    call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16128
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=8
   local.get $4
   i32.const 16128
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16176
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store offset=8
   local.get $4
   i32.const 16176
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.store offset=8
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $4
   i32.const 16224
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16272
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=16
   local.tee $2
   i32.store offset=8
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<~lib/string/String>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $4
   i32.const 16272
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16336
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=20
   local.tee $2
   i32.store offset=8
   local.get $2
   call $assembly/helpers/jsonHelpers/jsonObjFromMap<assembly/types/bucketedUserConfig/SDKFeature>
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   local.get $4
   i32.const 16336
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16384
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=24
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   local.get $4
   i32.load
   local.tee $2
   i32.store
   local.get $0
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   block $__inlined_func$~lib/assemblyscript-json/assembly/JSON/from<~lib/array/Array<i64>>
    local.get $3
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/assemblyscript-json/assembly/JSON/NULL
     local.set $0
     br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/from<~lib/array/Array<i64>>
    end
    global.get $~lib/memory/__stack_pointer
    call $~lib/assemblyscript-json/assembly/JSON/Arr#constructor
    local.tee $0
    i32.store
    loop $for-loop|0
     local.get $1
     local.get $3
     i32.load offset=12
     i32.lt_s
     if
      local.get $1
      local.get $3
      i32.load offset=12
      i32.ge_u
      if
       i32.const 3728
       i32.const 4016
       i32.const 114
       i32.const 42
       call $~lib/builtins/abort
       unreachable
      end
      local.get $3
      i32.load offset=4
      local.get $1
      i32.const 3
      i32.shl
      i32.add
      i64.load
      call $~lib/assemblyscript-json/assembly/JSON/Value.Integer
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store offset=4
      local.get $0
      local.get $5
      call $~lib/assemblyscript-json/assembly/JSON/Arr#push
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   local.get $2
   i32.const 16384
   local.get $0
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/getJSONObjFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getObj
  local.tee $2
  i32.store
  local.get $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 17184
   i32.store offset=8
   i32.const 17184
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 17184
   i32.store offset=8
   i32.const 17184
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 17184
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3936
   i32.store offset=12
   i32.const 17184
   i32.const 17180
   i32.load
   i32.const 2
   i32.shr_u
   i32.const 3936
   call $~lib/util/string/joinStringArray
   i32.const 11712
   i32.const 5
   i32.const 15
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/configBody/PublicProject#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 16
  i32.const 57
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16928
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 16928
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $2
  i32.store
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16960
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 16960
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $2
  i32.store offset=4
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16992
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 16992
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $2
  i32.store offset=8
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17056
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 17056
  call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
  local.tee $0
  i32.store offset=12
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/configBody/PublicEnvironment#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 8
  i32.const 58
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16928
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 16928
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $2
  i32.store
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16960
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 16960
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/helpers/jsonHelpers/getJSONArrayFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i64.const 0
  i64.store offset=8
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $2
  i32.store
  local.get $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 17312
   i32.store offset=8
   i32.const 17312
   i32.const 1
   local.get $1
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 17312
   i32.store offset=8
   i32.const 17312
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 17312
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3936
   i32.store offset=12
   i32.const 17312
   i32.const 17308
   i32.load
   i32.const 2
   i32.shr_u
   i32.const 3936
   call $~lib/util/string/joinStringArray
   i32.const 11712
   i32.const 19
   i32.const 15
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/helpers/jsonHelpers/getJSONValueFromJSON (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i64.const 0
  i64.store offset=8
  local.get $1
  local.get $0
  i32.const 17440
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $1
  i32.store
  local.get $1
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 17552
   i32.store offset=8
   i32.const 17552
   i32.const 1
   i32.const 17440
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 17552
   i32.store offset=8
   i32.const 17552
   i32.const 3
   local.get $0
   call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
   global.get $~lib/memory/__stack_pointer
   i32.const 17552
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 3936
   i32.store offset=12
   i32.const 17552
   i32.const 17548
   i32.load
   i32.const 2
   i32.shr_u
   i32.const 3936
   call $~lib/util/string/joinStringArray
   i32.const 11712
   i32.const 138
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
 )
 (func $assembly/types/feature/Variation#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $2
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 17600
    i32.const 66
    i32.const 42
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i32.const 8
   i32.const 61
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 17408
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 17408
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 17440
   i32.store offset=4
   local.get $1
   local.get $0
   call $assembly/helpers/jsonHelpers/getJSONValueFromJSON
   local.tee $0
   i32.store offset=4
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/feature/Variation#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i64.const 0
   i64.store offset=8
   local.get $1
   i32.const 16
   i32.const 60
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16928
   i32.store offset=4
   local.get $5
   local.get $0
   i32.const 16928
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $1
   i32.store
   local.get $1
   if
    local.get $5
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 11808
   i32.store offset=4
   local.get $5
   local.get $0
   i32.const 11808
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $1
   i32.store offset=4
   local.get $1
   if
    local.get $5
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16960
   i32.store offset=4
   local.get $5
   local.get $0
   i32.const 16960
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $1
   i32.store offset=8
   local.get $1
   if
    local.get $5
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 16336
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 16336
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $3
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 17680
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   local.get $3
   i32.load offset=12
   local.tee $1
   i32.const 2
   i32.const 62
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $6
   i32.store
   local.get $6
   i32.load offset=4
   local.set $2
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $0
    local.get $1
    local.get $3
    i32.load offset=12
    local.tee $4
    local.get $1
    local.get $4
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $4
     local.get $0
     i32.const 2
     i32.shl
     local.tee $7
     local.get $3
     i32.load offset=4
     i32.add
     i32.load
     local.tee $8
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $4
     local.get $8
     local.get $0
     local.get $3
     i32.const 17680
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $4
     i32.store offset=8
     local.get $2
     local.get $7
     i32.add
     local.get $4
     i32.store
     local.get $4
     if
      local.get $6
      local.get $4
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   local.get $6
   i32.store offset=12
   local.get $6
   if
    local.get $5
    local.get $6
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/feature/Feature#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/rt/__instanceof (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $1
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|0
     i32.const 1
     local.get $1
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof
     drop
     local.get $1
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $1
     br_if $do-loop|0
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 17600
   i32.const 31
   i32.const 34
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/feature/Variation#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $2
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 17888
    i32.const 26
    i32.const 49
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 8
   i32.const 65
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 17792
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 17792
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 17840
   i32.store offset=4
   local.get $2
   i32.const 3056
   i32.store offset=8
   local.get $1
   local.get $0
   i32.const 17840
   i32.const 3056
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.tee $0
   i32.store offset=4
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/helpers/jsonHelpers/isValidStringOptional (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.const 28
  memory.fill
  local.get $4
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 28
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $4
  i32.store offset=4
  local.get $2
  local.get $4
  call $~lib/array/Array<~lib/string/String>#includes
  i32.eqz
  if
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.load
    local.tee $0
    i32.store offset=8
    local.get $2
    i32.const 18400
    i32.store offset=12
    i32.const 18400
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 18400
    i32.store offset=12
    i32.const 18400
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 18400
    i32.store offset=12
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=16
    i32.const 18400
    i32.const 18396
    i32.load
    i32.const 2
    i32.shr_u
    i32.const 3936
    call $~lib/util/string/joinStringArray
    i32.const 11712
    i32.const 74
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   else
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $0
    i32.load
    local.tee $0
    i32.store offset=20
    local.get $2
    i32.const 18448
    i32.store offset=16
    i32.const 18448
    i32.const 1
    local.get $0
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 18448
    i32.store offset=16
    i32.const 18448
    i32.const 3
    local.get $1
    call $~lib/staticarray/StaticArray<~lib/string/String>#__uset
    global.get $~lib/memory/__stack_pointer
    i32.const 18448
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=24
    i32.const 18448
    i32.const 18444
    i32.load
    i32.const 2
    i32.shr_u
    i32.const 3936
    call $~lib/util/string/joinStringArray
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=12
    local.get $0
    call $~lib/bindings/dom/console.log
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/types/target/AudienceFilterOrOperator#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/rt/__instanceof (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $1
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|0
     i32.const 1
     local.get $1
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof
     drop
     local.get $1
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $1
     br_if $do-loop|0
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 18272
   i32.const 139
   i32.const 46
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/target/initializeFilterClass
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/AudienceFilterOrOperator> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 2
  i32.const 76
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $7
  i32.store
  local.get $7
  i32.load offset=4
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $3
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $2
    i32.const 2
    i32.shl
    local.tee $5
    local.get $0
    i32.load offset=4
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    i32.const 3
    global.set $~argumentsLength
    local.get $8
    local.get $6
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $6
    i32.store offset=8
    local.get $4
    local.get $5
    i32.add
    local.get $6
    i32.store
    local.get $6
    if
     local.get $7
     local.get $6
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/types/target/AudienceFilterOrOperator#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 73
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  local.get $0
  i32.const 0
  i32.store offset=24
  local.get $0
  i32.const 0
  i32.store offset=28
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13696
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 1328
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 13696
  i32.const 1328
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidStringOptional
  local.tee $0
  i32.store
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 18352
  i32.store offset=4
  local.get $0
  i32.const 1856
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 18352
  i32.const 1856
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidStringOptional
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 17840
  i32.store offset=4
  local.get $0
  i32.const 2320
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 17840
  i32.const 2320
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidStringOptional
  local.tee $0
  i32.store offset=8
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18496
  i32.store offset=4
  local.get $2
  local.get $1
  i32.const 18496
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.tee $0
  i32.store offset=12
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 18544
  i32.store offset=4
  local.get $0
  i32.const 2512
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 18544
  i32.const 2512
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidStringOptional
  local.tee $0
  i32.store offset=16
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 18592
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 18592
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $0
  i32.store offset=12
  local.get $0
  if
   local.get $2
   local.get $0
   i32.store offset=20
  else
   i32.const 0
   local.set $0
   local.get $2
   i32.const 0
   i32.store offset=20
  end
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 18624
  i32.store offset=4
  local.get $0
  i32.const 2592
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 18624
  i32.const 2592
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidStringOptional
  local.tee $0
  i32.store offset=24
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 18224
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 18224
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getArr
  local.tee $0
  i32.store offset=16
  local.get $2
  local.get $0
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load
   local.tee $0
   i32.store offset=20
   local.get $1
   i32.const 18672
   i32.store offset=4
   local.get $0
   i32.const 18672
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/AudienceFilterOrOperator>
  else
   i32.const 0
  end
  local.tee $0
  i32.store offset=28
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/types/target/UserFilter#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 114
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  call $assembly/types/target/AudienceFilterOrOperator#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18592
  i32.store offset=4
  local.get $0
  local.get $1
  i32.const 18592
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $2
  i32.store offset=20
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 13696
  i32.store offset=4
  local.get $2
  i32.const 1328
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 13696
  i32.const 1328
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.tee $2
  i32.store
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 18352
  i32.store offset=4
  local.get $2
  i32.const 1856
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 18352
  i32.const 1856
  i32.const 0
  call $assembly/helpers/jsonHelpers/isValidString
  local.tee $2
  i32.store offset=4
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 17840
  i32.store offset=4
  local.get $2
  i32.const 2320
  i32.store offset=8
  local.get $0
  local.get $1
  i32.const 17840
  i32.const 2320
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.tee $1
  i32.store offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/target/CustomDataFilter#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 32
  i32.const 117
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.store offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $0
  call $assembly/types/target/UserFilter#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18496
  i32.store offset=4
  local.get $1
  local.get $0
  i32.const 18496
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $2
  i32.store offset=12
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 18544
  i32.store offset=4
  local.get $2
  i32.const 2512
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 18544
  i32.const 2512
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.tee $0
  i32.store offset=16
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/target/initializeFilterClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 13696
  i32.store offset=8
  local.get $0
  i32.const 13696
  call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1232
  i32.store offset=4
  local.get $1
  i32.const 1232
  call $~lib/string/String.__eq
  if (result i32)
   global.get $~lib/memory/__stack_pointer
   i32.const 18352
   i32.store offset=8
   local.get $0
   i32.const 18352
   call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 1744
   i32.store offset=4
   local.get $1
   i32.const 1744
   call $~lib/string/String.__eq
   if
    local.get $0
    call $assembly/types/target/CustomDataFilter#constructor
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   local.get $0
   call $assembly/types/target/UserFilter#constructor
  else
   i32.const 0
   local.get $0
   call $assembly/types/target/AudienceFilterOrOperator#constructor
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/target/TopLevelOperator#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/rt/__instanceof (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $1
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|0
     i32.const 1
     local.get $1
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof
     drop
     local.get $1
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $1
     br_if $do-loop|0
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 18272
   i32.const 74
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/target/initializeFilterClass
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/target/TopLevelOperator#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.const 20
  memory.fill
  local.get $1
  i32.const 8
  i32.const 72
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18224
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 18224
  call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
  local.tee $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.load
  local.tee $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 18704
  i32.store offset=4
  local.get $1
  local.get $2
  i32.const 18704
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#map<assembly/types/target/AudienceFilterOrOperator>
  local.tee $2
  i32.store
  local.get $2
  if
   local.get $1
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 18624
  i32.store offset=4
  local.get $2
  i32.const 1152
  i32.store offset=16
  local.get $1
  local.get $0
  i32.const 18624
  i32.const 1152
  i32.const 1
  call $assembly/helpers/jsonHelpers/isValidString
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/types/target/Rollout#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/rt/__instanceof (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $1
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|0
     i32.const 1
     local.get $1
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof
     drop
     local.get $1
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $1
     br_if $do-loop|0
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 18272
   i32.const 230
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/target/RolloutStage#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/target/Rollout#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill
   local.get $2
   i32.const 24
   i32.const 77
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   f64.const 0
   f64.store offset=8
   local.get $2
   i32.const 0
   i32.store offset=16
   local.get $2
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $5
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13696
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 2816
   i32.store offset=8
   local.get $5
   local.get $0
   i32.const 13696
   i32.const 2816
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $5
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 18832
   i32.store offset=4
   local.get $5
   local.get $0
   i32.const 18832
   f64.const 1
   call $assembly/helpers/jsonHelpers/getF64FromJSONOptional
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 18896
   i32.store offset=4
   local.get $5
   local.get $0
   i32.const 18896
   call $assembly/helpers/jsonHelpers/getDateFromJSON
   local.tee $2
   i32.store offset=16
   local.get $2
   if
    local.get $5
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 18944
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 18944
   call $~lib/assemblyscript-json/assembly/JSON/Obj#getArr
   local.tee $0
   i32.store offset=12
   local.get $0
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.load
    local.tee $3
    i32.store offset=16
    local.get $1
    i32.const 18976
    i32.store offset=4
    local.get $1
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store
    local.get $0
    i32.const 0
    i32.store offset=8
    local.get $0
    local.get $3
    i32.load offset=12
    local.tee $6
    i32.const 2
    i32.const 79
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $1
    i32.store
    local.get $1
    i32.load offset=4
    local.set $2
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $0
     local.get $6
     local.get $3
     i32.load offset=12
     local.tee $4
     local.get $4
     local.get $6
     i32.gt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $4
      local.get $0
      i32.const 2
      i32.shl
      local.tee $7
      local.get $3
      i32.load offset=4
      i32.add
      i32.load
      local.tee $8
      i32.store offset=4
      i32.const 3
      global.set $~argumentsLength
      local.get $4
      local.get $8
      local.get $0
      local.get $3
      i32.const 18976
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      local.tee $4
      i32.store offset=8
      local.get $2
      local.get $7
      i32.add
      local.get $4
      i32.store
      local.get $4
      if
       local.get $1
       local.get $4
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $5
   local.get $1
   i32.store offset=20
   local.get $1
   if
    local.get $5
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $5
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/target/Target#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $2
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 18272
    i32.const 29
    i32.const 43
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i32.const 16
   i32.const 80
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   f64.const 0
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 18080
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 18080
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 13728
   i32.store offset=4
   local.get $1
   local.get $0
   call $assembly/helpers/jsonHelpers/getF64FromJSONObj
   f64.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/target/Target#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 24
   memory.fill
   local.get $1
   i32.const 16
   i32.const 70
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16928
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 16928
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 18736
   i32.store offset=8
   local.get $0
   i32.const 18736
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i32.const 0
   i32.store offset=8
   local.get $3
   i32.const 8
   i32.const 71
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16928
   i32.store offset=4
   local.get $3
   local.get $2
   i32.const 16928
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $4
   i32.store
   local.get $4
   if
    local.get $3
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 18224
   i32.store offset=8
   local.get $2
   i32.const 18224
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $2
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $3
   local.get $2
   call $assembly/types/target/TopLevelOperator#constructor
   local.tee $2
   i32.store offset=4
   local.get $2
   if
    local.get $3
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $3
   i32.store offset=4
   local.get $3
   if
    local.get $1
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 18784
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 18784
   call $~lib/assemblyscript-json/assembly/JSON/Obj#getObj
   local.tee $2
   i32.store offset=12
   local.get $1
   local.get $2
   if (result i32)
    local.get $2
    call $assembly/types/target/Rollout#constructor
   else
    i32.const 0
   end
   local.tee $2
   i32.store offset=8
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 19008
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 19008
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $2
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 19056
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   local.get $2
   i32.load offset=12
   local.tee $3
   i32.const 2
   i32.const 81
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store
   local.get $4
   i32.load offset=4
   local.set $6
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $0
    local.get $3
    local.get $2
    i32.load offset=12
    local.tee $5
    local.get $3
    local.get $5
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     local.get $0
     i32.const 2
     i32.shl
     local.tee $7
     local.get $2
     i32.load offset=4
     i32.add
     i32.load
     local.tee $8
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $5
     local.get $8
     local.get $0
     local.get $2
     i32.const 19056
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $5
     i32.store offset=8
     local.get $6
     local.get $7
     i32.add
     local.get $5
     i32.store
     local.get $5
     if
      local.get $4
      local.get $5
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $4
   i32.store offset=12
   local.get $4
   if
    local.get $1
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/rt/__instanceof (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $1
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|0
     i32.const 1
     local.get $1
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof
     drop
     local.get $1
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $1
     br_if $do-loop|0
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 17888
   i32.const 33
   i32.const 77
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/target/Target#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/featureConfiguration/FeatureConfiguration#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.const 24
   memory.fill
   local.get $4
   i32.const 20
   i32.const 64
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   i32.store offset=12
   local.get $4
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16928
   i32.store offset=4
   local.get $4
   local.get $0
   i32.const 16928
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $5
   i32.store
   local.get $5
   if
    local.get $4
    local.get $5
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 17744
   i32.store offset=4
   local.get $5
   local.get $0
   i32.const 17744
   call $~lib/assemblyscript-json/assembly/JSON/Obj#getArr
   local.tee $5
   i32.store offset=8
   local.get $5
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    local.get $5
    i32.load
    local.tee $7
    i32.store offset=12
    local.get $2
    i32.const 17984
    i32.store offset=4
    local.get $2
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store
    local.get $2
    i32.const 0
    i32.store offset=8
    local.get $2
    local.get $7
    i32.load offset=12
    local.tee $8
    i32.const 2
    i32.const 66
    i32.const 0
    call $~lib/rt/__newArray
    local.tee $2
    i32.store
    local.get $2
    i32.load offset=4
    local.set $9
    loop $for-loop|0
     local.get $3
     local.get $8
     local.get $7
     i32.load offset=12
     local.tee $5
     local.get $5
     local.get $8
     i32.gt_s
     select
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $3
      i32.const 2
      i32.shl
      local.tee $6
      local.get $7
      i32.load offset=4
      i32.add
      i32.load
      local.tee $10
      i32.store offset=4
      i32.const 3
      global.set $~argumentsLength
      local.get $5
      local.get $10
      local.get $3
      local.get $7
      i32.const 17984
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      local.tee $5
      i32.store offset=8
      local.get $6
      local.get $9
      i32.add
      local.get $5
      i32.store
      local.get $5
      if
       local.get $2
       local.get $5
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $4
   local.get $2
   i32.store offset=4
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 18016
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 18016
   call $~lib/assemblyscript-json/assembly/JSON/Obj#getObj
   local.tee $2
   i32.store offset=16
   local.get $2
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i64.const 0
    i64.store
    local.get $1
    i32.const 8
    i32.const 67
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    local.get $1
    i32.const 0
    i32.store
    local.get $1
    i32.const 0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 18080
    i32.store offset=4
    local.get $1
    local.get $2
    i32.const 18080
    call $assembly/helpers/jsonHelpers/getStringFromJSON
    local.tee $3
    i32.store
    local.get $3
    if
     local.get $1
     local.get $3
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 18128
    i32.store offset=4
    local.get $1
    local.get $2
    i32.const 18128
    call $assembly/helpers/jsonHelpers/getDateFromJSON
    local.tee $2
    i32.store offset=4
    local.get $2
    if
     local.get $1
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $4
   local.get $1
   i32.store offset=8
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 18176
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 18176
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 19088
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   local.get $1
   i32.load offset=12
   local.tee $2
   i32.const 2
   i32.const 82
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $3
   i32.store
   local.get $3
   i32.load offset=4
   local.set $5
   i32.const 0
   local.set $0
   loop $for-loop|08
    local.get $0
    local.get $2
    local.get $1
    i32.load offset=12
    local.tee $6
    local.get $2
    local.get $6
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     i32.const 2
     i32.shl
     local.tee $7
     local.get $1
     i32.load offset=4
     i32.add
     i32.load
     local.tee $8
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $6
     local.get $8
     local.get $0
     local.get $1
     i32.const 19088
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $6
     i32.store offset=8
     local.get $5
     local.get $7
     i32.add
     local.get $6
     i32.store
     local.get $6
     if
      local.get $3
      local.get $6
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|08
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $3
   i32.store offset=16
   local.get $3
   if
    local.get $4
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $4
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/feature/Feature#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.const 20
   memory.fill
   local.get $2
   i32.const 24
   i32.const 59
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 0
   i32.store offset=4
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 0
   i32.store offset=12
   local.get $2
   i32.const 0
   i32.store offset=16
   local.get $2
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16928
   i32.store offset=4
   local.get $4
   local.get $0
   i32.const 16928
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 13696
   i32.store offset=4
   local.get $2
   i32.const 3328
   i32.store offset=8
   local.get $4
   local.get $0
   i32.const 13696
   i32.const 3328
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.tee $2
   i32.store offset=4
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16960
   i32.store offset=4
   local.get $4
   local.get $0
   i32.const 16960
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store offset=8
   local.get $2
   if
    local.get $4
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 17360
   i32.store offset=4
   local.get $2
   local.get $0
   i32.const 17360
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load
   local.tee $5
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   i32.const 17712
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   local.get $5
   i32.load offset=12
   local.tee $2
   i32.const 2
   i32.const 63
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $7
   i32.store
   local.get $7
   i32.load offset=4
   local.set $3
   loop $for-loop|0
    local.get $1
    local.get $2
    local.get $5
    i32.load offset=12
    local.tee $6
    local.get $2
    local.get $6
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $1
     i32.const 2
     i32.shl
     local.tee $8
     local.get $5
     i32.load offset=4
     i32.add
     i32.load
     local.tee $9
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $6
     local.get $9
     local.get $1
     local.get $5
     i32.const 17712
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $6
     i32.store offset=8
     local.get $3
     local.get $8
     i32.add
     local.get $6
     i32.store
     local.get $6
     if
      local.get $7
      local.get $6
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $7
   i32.store offset=12
   local.get $7
   if
    local.get $4
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 19120
   i32.store offset=8
   local.get $0
   i32.const 19120
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $4
   local.get $1
   call $assembly/types/featureConfiguration/FeatureConfiguration#constructor
   local.tee $1
   i32.store offset=16
   local.get $1
   if
    local.get $4
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 17056
   i32.store offset=4
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   local.get $0
   i32.const 17056
   call $~lib/assemblyscript-json/assembly/JSON/Obj#getObj
   local.tee $0
   i32.store
   block $__inlined_func$assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
    local.get $0
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     local.set $0
     br $__inlined_func$assembly/helpers/jsonHelpers/getJSONObjFromJSONOptional
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   local.get $4
   local.get $0
   i32.store offset=20
   local.get $0
   if
    local.get $4
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBody/ConfigBody#constructor~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/rt/__instanceof (result i32)
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $1
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|0
     i32.const 1
     local.get $1
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof
     drop
     local.get $1
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $1
     br_if $do-loop|0
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 16848
   i32.const 98
   i32.const 32
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/types/feature/Feature#constructor
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/configBody/ConfigBody#constructor~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $2
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 16848
    i32.const 103
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 12
   i32.const 84
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16928
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 16928
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 13696
   i32.store offset=4
   local.get $2
   i32.const 3456
   i32.store offset=8
   local.get $1
   local.get $0
   i32.const 13696
   i32.const 3456
   i32.const 1
   call $assembly/helpers/jsonHelpers/isValidString
   local.tee $2
   i32.store offset=4
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16960
   i32.store offset=4
   local.get $1
   local.get $0
   i32.const 16960
   call $assembly/helpers/jsonHelpers/getStringFromJSON
   local.tee $0
   i32.store offset=8
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/configBody/ConfigBody#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 52
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 52
   memory.fill
   local.get $1
   i32.const 20
   i32.const 56
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 0
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=8
   local.get $3
   i32.const 0
   i32.store offset=12
   local.get $3
   i32.const 0
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $1
   i32.store offset=4
   local.get $1
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $1
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 16720
    i32.const 16848
    i32.const 89
    i32.const 32
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 16848
    i32.const 90
    i32.const 31
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16128
   i32.store offset=16
   local.get $1
   i32.const 16128
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $0
   call $assembly/types/configBody/PublicProject#constructor
   local.tee $0
   i32.store
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16176
   i32.store offset=16
   local.get $1
   i32.const 16176
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=12
   local.get $3
   local.get $0
   call $assembly/types/configBody/PublicEnvironment#constructor
   local.tee $0
   i32.store offset=4
   local.get $0
   if
    local.get $3
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 16224
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 16224
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 19168
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   local.get $4
   i32.load offset=12
   local.tee $6
   i32.const 2
   i32.const 83
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $7
   i32.store
   local.get $7
   i32.load offset=4
   local.set $8
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $0
    local.get $6
    local.get $4
    i32.load offset=12
    local.tee $9
    local.get $6
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     local.get $0
     i32.const 2
     i32.shl
     local.tee $10
     local.get $4
     i32.load offset=4
     i32.add
     i32.load
     local.tee $11
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $9
     local.get $11
     local.get $0
     local.get $4
     i32.const 19168
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $9
     i32.store offset=8
     local.get $8
     local.get $10
     i32.add
     local.get $9
     i32.store
     local.get $9
     if
      local.get $7
      local.get $9
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $7
   i32.store offset=8
   local.get $7
   if
    local.get $3
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 16336
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 16336
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $0
   i32.store offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   i32.const 19200
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   local.get $4
   i32.load offset=12
   local.tee $6
   i32.const 2
   i32.const 85
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $7
   i32.store
   local.get $7
   i32.load offset=4
   local.set $8
   i32.const 0
   local.set $0
   loop $for-loop|06
    local.get $0
    local.get $6
    local.get $4
    i32.load offset=12
    local.tee $9
    local.get $6
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     local.get $0
     i32.const 2
     i32.shl
     local.tee $10
     local.get $4
     i32.load offset=4
     i32.add
     i32.load
     local.tee $11
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $9
     local.get $11
     local.get $0
     local.get $4
     i32.const 19200
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $9
     i32.store offset=8
     local.get $8
     local.get $10
     i32.add
     local.get $9
     i32.store
     local.get $9
     if
      local.get $7
      local.get $9
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|06
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $7
   i32.store offset=12
   local.get $7
   if
    local.get $3
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 19232
   i32.store offset=12
   local.get $0
   local.get $1
   i32.const 19232
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $9
   i32.store offset=32
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 24
   i32.const 86
   call $~lib/rt/itcms/__new
   local.tee $10
   i32.store
   local.get $10
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $1
   i32.store
   local.get $1
   if
    local.get $10
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $10
   i32.const 3
   i32.store offset=4
   local.get $10
   i32.const 96
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $1
   i32.store offset=8
   local.get $1
   if
    local.get $10
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $10
   i32.const 4
   i32.store offset=12
   local.get $10
   i32.const 0
   i32.store offset=16
   local.get $10
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   local.get $9
   call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
   local.tee $11
   i32.store offset=40
   loop $for-loop|012
    local.get $2
    local.get $11
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $11
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $6
     i32.store offset=44
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~lib/assemblyscript-json/assembly/JSON/Obj#getInteger (result i32)
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 22740
      i32.lt_s
      br_if $folding-inner1
      global.get $~lib/memory/__stack_pointer
      local.tee $0
      i32.const 0
      i32.store
      local.get $0
      local.get $9
      local.get $6
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $1
      i32.store
      local.get $1
      if (result i32)
       local.get $1
       if (result i32)
        block $__inlined_func$~lib/rt/__instanceof15 (result i32)
         local.get $1
         i32.const 20
         i32.sub
         i32.load offset=12
         local.tee $0
         i32.const 21616
         i32.load
         i32.le_u
         if
          loop $do-loop|017
           i32.const 1
           local.get $0
           i32.const 104
           i32.eq
           br_if $__inlined_func$~lib/rt/__instanceof15
           drop
           local.get $0
           i32.const 3
           i32.shl
           i32.const 21620
           i32.add
           i32.load offset=4
           local.tee $0
           br_if $do-loop|017
          end
         end
         i32.const 0
        end
       else
        i32.const 0
       end
      else
       i32.const 0
      end
      if
       block $__inlined_func$~lib/rt/__instanceof18 (result i32)
        local.get $1
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|020
          i32.const 1
          local.get $0
          i32.const 104
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof18
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|020
         end
        end
        i32.const 0
       end
       i32.eqz
       if
        i32.const 5152
        i32.const 9744
        i32.const 394
        i32.const 25
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $1
       br $__inlined_func$~lib/assemblyscript-json/assembly/JSON/Obj#getInteger
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 0
     end
     local.tee $0
     i32.store offset=48
     local.get $0
     i32.eqz
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 19280
      i32.store offset=24
      i32.const 19280
      local.get $6
      call $~lib/string/String#concat
      i32.const 16848
      i32.const 112
      i32.const 25
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i64.load
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     local.get $10
     local.get $6
     local.get $6
     call $~lib/util/hash/HASH<~lib/string/String>
     local.tee $7
     call $~lib/map/Map<~lib/string/String,i64>#find
     local.tee $0
     if
      local.get $0
      local.get $5
      i64.store offset=8
     else
      local.get $10
      i32.load offset=16
      local.get $10
      i32.load offset=12
      i32.eq
      if
       local.get $10
       i32.load offset=20
       local.get $10
       i32.load offset=12
       i32.const 3
       i32.mul
       i32.const 4
       i32.div_s
       i32.lt_s
       if (result i32)
        local.get $10
        i32.load offset=4
       else
        local.get $10
        i32.load offset=4
        i32.const 1
        i32.shl
        i32.const 1
        i32.or
       end
       local.set $12
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 22740
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       local.tee $0
       i64.const 0
       i64.store
       local.get $0
       i32.const 0
       i32.store offset=8
       local.get $0
       local.get $12
       i32.const 1
       i32.add
       local.tee $0
       i32.const 2
       i32.shl
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.tee $8
       i32.store
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.const 3
       i32.shl
       i32.const 3
       i32.div_s
       local.tee $13
       i32.const 24
       i32.mul
       call $~lib/arraybuffer/ArrayBuffer#constructor
       local.tee $1
       i32.store offset=4
       local.get $10
       i32.load offset=8
       local.tee $4
       local.get $10
       i32.load offset=16
       i32.const 24
       i32.mul
       i32.add
       local.set $14
       local.get $1
       local.set $0
       loop $while-continue|0
        local.get $4
        local.get $14
        i32.ne
        if
         local.get $4
         i32.load offset=16
         i32.const 1
         i32.and
         i32.eqz
         if
          global.get $~lib/memory/__stack_pointer
          local.get $4
          i32.load
          local.tee $15
          i32.store offset=8
          local.get $0
          local.get $15
          i32.store
          local.get $0
          local.get $4
          i64.load offset=8
          i64.store offset=8
          local.get $0
          local.get $8
          local.get $15
          call $~lib/util/hash/HASH<~lib/string/String>
          local.get $12
          i32.and
          i32.const 2
          i32.shl
          i32.add
          local.tee $15
          i32.load
          i32.store offset=16
          local.get $15
          local.get $0
          i32.store
          local.get $0
          i32.const 24
          i32.add
          local.set $0
         end
         local.get $4
         i32.const 24
         i32.add
         local.set $4
         br $while-continue|0
        end
       end
       local.get $10
       local.get $8
       i32.store
       local.get $8
       if
        local.get $10
        local.get $8
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $10
       local.get $12
       i32.store offset=4
       local.get $10
       local.get $1
       i32.store offset=8
       local.get $1
       if
        local.get $10
        local.get $1
        i32.const 0
        call $byn-split-outlined-A$~lib/rt/itcms/__link
       end
       local.get $10
       local.get $13
       i32.store offset=12
       local.get $10
       local.get $10
       i32.load offset=20
       i32.store offset=16
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
      end
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.load offset=8
      local.tee $0
      i32.store
      local.get $10
      local.get $10
      i32.load offset=16
      local.tee $1
      i32.const 1
      i32.add
      i32.store offset=16
      local.get $0
      local.get $1
      i32.const 24
      i32.mul
      i32.add
      local.tee $0
      local.get $6
      i32.store
      local.get $6
      if
       local.get $10
       local.get $6
       i32.const 1
       call $byn-split-outlined-A$~lib/rt/itcms/__link
      end
      local.get $0
      local.get $5
      i64.store offset=8
      local.get $10
      local.get $10
      i32.load offset=20
      i32.const 1
      i32.add
      i32.store offset=20
      local.get $0
      local.get $10
      i32.load
      local.get $7
      local.get $10
      i32.load offset=4
      i32.and
      i32.const 2
      i32.shl
      i32.add
      local.tee $1
      i32.load
      i32.store offset=16
      local.get $1
      local.get $0
      i32.store
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|012
    end
   end
   local.get $3
   local.get $10
   i32.store offset=16
   local.get $10
   if
    local.get $3
    local.get $10
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 52
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.eqz
  if
   i32.const 4976
   i32.const 9744
   i32.const 99
   i32.const 39
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/assembly/util/index/Buffer.fromString
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  call $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#deserialize
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  i32.load
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Handler#get:peek
  local.tee $0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
  i32.load
  local.tee $1
  i32.store
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Handler#reset
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/test/checkCustomDataFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.const 20
  memory.fill
  local.get $2
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
  local.tee $2
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 11232
  local.get $0
  select
  local.tee $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null>
  local.tee $3
  i32.store offset=4
  local.get $2
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 19744
   i32.const 19536
   i32.const 39
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  if (result i32)
   local.get $3
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof0 (result i32)
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|02
       i32.const 1
       local.get $0
       i32.const 96
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof0
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|02
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  else
   i32.const 1
  end
  if (result i32)
   i32.const 1
  else
   local.get $3
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof4 (result i32)
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|06
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof4
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|06
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  end
  i32.eqz
  if
   i32.const 19888
   i32.const 19536
   i32.const 41
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  block $__inlined_func$~lib/rt/__instanceof7 (result i32)
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=12
   local.tee $0
   i32.const 21616
   i32.load
   i32.le_u
   if
    loop $do-loop|09
     i32.const 1
     local.get $0
     i32.const 5
     i32.eq
     br_if $__inlined_func$~lib/rt/__instanceof7
     drop
     local.get $0
     i32.const 3
     i32.shl
     i32.const 21620
     i32.add
     i32.load offset=4
     local.tee $0
     br_if $do-loop|09
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   i32.const 5152
   i32.const 19536
   i32.const 44
   i32.const 41
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $2
  call $assembly/types/target/CustomDataFilter#constructor
  local.tee $1
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  if (result i32)
   local.get $3
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof11 (result i32)
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|013
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof11
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|013
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof014 (result i32)
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0216
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof014
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|0216
     end
    end
    i32.const 0
   end
   if (result i32)
    local.get $3
   else
    i32.const 5152
    i32.const 19536
    i32.const 45
    i32.const 54
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
  end
  local.tee $0
  i32.store offset=16
  local.get $0
  local.get $1
  call $assembly/bucketing/segmentation/_checkCustomData
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Arr#constructor
  local.tee $3
  i32.store
  loop $for-loop|0
   local.get $1
   local.get $0
   i32.load offset=12
   i32.lt_s
   if
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.set $2
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $3
    local.get $2
    call $~lib/assemblyscript-json/assembly/JSON/Arr#push
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $2
   i32.eqz
   if
    i32.const 4976
    i32.const 9744
    i32.const 435
    i32.const 33
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Value.String
   local.set $2
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $0
   local.get $1
   local.get $2
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/dvcUser/DVCPopulatedUser#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1376
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 1376
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $0
  i32.load offset=4
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1424
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=4
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1424
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 11808
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 11808
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 11840
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 11840
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=16
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1488
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=16
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1488
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1648
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=20
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1648
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  f64.load offset=24
  f64.const -1
  f64.ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 11888
   i32.store offset=4
   local.get $1
   i32.const 11888
   local.get $0
   f64.load offset=24
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  local.get $0
  i32.load offset=44
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1696
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=44
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1696
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=32
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1744
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=32
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1744
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
  end
  local.get $0
  i32.load offset=36
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 12240
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=36
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 12240
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 20496
  i32.store offset=4
  local.get $2
  local.get $0
  i32.load offset=48
  local.tee $2
  i32.store offset=8
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  i32.const 20496
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 20544
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=52
  local.tee $2
  i32.store offset=8
  local.get $2
  call $~lib/date/Date#toISOString
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $1
  i32.const 20544
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 1536
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=56
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 1536
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 1584
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=60
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 1584
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 16624
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=64
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 16624
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 16672
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=68
  local.tee $0
  i32.store offset=8
  local.get $1
  i32.const 16672
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig.bucketedUserConfigFromJSONString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 72
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 72
   memory.fill
   local.get $1
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $7
   i32.store
   local.get $7
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $7
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 20592
    i32.const 20720
    i32.const 30
    i32.const 36
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $7
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 20720
    i32.const 31
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   local.get $7
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 16128
   i32.store offset=12
   local.get $7
   i32.const 16128
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/types/configBody/PublicProject#constructor
   local.tee $4
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16176
   i32.store offset=12
   local.get $7
   i32.const 16176
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $1
   call $assembly/types/configBody/PublicEnvironment#constructor
   local.tee $5
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 16224
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.const 16224
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $8
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor
   local.tee $6
   i32.store offset=28
   loop $for-loop|0
    local.get $8
    call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    local.get $3
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $8
     call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=32
     local.get $1
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $9
     i32.store offset=36
     block $__inlined_func$~lib/rt/__instanceof03 (result i32)
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $8
      local.get $9
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $1
      i32.store offset=40
      local.get $1
      i32.eqz
      if
       i32.const 4976
       i32.const 20720
       i32.const 41
       i32.const 64
       call $~lib/builtins/abort
       unreachable
      end
      local.get $1
      i32.store offset=40
      local.get $1
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $0
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|025
        i32.const 1
        local.get $0
        i32.const 5
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof03
        drop
        local.get $0
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $0
        br_if $do-loop|025
       end
      end
      i32.const 0
     end
     i32.eqz
     if
      i32.const 5152
      i32.const 20720
      i32.const 41
      i32.const 64
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store offset=8
     local.get $0
     i32.const 32
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 0
     i32.const 32
     memory.fill
     local.get $0
     i32.const 16928
     i32.store offset=28
     local.get $1
     i32.const 16928
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 13696
     i32.store offset=28
     local.get $1
     i32.const 13696
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 16960
     i32.store offset=28
     local.get $1
     i32.const 16960
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 18080
     i32.store offset=28
     local.get $1
     i32.const 18080
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 20816
     i32.store offset=28
     local.get $1
     i32.const 20816
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $14
     global.get $~lib/memory/__stack_pointer
     local.get $14
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 20864
     i32.store offset=28
     local.get $1
     i32.const 20864
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=20
     global.get $~lib/memory/__stack_pointer
     i32.const 20912
     i32.store offset=28
     local.get $1
     i32.const 20912
     call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=24
     local.get $10
     local.get $11
     local.get $12
     local.get $13
     local.get $14
     local.get $0
     local.get $1
     call $assembly/types/bucketedUserConfig/SDKFeature#constructor
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 32
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store offset=12
     local.get $8
     local.get $9
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 16272
   i32.store offset=8
   local.get $0
   local.get $7
   i32.const 16272
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $1
   i32.store offset=44
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor
   local.tee $8
   i32.store offset=48
   loop $for-loop|1
    local.get $1
    call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=32
    local.get $2
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=32
     local.get $3
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $3
     i32.store offset=52
     global.get $~lib/memory/__stack_pointer
     block $__inlined_func$~lib/rt/__instanceof4 (result i32)
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $1
      local.get $3
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $10
      i32.store offset=56
      local.get $10
      i32.eqz
      if
       i32.const 4976
       i32.const 20720
       i32.const 48
       i32.const 36
       call $~lib/builtins/abort
       unreachable
      end
      local.get $10
      i32.store offset=56
      local.get $10
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $0
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|06
        i32.const 1
        local.get $0
        i32.const 102
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof4
        drop
        local.get $0
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $0
        br_if $do-loop|06
       end
      end
      i32.const 0
     end
     i32.eqz
     if
      i32.const 5152
      i32.const 20720
      i32.const 48
      i32.const 36
      call $~lib/builtins/abort
      unreachable
     end
     local.get $10
     i32.store offset=56
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.load
     local.tee $0
     i32.store offset=12
     local.get $8
     local.get $3
     local.get $0
     call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 16336
   i32.store offset=8
   local.get $0
   local.get $7
   i32.const 16336
   call $assembly/helpers/jsonHelpers/getJSONObjFromJSON
   local.tee $0
   i32.store offset=36
   global.get $~lib/memory/__stack_pointer
   call $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor
   local.tee $1
   i32.store offset=40
   i32.const 0
   local.set $2
   loop $for-loop|2
    local.get $0
    call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store offset=32
    local.get $2
    local.get $3
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=32
     local.get $9
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $9
     i32.store offset=60
     block $__inlined_func$~lib/rt/__instanceof8 (result i32)
      global.get $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      local.get $0
      local.get $9
      call $~lib/assemblyscript-json/assembly/JSON/Obj#get
      local.tee $10
      i32.store offset=64
      local.get $10
      i32.eqz
      if
       i32.const 4976
       i32.const 20720
       i32.const 56
       i32.const 70
       call $~lib/builtins/abort
       unreachable
      end
      local.get $10
      i32.store offset=64
      local.get $10
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $3
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|010
        i32.const 1
        local.get $3
        i32.const 5
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof8
        drop
        local.get $3
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $3
        br_if $do-loop|010
       end
      end
      i32.const 0
     end
     i32.eqz
     if
      i32.const 5152
      i32.const 20720
      i32.const 56
      i32.const 70
      call $~lib/builtins/abort
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     local.get $10
     i32.store offset=8
     local.get $3
     i32.const 24
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 0
     i32.const 24
     memory.fill
     local.get $3
     i32.const 16928
     i32.store offset=20
     local.get $10
     i32.const 16928
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 13696
     i32.store offset=20
     local.get $10
     i32.const 13696
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store offset=4
     global.get $~lib/memory/__stack_pointer
     i32.const 16960
     i32.store offset=20
     local.get $10
     i32.const 16960
     call $assembly/helpers/jsonHelpers/getStringFromJSON
     local.set $12
     global.get $~lib/memory/__stack_pointer
     local.get $12
     i32.store offset=8
     global.get $~lib/memory/__stack_pointer
     i32.const 17440
     i32.store offset=20
     local.get $10
     call $assembly/helpers/jsonHelpers/getJSONValueFromJSON
     local.set $13
     global.get $~lib/memory/__stack_pointer
     local.get $13
     i32.store offset=12
     global.get $~lib/memory/__stack_pointer
     i32.const 20912
     i32.store offset=20
     local.get $10
     i32.const 20912
     call $assembly/helpers/jsonHelpers/getStringFromJSONOptional
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store offset=16
     local.get $3
     local.get $11
     local.get $12
     local.get $13
     local.get $10
     call $assembly/types/bucketedUserConfig/SDKVariable#constructor
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 24
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=12
     local.get $1
     local.get $9
     local.get $3
     call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|2
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 16384
   i32.store offset=8
   local.get $0
   local.get $7
   i32.const 16384
   call $assembly/helpers/jsonHelpers/getJSONArrayFromJSON
   local.tee $2
   i32.store offset=56
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i32.const 16
   i32.const 111
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store
   local.get $7
   i32.const 0
   i32.store
   local.get $7
   i32.const 0
   i32.store offset=4
   local.get $7
   i32.const 0
   i32.store offset=8
   local.get $7
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store offset=4
   local.get $7
   local.get $3
   i32.store
   local.get $3
   if
    local.get $7
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $7
   local.get $3
   i32.store offset=4
   local.get $7
   i32.const 64
   i32.store offset=8
   local.get $7
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   i32.store offset=52
   i32.const 0
   local.set $3
   loop $for-loop|3
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.load
    local.tee $0
    i32.store offset=32
    local.get $3
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $2
     i32.load
     local.tee $9
     i32.store offset=32
     local.get $0
     local.get $9
     local.get $3
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $9
     i32.store offset=68
     local.get $9
     if (result i32)
      local.get $9
      if (result i32)
       block $__inlined_func$~lib/rt/__instanceof13 (result i32)
        local.get $9
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|016
          i32.const 1
          local.get $0
          i32.const 91
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof13
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|016
         end
        end
        i32.const 0
       end
      else
       i32.const 0
      end
     else
      i32.const 0
     end
     if
      block $__inlined_func$~lib/rt/__instanceof14 (result i32)
       local.get $9
       i32.const 20
       i32.sub
       i32.load offset=12
       local.tee $0
       i32.const 21616
       i32.load
       i32.le_u
       if
        loop $do-loop|01618
         i32.const 1
         local.get $0
         i32.const 91
         i32.eq
         br_if $__inlined_func$~lib/rt/__instanceof14
         drop
         local.get $0
         i32.const 3
         i32.shl
         i32.const 21620
         i32.add
         i32.load offset=4
         local.tee $0
         br_if $do-loop|01618
        end
       end
       i32.const 0
      end
      i32.eqz
      if
       i32.const 5152
       i32.const 20720
       i32.const 64
       i32.const 50
       call $~lib/builtins/abort
       unreachable
      end
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=32
      local.get $7
      local.get $9
      f64.load
      i64.trunc_sat_f64_s
      call $~lib/array/Array<i64>#push
     else
      local.get $9
      if (result i32)
       local.get $9
       if (result i32)
        block $__inlined_func$~lib/rt/__instanceof19 (result i32)
         local.get $9
         i32.const 20
         i32.sub
         i32.load offset=12
         local.tee $0
         i32.const 21616
         i32.load
         i32.le_u
         if
          loop $do-loop|021
           i32.const 1
           local.get $0
           i32.const 104
           i32.eq
           br_if $__inlined_func$~lib/rt/__instanceof19
           drop
           local.get $0
           i32.const 3
           i32.shl
           i32.const 21620
           i32.add
           i32.load offset=4
           local.tee $0
           br_if $do-loop|021
          end
         end
         i32.const 0
        end
       else
        i32.const 0
       end
      else
       i32.const 0
      end
      if
       block $__inlined_func$~lib/rt/__instanceof17 (result i32)
        local.get $9
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|019
          i32.const 1
          local.get $0
          i32.const 104
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof17
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|019
         end
        end
        i32.const 0
       end
       i32.eqz
       if
        i32.const 5152
        i32.const 20720
        i32.const 66
        i32.const 46
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $9
       i32.store offset=32
       local.get $7
       local.get $9
       i64.load
       call $~lib/array/Array<i64>#push
      end
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|3
    end
   end
   local.get $4
   local.get $5
   local.get $6
   local.get $8
   local.get $1
   local.get $7
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor
   global.get $~lib/memory/__stack_pointer
   i32.const 72
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#map<~lib/assemblyscript-regex/assembly/parser/node/Node> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $3
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 2
  i32.const 21
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $7
  i32.store
  local.get $7
  i32.load offset=4
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $3
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $2
    i32.const 2
    i32.shl
    local.tee $5
    local.get $0
    i32.load offset=4
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    i32.const 3
    global.set $~argumentsLength
    local.get $8
    local.get $6
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $6
    i32.store offset=8
    local.get $4
    local.get $5
    i32.add
    local.get $6
    i32.store
    local.get $6
    if
     local.get $7
     local.get $6
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  block $folding-inner0
   block $case12|0
    block $case11|0
     block $case10|0
      block $case9|0
       block $case8|0
        block $case7|0
         block $case6|0
          block $case5|0
           block $case4|0
            block $case3|0
             block $case2|0
              block $case1|0
               local.get $0
               i32.load offset=4
               local.tee $2
               i32.const 100
               i32.ne
               if
                local.get $2
                i32.const 68
                i32.eq
                br_if $case1|0
                local.get $2
                i32.const 46
                i32.eq
                br_if $case2|0
                local.get $2
                i32.const 119
                i32.eq
                br_if $case3|0
                local.get $2
                i32.const 87
                i32.eq
                br_if $case4|0
                local.get $2
                i32.const 115
                i32.eq
                br_if $case5|0
                local.get $2
                i32.const 83
                i32.eq
                br_if $case6|0
                local.get $2
                i32.const 116
                i32.eq
                br_if $case7|0
                local.get $2
                i32.const 114
                i32.eq
                br_if $case8|0
                local.get $2
                i32.const 110
                i32.eq
                br_if $case9|0
                local.get $2
                i32.const 118
                i32.eq
                br_if $case10|0
                local.get $2
                i32.const 102
                i32.eq
                br_if $case11|0
                br $case12|0
               end
               global.get $~lib/memory/__stack_pointer
               i32.const 8
               i32.add
               global.set $~lib/memory/__stack_pointer
               local.get $1
               i32.const 48
               i32.sub
               i32.const 10
               i32.lt_u
               return
              end
              global.get $~lib/memory/__stack_pointer
              i32.const 8
              i32.add
              global.set $~lib/memory/__stack_pointer
              local.get $1
              i32.const 48
              i32.sub
              i32.const 10
              i32.ge_u
              return
             end
             local.get $0
             i32.load8_u offset=8
             if (result i32)
              i32.const 1
             else
              local.get $1
              i32.const 10
              i32.ne
              local.get $1
              i32.const 13
              i32.ne
              i32.and
              local.get $1
              i32.const 8232
              i32.ne
              i32.and
              local.get $1
              i32.const 8233
              i32.ne
              i32.and
             end
             local.set $1
             br $folding-inner0
            end
            global.get $~lib/memory/__stack_pointer
            i32.const 8
            i32.add
            global.set $~lib/memory/__stack_pointer
            local.get $1
            i32.const 95
            i32.eq
            local.get $1
            i32.const 32
            i32.or
            i32.const 97
            i32.sub
            i32.const 26
            i32.lt_u
            i32.or
            local.get $1
            i32.const 48
            i32.sub
            i32.const 10
            i32.lt_u
            i32.or
            return
           end
           global.get $~lib/memory/__stack_pointer
           i32.const 8
           i32.add
           global.set $~lib/memory/__stack_pointer
           local.get $1
           i32.const 95
           i32.eq
           local.get $1
           i32.const 32
           i32.or
           i32.const 97
           i32.sub
           i32.const 26
           i32.lt_u
           i32.or
           local.get $1
           i32.const 48
           i32.sub
           i32.const 10
           i32.lt_u
           i32.or
           i32.eqz
           return
          end
          local.get $1
          call $~lib/assemblyscript-regex/assembly/char/isWhitespace
          local.set $1
          br $folding-inner0
         end
         local.get $1
         call $~lib/assemblyscript-regex/assembly/char/isWhitespace
         i32.eqz
         local.set $1
         br $folding-inner0
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
        local.get $1
        i32.const 9
        i32.eq
        return
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $1
       i32.const 13
       i32.eq
       return
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $1
      i32.const 10
      i32.eq
      return
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     i32.const 11
     i32.eq
     return
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    i32.const 12
    i32.eq
    return
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 21216
   i32.store
   local.get $0
   i32.load offset=4
   i32.const 1
   global.set $~argumentsLength
   call $~lib/string/String.fromCharCode@varargs
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=4
   i32.const 21216
   local.get $0
   call $~lib/string/String#concat
   i32.const 7584
   i32.const 172
   i32.const 9
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store
   local.get $4
   local.get $0
   i32.load offset=4
   local.tee $4
   i32.store
   local.get $4
   i32.load offset=12
   local.set $4
   loop $for-loop|0
    local.get $3
    local.get $4
    i32.lt_s
    if
     block $for-break0
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      local.get $0
      i32.load offset=4
      local.tee $6
      i32.store
      local.get $5
      local.get $6
      local.get $3
      call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
      local.tee $5
      i32.store offset=4
      block $break|1
       block $case3|1
        block $case2|1
         block $case1|1
          block $case0|1
           local.get $5
           i32.load
           br_table $case0|1 $case1|1 $case2|1 $case3|1 $break|1
          end
          block $__inlined_func$~lib/rt/__instanceof (result i32)
           local.get $5
           i32.const 20
           i32.sub
           i32.load offset=12
           local.tee $2
           i32.const 21616
           i32.load
           i32.le_u
           if
            loop $do-loop|0
             i32.const 1
             local.get $2
             i32.const 36
             i32.eq
             br_if $__inlined_func$~lib/rt/__instanceof
             drop
             local.get $2
             i32.const 3
             i32.shl
             i32.const 21620
             i32.add
             i32.load offset=4
             local.tee $2
             br_if $do-loop|0
            end
           end
           i32.const 0
          end
          i32.eqz
          if
           i32.const 5152
           i32.const 7584
           i32.const 190
           i32.const 20
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.get $5
          i32.store
          local.get $5
          i32.load offset=4
          local.get $1
          i32.const 32
          i32.or
          local.get $1
          local.get $5
          i32.load8_u offset=8
          select
          i32.eq
          local.set $2
          br $break|1
         end
         block $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#matches (result i32)
          block $__inlined_func$~lib/rt/__instanceof0 (result i32)
           local.get $5
           i32.const 20
           i32.sub
           i32.load offset=12
           local.tee $2
           i32.const 21616
           i32.load
           i32.le_u
           if
            loop $do-loop|02
             i32.const 1
             local.get $2
             i32.const 41
             i32.eq
             br_if $__inlined_func$~lib/rt/__instanceof0
             drop
             local.get $2
             i32.const 3
             i32.shl
             i32.const 21620
             i32.add
             i32.load offset=4
             local.tee $2
             br_if $do-loop|02
            end
           end
           i32.const 0
          end
          i32.eqz
          if
           i32.const 5152
           i32.const 7584
           i32.const 194
           i32.const 20
           call $~lib/builtins/abort
           unreachable
          end
          global.get $~lib/memory/__stack_pointer
          local.tee $2
          local.get $5
          i32.store
          local.get $2
          i32.const 8
          i32.sub
          global.set $~lib/memory/__stack_pointer
          global.get $~lib/memory/__stack_pointer
          i32.const 22740
          i32.lt_s
          br_if $folding-inner0
          global.get $~lib/memory/__stack_pointer
          local.tee $6
          i64.const 0
          i64.store
          i32.const 0
          local.set $2
          local.get $6
          local.get $5
          i32.load offset=4
          local.tee $6
          i32.store
          local.get $6
          i32.load offset=12
          local.set $6
          loop $for-loop|03
           local.get $2
           local.get $6
           i32.lt_s
           if
            global.get $~lib/memory/__stack_pointer
            local.get $5
            i32.load offset=4
            local.tee $7
            i32.store offset=4
            local.get $7
            local.get $2
            call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
            local.set $7
            global.get $~lib/memory/__stack_pointer
            local.get $7
            i32.store
            local.get $7
            i32.load
            local.get $1
            i32.le_s
            if (result i32)
             local.get $1
             local.get $7
             i32.load offset=4
             i32.le_s
            else
             i32.const 0
            end
            if
             global.get $~lib/memory/__stack_pointer
             i32.const 8
             i32.add
             global.set $~lib/memory/__stack_pointer
             i32.const 1
             br $__inlined_func$~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterRangeMatcher#matches
            end
            local.get $2
            i32.const 1
            i32.add
            local.set $2
            br $for-loop|03
           end
          end
          global.get $~lib/memory/__stack_pointer
          i32.const 8
          i32.add
          global.set $~lib/memory/__stack_pointer
          i32.const 0
         end
         local.set $2
         br $break|1
        end
        block $__inlined_func$~lib/rt/__instanceof3 (result i32)
         local.get $5
         i32.const 20
         i32.sub
         i32.load offset=12
         local.tee $2
         i32.const 21616
         i32.load
         i32.le_u
         if
          loop $do-loop|05
           i32.const 1
           local.get $2
           i32.const 44
           i32.eq
           br_if $__inlined_func$~lib/rt/__instanceof3
           drop
           local.get $2
           i32.const 3
           i32.shl
           i32.const 21620
           i32.add
           i32.load offset=4
           local.tee $2
           br_if $do-loop|05
          end
         end
         i32.const 0
        end
        i32.eqz
        if
         i32.const 5152
         i32.const 7584
         i32.const 198
         i32.const 20
         call $~lib/builtins/abort
         unreachable
        end
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.store
        local.get $5
        local.get $1
        call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterSetMatcher#matches
        local.set $2
        br $break|1
       end
       block $__inlined_func$~lib/rt/__instanceof6 (result i32)
        local.get $5
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $2
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|08
          i32.const 1
          local.get $2
          i32.const 39
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof6
          drop
          local.get $2
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $2
          br_if $do-loop|08
         end
        end
        i32.const 0
       end
       i32.eqz
       if
        i32.const 5152
        i32.const 7584
        i32.const 202
        i32.const 20
        call $~lib/builtins/abort
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store
       local.get $5
       local.get $1
       call $~lib/assemblyscript-regex/assembly/nfa/matcher/CharacterClassMatcher#matches
       local.set $2
      end
      local.get $2
      br_if $for-break0
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
   end
   local.get $2
   i32.eqz
   local.get $2
   local.get $0
   i32.load8_u offset=8
   select
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16928
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 16928
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 13696
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 13696
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 16960
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 16960
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 18080
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 18080
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 20816
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=20
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 20816
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 20864
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=24
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 20864
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $0
  i32.load offset=28
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 20912
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=28
   local.tee $0
   i32.store offset=8
   local.get $1
   i32.const 20912
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16928
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 16928
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 13696
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 13696
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 16960
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 16960
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 17440
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 17440
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
  local.get $0
  i32.load offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 20912
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=20
   local.tee $0
   i32.store offset=8
   local.get $1
   i32.const 20912
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/dvcUser/DVCUser#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1376
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 1376
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $0
  i32.load offset=8
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1424
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1424
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=12
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 11808
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 11808
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=16
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 11840
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=16
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 11840
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=20
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1488
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=20
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1488
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=24
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1648
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=24
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1648
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  f64.load offset=32
  f64.const -1
  f64.ne
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 11888
   i32.store offset=4
   local.get $1
   i32.const 11888
   local.get $0
   f64.load offset=32
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
  end
  local.get $0
  i32.load offset=48
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1696
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=48
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1696
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String|null>
  end
  local.get $0
  i32.load offset=40
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 1744
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=40
   local.tee $2
   i32.store offset=8
   local.get $1
   i32.const 1744
   local.get $2
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
  end
  local.get $0
  i32.load offset=44
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 12240
   i32.store offset=4
   local.get $2
   local.get $0
   i32.load offset=44
   local.tee $0
   i32.store offset=8
   local.get $1
   i32.const 12240
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value|null>
  end
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/platformData/PlatformData#stringify (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1536
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 1536
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 1584
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=8
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 1584
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 16624
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.store offset=8
  local.get $1
  i32.const 16624
  local.get $2
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 16672
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=16
  local.tee $0
  i32.store offset=8
  local.get $1
  i32.const 16672
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/string/String>
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~start
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   memory.size
   i32.const 16
   i32.shl
   i32.const 39124
   i32.sub
   i32.const 1
   i32.shr_u
   global.set $~lib/rt/itcms/threshold
   i32.const 3652
   i32.const 3648
   i32.store
   i32.const 3656
   i32.const 3648
   i32.store
   i32.const 3648
   global.set $~lib/rt/itcms/pinSpace
   i32.const 3684
   i32.const 3680
   i32.store
   i32.const 3688
   i32.const 3680
   i32.store
   i32.const 3680
   global.set $~lib/rt/itcms/toSpace
   i32.const 3828
   i32.const 3824
   i32.store
   i32.const 3832
   i32.const 3824
   i32.store
   i32.const 3824
   global.set $~lib/rt/itcms/fromSpace
   i32.const 0
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor
   global.set $~lib/assemblyscript-regex/assembly/parser/node/Node.emptyArray
   i32.const 97
   i32.const 122
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
   global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/LOWERCASE_LETTERS
   i32.const 65
   i32.const 90
   call $~lib/assemblyscript-regex/assembly/util/Range#constructor
   global.set $~lib/assemblyscript-regex/assembly/nfa/matcher/UPPERCASE_LETTERS
   call $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor
   global.set $~lib/assemblyscript-regex/assembly/regexp/RegExp.gm
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 24
   i32.const 87
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   local.get $0
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $1
   i32.store
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $0
   i32.const 3
   i32.store offset=4
   local.get $0
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $1
   i32.store offset=8
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $0
   i32.const 4
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $assembly/managers/configDataManager/_configData
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.const 96
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $~lib/assemblyscript-json/assembly/JSON/NULL
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 4
   i32.const 98
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 99
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store
   local.get $0
   call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor
   local.tee $1
   i32.store
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   global.set $~lib/assemblyscript-json/assembly/JSON/_JSON.handler
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/assemblyscript-json/assembly/JSON/_JSON.handler
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 8
   i32.const 100
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   local.get $0
   i32.store
   local.get $0
   if
    local.get $1
    local.get $0
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   global.set $~lib/assemblyscript-json/assembly/JSON/_JSON.decoder
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.shl
  local.tee $5
  i32.const 0
  call $~lib/rt/itcms/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   memory.copy
  end
  local.get $4
  local.get $1
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $1
  i32.store
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $5
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 18
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AST#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 17
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 16
  i32.const 21
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3968
   i32.const 4016
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 8
  local.get $0
  i32.const 8
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $3
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/ConcatenationNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 22
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $1
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 3
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 3728
   i32.const 4016
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 4240
   i32.const 4016
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AlternationNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 12
  i32.const 23
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/GroupNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 16
  i32.const 24
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  local.get $3
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $3
  local.get $1
  i32.store8 offset=8
  local.get $3
  local.get $2
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 10
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  local.get $2
  i32.const -1
  i32.eq
  if
   global.get $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id
   local.tee $1
   i32.const 1
   i32.add
   global.set $~lib/assemblyscript-regex/assembly/parser/node/GroupNode._id
   local.get $0
   local.get $1
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $2
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $3
  i32.add
  local.tee $4
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 3936
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store
  local.get $4
  local.get $0
  local.get $2
  memory.copy
  local.get $2
  local.get $4
  i32.add
  local.get $1
  local.get $3
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/assemblyscript-regex/assembly/parser/parser/Range#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 8
  i32.const 25
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 0
  i32.le_s
  if
   i32.const 4368
   i32.const 4016
   i32.const 319
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $3
  i32.store
  local.get $0
  local.get $2
  i32.store offset=12
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RangeRepetitionNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store
  local.get $4
  i32.const 17
  i32.const 26
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store
  local.get $4
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $4
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $4
  local.get $1
  i32.store offset=8
  local.get $4
  local.get $2
  i32.store offset=12
  local.get $4
  local.get $3
  i32.store8 offset=16
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 9
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $1
  i32.store
  local.get $0
  i32.load
  i32.const 9
  i32.eq
  if
   i32.const 4416
   i32.const 4528
   i32.const 169
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 27
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 4
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterSetNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 28
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 6
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/AssertionNode#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 8
  i32.const 29
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 13
  i32.const 30
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  local.get $3
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $3
  local.get $1
  i32.store offset=8
  local.get $3
  local.get $2
  i32.store8 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 8
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterRangeNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 12
  i32.const 32
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 7
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/CharacterClassNode#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 9
  i32.const 31
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store8 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 5
  call $~lib/assemblyscript-regex/assembly/parser/node/Node#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $4
  i32.sub
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.const 21
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store
  local.get $1
  i32.load offset=4
  local.set $5
  local.get $0
  i32.load offset=4
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  local.set $0
  i32.const 0
  local.set $2
  local.get $3
  i32.const 2
  i32.shl
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   if
    local.get $2
    local.get $5
    i32.add
    local.get $0
    local.get $2
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    if
     local.get $1
     local.get $4
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.tee $4
  local.get $1
  i32.load offset=12
  local.tee $5
  i32.add
  local.tee $2
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3968
   i32.const 4016
   i32.const 272
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 21
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store
  local.get $2
  i32.load offset=4
  local.set $3
  local.get $4
  i32.const 2
  i32.shl
  local.set $6
  local.get $0
  i32.load offset=4
  local.set $7
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   local.get $6
   i32.lt_u
   if
    local.get $0
    local.get $3
    i32.add
    local.get $0
    local.get $7
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    if
     local.get $2
     local.get $4
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $3
  local.get $6
  i32.add
  local.set $0
  local.get $1
  i32.load offset=4
  local.set $3
  local.get $5
  i32.const 2
  i32.shl
  local.set $4
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $1
   local.get $4
   i32.lt_u
   if
    local.get $0
    local.get $1
    i32.add
    local.get $1
    local.get $3
    i32.add
    i32.load
    local.tee $5
    i32.store
    local.get $5
    if
     local.get $2
     local.get $5
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/State#constructor@varargs (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $2of2
    block $1of2
     block $0of2
      block $outOfRange
       global.get $~argumentsLength
       br_table $0of2 $1of2 $2of2 $outOfRange
      end
      unreachable
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.const 2
     i32.const 14
     i32.const 7360
     call $~lib/rt/__newArray
     local.tee $1
     i32.store
    end
    global.get $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId
    local.tee $2
    i32.const 1
    i32.add
    global.set $~lib/assemblyscript-regex/assembly/nfa/nfa/State._stateId
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.const 13
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   local.get $0
   local.get $1
   i32.store
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $0
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/nfa/Automata#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 8
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store
  local.get $0
  if
   local.get $2
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/assemblyscript-regex/assembly/nfa/matcher/Matcher#constructor (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 37
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  local.get $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-regex/assembly/util/Range#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 8
  i32.const 42
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/assemblyscript-regex/assembly/nfa/nfa/GroupStartMarkerState>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store
  local.get $0
  i32.const 16
  i32.const 16
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $1
  local.get $3
  i32.gt_s
  select
  local.tee $3
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  local.tee $2
  local.get $2
  local.get $3
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $4
  local.get $3
  local.get $2
  local.get $2
  local.get $3
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.tee $2
  local.get $4
  i32.sub
  local.tee $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 3936
   return
  end
  i32.const 0
  local.get $2
  local.get $1
  i32.const 1
  i32.shl
  i32.eq
  local.get $4
  select
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  local.get $4
  i32.add
  local.get $3
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $2of2
   block $0of2
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of2 $2of2 $2of2 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 51
   i32.const 8096
   call $~lib/rt/__newArray
   local.tee $2
   i32.store
  end
  local.get $0
  local.get $1
  local.get $2
  i32.const 0
  call $~lib/assemblyscript-regex/assembly/regexp/recursiveBacktrackingSearch
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/assemblyscript-regex/assembly/regexp/Match#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 12
  i32.const 50
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  local.get $3
  local.get $0
  i32.store
  local.get $0
  if
   local.get $3
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $3
  local.get $1
  i32.store offset=4
  local.get $3
  local.get $2
  i32.store offset=8
  local.get $2
  if
   local.get $3
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 3968
   i32.const 8352
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 16
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 3968
   i32.const 4016
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 8
  local.get $0
  i32.const 8
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $3
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store
  local.get $5
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $5
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 3936
   return
  end
  local.get $5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 3936
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    if
     local.get $3
     local.get $6
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $3
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $3
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $5
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store offset=8
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $5
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    if
     local.get $6
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $7
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $7
     i32.const 1
     i32.shl
     memory.copy
     local.get $1
     local.get $7
     i32.add
     local.set $1
    end
    local.get $3
    if
     local.get $6
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $3
     i32.const 1
     i32.shl
     memory.copy
     local.get $1
     local.get $3
     i32.add
     local.set $1
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $6
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 3968
   i32.const 8352
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store offset=4
  local.get $0
  local.get $2
  i32.store
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/murmurhash/murmurhashV3 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store
   local.get $4
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill
   block $__inlined_func$assembly/helpers/stringHelpers/stringIsAscii
    loop $for-loop|0
     local.get $2
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.lt_s
     if
      local.get $2
      local.get $0
      i32.const 20
      i32.sub
      i32.load offset=16
      i32.const 1
      i32.shr_u
      i32.ge_u
      if (result i32)
       i32.const -1
      else
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u
      end
      i32.const 127
      i32.gt_s
      br_if $__inlined_func$assembly/helpers/stringHelpers/stringIsAscii
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    i32.const 1
    local.set $3
   end
   local.get $3
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=16
    local.get $0
    i32.const 3936
    call $~lib/string/String#split
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 8480
    i32.store offset=12
    local.get $0
    i32.const 8480
    call $~lib/array/Array<~lib/string/String>#map<~lib/string/String>
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 3936
    i32.store offset=4
    local.get $0
    i32.load offset=4
    local.get $0
    i32.load offset=12
    i32.const 3936
    call $~lib/util/string/joinStringArray
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   local.get $0
   local.tee $2
   i32.store
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 12
   i32.const 90
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $4
   local.get $0
   i32.const 2
   call $~lib/arraybuffer/ArrayBufferView#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $4
   i32.store offset=4
   i32.const 0
   local.set $0
   loop $for-loop|03
    local.get $0
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=16
    i32.const 1
    i32.shr_u
    i32.lt_s
    if
     local.get $0
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.ge_u
     if (result i32)
      i32.const -1
     else
      local.get $2
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u
     end
     local.set $3
     local.get $0
     local.get $4
     i32.load offset=8
     i32.const 2
     i32.shr_u
     i32.ge_u
     if
      i32.const 3728
      i32.const 8512
      i32.const 741
      i32.const 64
      call $~lib/builtins/abort
      unreachable
     end
     local.get $4
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     local.get $3
     i32.store
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|03
    end
   end
   local.get $4
   i32.load offset=8
   i32.const 2
   i32.shr_u
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 3
   i32.and
   local.tee $3
   i32.sub
   local.set $5
   i32.const 0
   local.set $0
   loop $while-continue|1
    local.get $0
    local.get $5
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.add
     local.tee $6
     i32.const 1
     i32.add
     local.tee $2
     i32.const 1
     i32.add
     local.set $7
     local.get $4
     local.get $0
     call $~lib/typedarray/Int32Array#__get
     i32.const 255
     i32.and
     local.get $4
     local.get $6
     call $~lib/typedarray/Int32Array#__get
     i32.const 255
     i32.and
     i32.const 8
     i32.shl
     i32.or
     local.get $4
     local.get $2
     call $~lib/typedarray/Int32Array#__get
     i32.const 255
     i32.and
     i32.const 16
     i32.shl
     i32.or
     local.get $4
     local.get $7
     call $~lib/typedarray/Int32Array#__get
     i32.const 255
     i32.and
     i32.const 24
     i32.shl
     i32.or
     local.set $2
     local.get $7
     i32.const 1
     i32.add
     local.set $0
     local.get $1
     local.get $2
     i32.const 65535
     i32.and
     i32.const -862048943
     i32.mul
     local.get $2
     i32.const 16
     i32.shr_u
     i32.const -862048943
     i32.mul
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     local.tee $1
     i32.const 15
     i32.shl
     local.get $1
     i32.const 17
     i32.shr_u
     i32.or
     local.tee $1
     i32.const 65535
     i32.and
     i32.const 461845907
     i32.mul
     local.get $1
     i32.const 16
     i32.shr_u
     i32.const 461845907
     i32.mul
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     i32.xor
     local.tee $1
     i32.const 13
     i32.shl
     local.get $1
     i32.const 19
     i32.shr_u
     i32.or
     local.tee $1
     i32.const 65535
     i32.and
     i32.const 5
     i32.mul
     local.get $1
     i32.const 16
     i32.shr_u
     i32.const 5
     i32.mul
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     local.tee $1
     i32.const 65535
     i32.and
     i32.const 27492
     i32.add
     local.get $1
     i32.const 16
     i32.shr_u
     i32.const 58964
     i32.add
     i32.const 65535
     i32.and
     i32.const 16
     i32.shl
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   i32.const 0
   local.set $2
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $3
       i32.const 1
       i32.sub
       br_table $case2|2 $case1|2 $case0|2 $break|2
      end
      local.get $4
      local.get $0
      i32.const 2
      i32.add
      call $~lib/typedarray/Int32Array#__get
      i32.const 255
      i32.and
      i32.const 16
      i32.shl
      local.set $2
     end
     local.get $2
     local.get $4
     local.get $0
     i32.const 1
     i32.add
     call $~lib/typedarray/Int32Array#__get
     i32.const 255
     i32.and
     i32.const 8
     i32.shl
     i32.xor
     local.set $2
    end
    local.get $1
    local.get $2
    local.get $4
    local.get $0
    call $~lib/typedarray/Int32Array#__get
    i32.const 255
    i32.and
    i32.xor
    local.tee $0
    i32.const 65535
    i32.and
    i32.const -862048943
    i32.mul
    local.get $0
    i32.const 16
    i32.shr_u
    i32.const -862048943
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    local.tee $0
    i32.const 15
    i32.shl
    local.get $0
    i32.const 17
    i32.shr_u
    i32.or
    local.tee $0
    i32.const 65535
    i32.and
    i32.const 461845907
    i32.mul
    local.get $0
    i32.const 16
    i32.shr_u
    i32.const 461845907
    i32.mul
    i32.const 65535
    i32.and
    i32.const 16
    i32.shl
    i32.add
    i32.xor
    local.set $1
   end
   local.get $1
   local.get $4
   i32.load offset=8
   i32.const 2
   i32.shr_u
   i32.xor
   local.tee $0
   local.get $0
   i32.const 16
   i32.shr_u
   i32.xor
   local.tee $0
   i32.const 65535
   i32.and
   i32.const -2048144789
   i32.mul
   local.get $0
   i32.const 16
   i32.shr_u
   i32.const -2048144789
   i32.mul
   i32.const 65535
   i32.and
   i32.const 16
   i32.shl
   i32.add
   local.tee $0
   local.get $0
   i32.const 13
   i32.shr_u
   i32.xor
   local.tee $0
   i32.const 65535
   i32.and
   i32.const -1028477387
   i32.mul
   local.get $0
   i32.const 16
   i32.shr_u
   i32.const -1028477387
   i32.mul
   i32.const 65535
   i32.and
   i32.const 16
   i32.shl
   i32.add
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 16
   i32.shr_u
   local.get $0
   i32.xor
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Value#constructor (param $0 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.const 5
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   local.get $0
   i32.const 0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 24
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store
   local.get $1
   i32.const 16
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $2
   i32.store
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $1
   i32.const 3
   i32.store offset=4
   local.get $1
   i32.const 48
   call $~lib/arraybuffer/ArrayBuffer#constructor
   local.tee $2
   i32.store offset=8
   local.get $2
   if
    local.get $1
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $1
   i32.const 4
   i32.store offset=12
   local.get $1
   i32.const 0
   i32.store offset=16
   local.get $1
   i32.const 0
   i32.store offset=20
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   i32.store
   local.get $1
   if
    local.get $0
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $0
   local.get $1
   local.get $1
   call $~lib/util/hash/HASH<~lib/string/String>
   local.tee $8
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
   local.tee $3
   if
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   else
    local.get $0
    i32.load offset=16
    local.get $0
    i32.load offset=12
    i32.eq
    if
     local.get $0
     i32.load offset=20
     local.get $0
     i32.load offset=12
     i32.const 3
     i32.mul
     i32.const 4
     i32.div_s
     i32.lt_s
     if (result i32)
      local.get $0
      i32.load offset=4
     else
      local.get $0
      i32.load offset=4
      i32.const 1
      i32.shl
      i32.const 1
      i32.or
     end
     local.set $7
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i64.const 0
     i64.store
     local.get $3
     i32.const 0
     i32.store offset=8
     local.get $3
     local.get $7
     i32.const 1
     i32.add
     local.tee $3
     i32.const 2
     i32.shl
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $6
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.const 3
     i32.shl
     i32.const 3
     i32.div_s
     local.tee $9
     i32.const 12
     i32.mul
     call $~lib/arraybuffer/ArrayBuffer#constructor
     local.tee $4
     i32.store offset=4
     local.get $0
     i32.load offset=8
     local.tee $5
     local.get $0
     i32.load offset=16
     i32.const 12
     i32.mul
     i32.add
     local.set $10
     local.get $4
     local.set $3
     loop $while-continue|0
      local.get $5
      local.get $10
      i32.ne
      if
       local.get $5
       i32.load offset=8
       i32.const 1
       i32.and
       i32.eqz
       if
        global.get $~lib/memory/__stack_pointer
        local.get $5
        i32.load
        local.tee $11
        i32.store offset=8
        local.get $3
        local.get $11
        i32.store
        local.get $3
        local.get $5
        i32.load offset=4
        i32.store offset=4
        local.get $3
        local.get $6
        local.get $11
        call $~lib/util/hash/HASH<~lib/string/String>
        local.get $7
        i32.and
        i32.const 2
        i32.shl
        i32.add
        local.tee $11
        i32.load
        i32.store offset=8
        local.get $11
        local.get $3
        i32.store
        local.get $3
        i32.const 12
        i32.add
        local.set $3
       end
       local.get $5
       i32.const 12
       i32.add
       local.set $5
       br $while-continue|0
      end
     end
     local.get $0
     local.get $6
     i32.store
     local.get $6
     if
      local.get $0
      local.get $6
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     local.get $7
     i32.store offset=4
     local.get $0
     local.get $4
     i32.store offset=8
     local.get $4
     if
      local.get $0
      local.get $4
      i32.const 0
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     local.get $9
     i32.store offset=12
     local.get $0
     local.get $0
     i32.load offset=20
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=8
    local.tee $3
    i32.store
    local.get $0
    local.get $0
    i32.load offset=16
    local.tee $4
    i32.const 1
    i32.add
    i32.store offset=16
    local.get $3
    local.get $4
    i32.const 12
    i32.mul
    i32.add
    local.tee $3
    local.get $1
    i32.store
    local.get $1
    if
     local.get $0
     local.get $1
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $3
    local.get $2
    i32.store offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 1
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
    local.get $0
    local.get $0
    i32.load offset=20
    i32.const 1
    i32.add
    i32.store offset=20
    local.get $3
    local.get $0
    i32.load
    local.get $8
    local.get $0
    i32.load offset=4
    i32.and
    i32.const 2
    i32.shl
    i32.add
    local.tee $0
    i32.load
    i32.store offset=8
    local.get $0
    local.get $3
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/date/Date#constructor (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 24
  i32.const 68
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  local.get $3
  local.get $0
  i64.store offset=16
  local.get $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  i32.const 0
  i32.store offset=8
  local.get $0
  i64.const -8640000000000000
  i64.lt_s
  local.get $0
  i64.const 8640000000000000
  i64.gt_s
  i32.or
  if
   i32.const 9168
   i32.const 9216
   i32.const 95
   i32.const 35
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $0
  i64.const 86399999
  i64.sub
  local.get $0
  i64.const 0
  i64.ge_s
  select
  i64.const 86400000
  i64.div_s
  i32.wrap_i64
  i32.const 719468
  i32.add
  local.tee $2
  local.get $2
  i32.const 146096
  i32.sub
  local.get $2
  i32.const 0
  i32.ge_s
  select
  i32.const 146097
  i32.div_s
  local.set $1
  local.get $2
  local.get $1
  i32.const 146097
  i32.mul
  i32.sub
  local.tee $2
  local.get $2
  i32.const 1460
  i32.div_u
  i32.sub
  local.get $2
  i32.const 36524
  i32.div_u
  i32.add
  local.get $2
  i32.const 146096
  i32.div_u
  i32.sub
  i32.const 365
  i32.div_u
  local.set $4
  local.get $2
  local.get $4
  i32.const 365
  i32.mul
  local.get $4
  i32.const 2
  i32.shr_u
  i32.add
  local.get $4
  i32.const 100
  i32.div_u
  i32.sub
  i32.sub
  local.tee $5
  i32.const 5
  i32.mul
  i32.const 2
  i32.add
  i32.const 153
  i32.div_s
  local.set $2
  local.get $5
  local.get $2
  i32.const 153
  i32.mul
  i32.const 2
  i32.add
  i32.const 5
  i32.div_u
  i32.sub
  i32.const 1
  i32.add
  global.set $~lib/date/_day
  local.get $2
  i32.const 3
  i32.const -9
  local.get $2
  i32.const 10
  i32.lt_s
  select
  i32.add
  local.tee $2
  global.set $~lib/date/_month
  local.get $3
  local.get $1
  i32.const 400
  i32.mul
  local.get $4
  i32.add
  local.get $2
  i32.const 2
  i32.le_s
  i32.add
  i32.store
  local.get $3
  global.get $~lib/date/_month
  i32.store offset=4
  local.get $3
  global.get $~lib/date/_day
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/assemblyscript-json/assembly/util/index/Buffer.fromString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   i32.const 2
   global.set $~argumentsLength
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $0
   local.get $0
   local.tee $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.add
   local.set $4
   loop $while-continue|0
    local.get $1
    local.get $4
    i32.lt_u
    if
     local.get $1
     i32.load16_u
     local.tee $5
     i32.const 128
     i32.lt_u
     if (result i32)
      local.get $2
      i32.const 1
      i32.add
     else
      local.get $5
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $2
       i32.const 2
       i32.add
      else
       local.get $5
       i32.const 64512
       i32.and
       i32.const 55296
       i32.eq
       local.get $1
       i32.const 2
       i32.add
       local.get $4
       i32.lt_u
       i32.and
       if
        local.get $1
        i32.load16_u offset=2
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $2
         i32.const 4
         i32.add
         local.set $2
         local.get $1
         i32.const 4
         i32.add
         local.set $1
         br $while-continue|0
        end
       end
       local.get $2
       i32.const 3
       i32.add
      end
     end
     local.set $2
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $0
   local.tee $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.get $0
   i32.add
   local.set $5
   local.get $2
   local.set $0
   loop $while-continue|00
    local.get $1
    local.get $5
    i32.lt_u
    if
     local.get $1
     i32.load16_u
     local.tee $6
     i32.const 128
     i32.lt_u
     if (result i32)
      local.get $0
      local.get $6
      i32.store8
      local.get $0
      i32.const 1
      i32.add
     else
      local.get $6
      i32.const 2048
      i32.lt_u
      if (result i32)
       local.get $0
       local.get $6
       i32.const 6
       i32.shr_u
       i32.const 192
       i32.or
       local.get $6
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.const 8
       i32.shl
       i32.or
       i32.store16
       local.get $0
       i32.const 2
       i32.add
      else
       local.get $6
       i32.const 56320
       i32.lt_u
       local.get $1
       i32.const 2
       i32.add
       local.get $5
       i32.lt_u
       i32.and
       local.get $6
       i32.const 63488
       i32.and
       i32.const 55296
       i32.eq
       i32.and
       if
        local.get $1
        i32.load16_u offset=2
        local.tee $4
        i32.const 64512
        i32.and
        i32.const 56320
        i32.eq
        if
         local.get $0
         local.get $6
         i32.const 1023
         i32.and
         i32.const 10
         i32.shl
         i32.const 65536
         i32.add
         local.get $4
         i32.const 1023
         i32.and
         i32.or
         local.tee $4
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         i32.const 24
         i32.shl
         local.get $4
         i32.const 6
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         i32.const 16
         i32.shl
         i32.or
         local.get $4
         i32.const 12
         i32.shr_u
         i32.const 63
         i32.and
         i32.const 128
         i32.or
         i32.const 8
         i32.shl
         i32.or
         local.get $4
         i32.const 18
         i32.shr_u
         i32.const 240
         i32.or
         i32.or
         i32.store
         local.get $0
         i32.const 4
         i32.add
         local.set $0
         local.get $1
         i32.const 4
         i32.add
         local.set $1
         br $while-continue|00
        end
       end
       local.get $0
       local.get $6
       i32.const 12
       i32.shr_u
       i32.const 224
       i32.or
       local.get $6
       i32.const 6
       i32.shr_u
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.const 8
       i32.shl
       i32.or
       i32.store16
       local.get $0
       local.get $6
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       i32.store8 offset=2
       local.get $0
       i32.const 3
       i32.add
      end
     end
     local.set $0
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|00
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   local.get $2
   i32.store
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 22740
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i32.const 0
    i32.store
    local.get $0
    i32.const 12
    i32.const 97
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.const 0
    i32.const 0
    call $~lib/arraybuffer/ArrayBufferView#constructor
    local.tee $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
    return
   end
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $2
   i32.const 20
   i32.sub
   i32.load offset=16
   local.set $1
   local.get $0
   i32.const 12
   i32.const 97
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   local.get $0
   local.get $2
   i32.store
   local.get $2
   if
    local.get $0
    local.get $2
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $0
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $2
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i64.const 0
  i64.store
  local.get $0
  i32.const 16
  i32.const 75
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  local.get $1
  i32.store offset=4
  local.get $0
  i32.const 32
  i32.store offset=8
  local.get $0
  i32.const 0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/decoder/JSONDecoder<~lib/assemblyscript-json/assembly/JSON/Handler>#get:state (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=4
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 4976
   i32.const 9568
   i32.const 127
   i32.const 26
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Arr#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 4
  i32.const 74
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  call $~lib/assemblyscript-json/assembly/JSON/Value#constructor
  local.tee $0
  i32.store
  local.get $0
  call $~lib/array/Array<~lib/assemblyscript-json/assembly/JSON/Value>#constructor
  local.tee $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#getString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $1
       i32.const 102
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 102
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 9744
    i32.const 370
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/helpers/jsonHelpers/getStringFromJSONOptional (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#getString
  local.tee $0
  i32.store
  local.get $0
  if
   local.get $0
   i32.load
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  else
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   local.set $0
  end
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#getObj (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $1
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 9744
    i32.const 418
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/helpers/jsonHelpers/isFlatJSONObj (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.tee $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get:keys
  local.tee $3
  i32.store
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.load offset=12
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $0
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    local.get $1
    local.get $0
    call $~lib/assemblyscript-json/assembly/JSON/Obj#get
    local.tee $4
    i32.store offset=8
    local.get $4
    if (result i32)
     local.get $4
     if (result i32)
      block $__inlined_func$~lib/rt/__instanceof (result i32)
       local.get $4
       i32.const 20
       i32.sub
       i32.load offset=12
       local.tee $0
       i32.const 21616
       i32.load
       i32.le_u
       if
        loop $do-loop|0
         i32.const 1
         local.get $0
         i32.const 5
         i32.eq
         br_if $__inlined_func$~lib/rt/__instanceof
         drop
         local.get $0
         i32.const 3
         i32.shl
         i32.const 21620
         i32.add
         i32.load offset=4
         local.tee $0
         br_if $do-loop|0
        end
       end
       i32.const 0
      end
     else
      i32.const 0
     end
     local.tee $0
     if (result i32)
      local.get $0
     else
      local.get $4
      if (result i32)
       block $__inlined_func$~lib/rt/__instanceof0 (result i32)
        local.get $4
        i32.const 20
        i32.sub
        i32.load offset=12
        local.tee $0
        i32.const 21616
        i32.load
        i32.le_u
        if
         loop $do-loop|02
          i32.const 1
          local.get $0
          i32.const 74
          i32.eq
          br_if $__inlined_func$~lib/rt/__instanceof0
          drop
          local.get $0
          i32.const 3
          i32.shl
          i32.const 21620
          i32.add
          i32.load offset=4
          local.tee $0
          br_if $do-loop|02
         end
        end
        i32.const 0
       end
      else
       i32.const 0
      end
     end
    else
     i32.const 0
    end
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKVariable>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 24
  i32.const 110
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 3
  i32.store offset=4
  local.get $0
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,assembly/types/bucketedUserConfig/SDKFeature>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 24
  i32.const 108
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 3
  i32.store offset=4
  local.get $0
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/map/Map<~lib/string/String,~lib/string/String>#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 24
  i32.const 69
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 16
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 3
  i32.store offset=4
  local.get $0
  i32.const 48
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store offset=8
  local.get $1
  if
   local.get $0
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $0
  i32.const 4
  i32.store offset=12
  local.get $0
  i32.const 0
  i32.store offset=16
  local.get $0
  i32.const 0
  i32.store offset=20
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/helpers/lodashHelpers/findString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.load offset=12
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
    local.tee $3
    i32.store
    local.get $1
    local.get $3
    i32.const 0
    call $~lib/string/String#indexOf
    i32.const -1
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $assembly/helpers/jsonHelpers/getF64FromJSONValue (param $0 i32) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $1
      i32.const 91
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 91
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 11712
    i32.const 145
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
  else
   i32.const 0
  end
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof3 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|05
      i32.const 1
      local.get $1
      i32.const 104
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof3
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|05
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof06 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|028
      i32.const 1
      local.get $1
      i32.const 104
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof06
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|028
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 11712
    i32.const 146
    i32.const 39
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   local.set $0
  end
  local.get $0
  i32.store offset=4
  i32.const 1
  local.get $0
  local.get $4
  select
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   f64.const nan:0x8000000000000
   return
  end
  local.get $4
  if (result f64)
   local.get $4
   f64.load
  else
   local.get $0
   if (result f64)
    local.get $0
    i64.load
    f64.convert_i64_s
   else
    f64.const nan:0x8000000000000
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/bucketing/segmentation/getFilterValuesAsBoolean~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $1
  if (result i32)
   block $__inlined_func$~lib/rt/__instanceof (result i32)
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|0
      i32.const 1
      local.get $2
      i32.const 103
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|0
     end
    end
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $1
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $2
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $2
      i32.const 103
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $2
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $2
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 12928
    i32.const 356
    i32.const 40
    call $~lib/builtins/abort
    unreachable
   end
  else
   i32.const 0
   local.set $1
  end
  local.get $3
  local.get $1
  i32.store
  local.get $1
  if
   local.get $1
   i32.load8_u
   local.set $1
   local.get $0
   local.get $0
   i32.load offset=12
   local.tee $2
   i32.const 1
   i32.add
   local.tee $3
   i32.const 0
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   i32.load offset=4
   local.get $2
   i32.add
   local.get $1
   i32.store8
   local.get $0
   local.get $3
   i32.store offset=12
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/string/String#padStart (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 5628
  i32.load
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $2
  i32.eqz
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $4
  local.get $1
  i32.const 1
  i32.shl
  local.tee $1
  i32.gt_u
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  local.get $1
  local.get $4
  i32.sub
  local.tee $6
  local.get $2
  i32.gt_u
  if
   local.get $6
   local.get $6
   i32.const 2
   i32.sub
   local.get $2
   i32.div_u
   local.tee $7
   local.get $2
   i32.mul
   local.tee $8
   i32.sub
   local.set $1
   local.get $2
   local.get $7
   i32.mul
   local.set $7
   loop $while-continue|0
    local.get $3
    local.get $7
    i32.lt_u
    if
     local.get $3
     local.get $5
     i32.add
     i32.const 5632
     local.get $2
     memory.copy
     local.get $2
     local.get $3
     i32.add
     local.set $3
     br $while-continue|0
    end
   end
   local.get $5
   local.get $8
   i32.add
   i32.const 5632
   local.get $1
   memory.copy
  else
   local.get $5
   i32.const 5632
   local.get $6
   memory.copy
  end
  local.get $5
  local.get $6
  i32.add
  local.get $0
  local.get $4
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/helpers/jsonHelpers/getDateFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $assembly/helpers/jsonHelpers/getStringFromJSON
  local.tee $0
  i32.store
  local.get $0
  call $~lib/date/Date.fromString
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/types/bucketedUserConfig/SDKFeature#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $7
  i32.const 0
  i32.store
  local.get $7
  i32.const 32
  i32.const 107
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  local.get $7
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $7
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $7
  local.get $1
  i32.store offset=8
  local.get $1
  if
   local.get $7
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $7
  local.get $2
  i32.store offset=12
  local.get $2
  if
   local.get $7
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $7
  local.get $3
  i32.store offset=16
  local.get $3
  if
   local.get $7
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $7
  local.get $4
  i32.store offset=20
  local.get $4
  if
   local.get $7
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $7
  local.get $5
  i32.store offset=24
  local.get $5
  if
   local.get $7
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $7
  local.get $6
  i32.store offset=28
  local.get $6
  if
   local.get $7
   local.get $6
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $7
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/SDKVariable#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.store
  local.get $5
  i32.const 24
  i32.const 109
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  local.get $5
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $5
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $5
  local.get $1
  i32.store offset=8
  local.get $1
  if
   local.get $5
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $5
  local.get $2
  i32.store offset=12
  local.get $2
  if
   local.get $5
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $5
  local.get $3
  i32.store offset=16
  local.get $3
  if
   local.get $5
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $5
  local.get $4
  i32.store offset=20
  local.get $4
  if
   local.get $5
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $5
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $assembly/types/bucketedUserConfig/BucketedUserConfig#constructor (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  i32.const 0
  i32.store
  local.get $6
  i32.const 28
  i32.const 106
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store
  local.get $6
  local.get $0
  i32.store offset=4
  local.get $0
  if
   local.get $6
   local.get $0
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $6
  local.get $1
  i32.store offset=8
  local.get $1
  if
   local.get $6
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $6
  local.get $2
  i32.store offset=12
  local.get $2
  if
   local.get $6
   local.get $2
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $6
  local.get $3
  i32.store offset=16
  local.get $3
  if
   local.get $6
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $6
  local.get $4
  i32.store offset=20
  local.get $4
  if
   local.get $6
   local.get $4
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $6
  local.get $5
  i32.store offset=24
  local.get $5
  if
   local.get $6
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.get $6
  call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
  local.tee $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/assemblyscript-json/assembly/JSON/Obj#getArr (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  local.get $1
  call $~lib/assemblyscript-json/assembly/JSON/Obj#get
  local.tee $0
  i32.store
  local.get $0
  if (result i32)
   local.get $0
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $0
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $1
       i32.const 74
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
  else
   i32.const 0
  end
  if
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $0
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 74
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 9744
    i32.const 410
    i32.const 21
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/assemblyscript-regex/assembly/parser/node/RepetitionNode#children (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 1
  i32.const 2
  i32.const 21
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  i32.store offset=4
  local.get $1
  i32.const 0
  local.get $0
  i32.load offset=4
  call $~lib/array/Array<~lib/string/String>#__uset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i64.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 5632
   return
  end
  i64.const 0
  local.get $0
  i64.sub
  local.get $0
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.tee $2
  select
  local.tee $0
  i64.const 4294967295
  i64.le_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.wrap_i64
   local.tee $1
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $1
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $1
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $1
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $1
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $1
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $4
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $2
   local.get $3
   i32.add
   local.get $1
   local.get $4
   call $~lib/util/number/utoa32_dec_lut
  else
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $0
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $0
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $0
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $0
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $0
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $0
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $0
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $0
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $1
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $2
   local.get $3
   i32.add
   local.set $5
   loop $while-continue|0
    local.get $0
    i64.const 100000000
    i64.ge_u
    if
     local.get $5
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $0
     i64.const 100000000
     i64.div_u
     local.tee $0
     i64.const 100000000
     i64.mul
     i64.sub
     i32.wrap_i64
     local.tee $4
     i32.const 10000
     i32.rem_u
     local.tee $6
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 5644
     i32.add
     i64.load32_u
     local.get $6
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 5644
     i32.add
     i64.load32_u
     i64.const 32
     i64.shl
     i64.or
     i64.store
     local.get $5
     local.get $1
     i32.const 4
     i32.sub
     local.tee $1
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     i32.const 10000
     i32.div_u
     local.tee $4
     i32.const 100
     i32.div_u
     i32.const 2
     i32.shl
     i32.const 5644
     i32.add
     i64.load32_u
     local.get $4
     i32.const 100
     i32.rem_u
     i32.const 2
     i32.shl
     i32.const 5644
     i32.add
     i64.load32_u
     i64.const 32
     i64.shl
     i64.or
     i64.store
     br $while-continue|0
    end
   end
   local.get $5
   local.get $0
   i32.wrap_i64
   local.get $1
   call $~lib/util/number/utoa32_dec_lut
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/index/generateBoundedHashesFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   local.get $0
   local.get $1
   call $assembly/bucketing/bucketing/_generateBoundedHashes
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8624
   i32.store offset=8
   local.get $1
   i32.const 8624
   local.get $0
   f64.load
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
   global.get $~lib/memory/__stack_pointer
   i32.const 8672
   i32.store offset=8
   local.get $1
   i32.const 8672
   local.get $0
   f64.load offset=8
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<f64>
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/generateBucketedConfigForUser (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   local.get $3
   global.get $assembly/managers/configDataManager/_configData
   local.tee $3
   i32.store
   local.get $3
   local.get $0
   local.get $0
   call $~lib/util/hash/HASH<~lib/string/String>
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#find
   if
    global.get $~lib/memory/__stack_pointer
    global.get $assembly/managers/configDataManager/_configData
    local.tee $3
    i32.store
    local.get $3
    local.get $0
    call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#get
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   else
    i32.const 8992
    i32.const 9072
    i32.const 11
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   local.get $1
   call $assembly/types/dvcUser/DVCUser#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $assembly/types/dvcUser/DVCPopulatedUser#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   local.get $1
   call $assembly/bucketing/bucketing/_generateBucketedConfig
   local.tee $0
   i32.store offset=8
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/index/setPlatformData (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/index/setPlatformData
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/index/setConfigData (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store
   local.get $2
   local.get $1
   call $assembly/types/configBody/ConfigBody#constructor
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store
   local.get $2
   global.get $assembly/managers/configDataManager/_configData
   local.tee $2
   i32.store
   local.get $2
   local.get $0
   local.get $1
   call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/helpers/murmurhash/murmurhashV3 (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/helpers/murmurhash/murmurhashV3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/helpers/murmurhash/murmurhashV3_js (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   local.get $1
   call $assembly/helpers/murmurhash/murmurhashV3
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/number/utoa32
    local.get $0
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 5632
     local.set $1
     br $__inlined_func$~lib/util/number/utoa32
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.const 100000
    i32.lt_u
    if (result i32)
     local.get $0
     i32.const 100
     i32.lt_u
     if (result i32)
      local.get $0
      i32.const 10
      i32.ge_u
      i32.const 1
      i32.add
     else
      local.get $0
      i32.const 10000
      i32.ge_u
      i32.const 3
      i32.add
      local.get $0
      i32.const 1000
      i32.ge_u
      i32.add
     end
    else
     local.get $0
     i32.const 10000000
     i32.lt_u
     if (result i32)
      local.get $0
      i32.const 1000000
      i32.ge_u
      i32.const 6
      i32.add
     else
      local.get $0
      i32.const 1000000000
      i32.ge_u
      i32.const 8
      i32.add
      local.get $0
      i32.const 100000000
      i32.ge_u
      i32.add
     end
    end
    local.tee $2
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    local.get $1
    local.get $0
    local.get $2
    call $~lib/util/number/utoa32_dec_lut
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/checkNumbersFilterFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i64.const 0
   i64.store offset=8
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $2
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $3
   i32.store offset=4
   local.get $2
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $1
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 19392
    i32.const 19536
    i32.const 23
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 19536
    i32.const 24
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=8
   i32.const 0
   local.get $2
   call $assembly/types/target/UserFilter#constructor
   local.tee $0
   i32.store offset=12
   local.get $3
   local.get $0
   call $assembly/bucketing/segmentation/checkNumbersFilterJSONValue
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/checkVersionFiltersFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   local.get $1
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $3
   i32.store
   local.get $3
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $3
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $1
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $1
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $1
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $1
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 19600
    i32.const 19536
    i32.const 30
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $3
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $1
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $1
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $1
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $1
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 19536
    i32.const 31
    i32.const 35
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=4
   i32.const 0
   local.get $3
   call $assembly/types/target/UserFilter#constructor
   local.tee $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/bucketing/segmentation/_checkVersionFilters
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/checkCustomDataFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 22740
  i32.lt_s
  if
   i32.const 39152
   i32.const 39200
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/test/checkCustomDataFromJSON
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/test/evaluateOperatorFromJSON (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   local.get $1
   i32.store offset=4
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i64.const 0
   i64.store offset=8
   local.get $2
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $2
   i32.store
   local.get $2
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 20016
    i32.const 19536
    i32.const 55
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 19536
    i32.const 57
    i32.const 43
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $assembly/types/target/TopLevelOperator#constructor
   local.tee $0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $assembly/types/dvcUser/DVCUser#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=4
   local.get $1
   call $assembly/types/dvcUser/DVCPopulatedUser#constructor
   local.tee $1
   i32.store offset=12
   local.get $0
   local.get $1
   call $assembly/bucketing/segmentation/_evaluateOperator
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/decideTargetVariationFromJSON (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String>
   local.tee $2
   i32.store
   local.get $2
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof (result i32)
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|0
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|0
      end
     end
     i32.const 0
    end
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 20192
    i32.const 19536
    i32.const 64
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $__inlined_func$~lib/rt/__instanceof0 (result i32)
    local.get $2
    i32.const 20
    i32.sub
    i32.load offset=12
    local.tee $0
    i32.const 21616
    i32.load
    i32.le_u
    if
     loop $do-loop|02
      i32.const 1
      local.get $0
      i32.const 5
      i32.eq
      br_if $__inlined_func$~lib/rt/__instanceof0
      drop
      local.get $0
      i32.const 3
      i32.shl
      i32.const 21620
      i32.add
      i32.load offset=4
      local.tee $0
      br_if $do-loop|02
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 5152
    i32.const 19536
    i32.const 65
    i32.const 37
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store offset=4
   local.get $2
   call $assembly/types/target/Target#constructor
   local.tee $0
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/bucketing/bucketing/_decideTargetVariation
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/doesUserPassRolloutFromJSON (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   local.get $2
   local.get $0
   if (result i32)
    local.get $0
    call $~lib/assemblyscript-json/assembly/JSON/_JSON.parse<~lib/string/String|null>
   else
    i32.const 0
   end
   local.tee $2
   i32.store
   local.get $2
   if (result i32)
    local.get $2
    if (result i32)
     block $__inlined_func$~lib/rt/__instanceof (result i32)
      local.get $2
      i32.const 20
      i32.sub
      i32.load offset=12
      local.tee $0
      i32.const 21616
      i32.load
      i32.le_u
      if
       loop $do-loop|0
        i32.const 1
        local.get $0
        i32.const 5
        i32.eq
        br_if $__inlined_func$~lib/rt/__instanceof
        drop
        local.get $0
        i32.const 3
        i32.shl
        i32.const 21620
        i32.add
        i32.load offset=4
        local.tee $0
        br_if $do-loop|0
       end
      end
      i32.const 0
     end
    else
     i32.const 0
    end
   else
    i32.const 1
   end
   i32.eqz
   if
    i32.const 20352
    i32.const 19536
    i32.const 72
    i32.const 9
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   if (result i32)
    block $__inlined_func$~lib/rt/__instanceof0 (result i32)
     local.get $2
     i32.const 20
     i32.sub
     i32.load offset=12
     local.tee $0
     i32.const 21616
     i32.load
     i32.le_u
     if
      loop $do-loop|02
       i32.const 1
       local.get $0
       i32.const 5
       i32.eq
       br_if $__inlined_func$~lib/rt/__instanceof0
       drop
       local.get $0
       i32.const 3
       i32.shl
       i32.const 21620
       i32.add
       i32.load offset=4
       local.tee $0
       br_if $do-loop|02
      end
     end
     i32.const 0
    end
    i32.eqz
    if
     i32.const 5152
     i32.const 19536
     i32.const 74
     i32.const 53
     call $~lib/builtins/abort
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store offset=4
    local.get $2
    call $assembly/types/target/Rollout#constructor
   else
    i32.const 0
   end
   local.tee $0
   i32.store offset=8
   local.get $0
   local.get $1
   call $assembly/bucketing/bucketing/_doesUserPassRollout
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/testConfigBodyClass (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   local.get $3
   local.get $0
   call $assembly/types/configBody/ConfigBody#constructor
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16128
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load
   local.tee $4
   i32.store offset=8
   local.get $0
   i32.const 16128
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16176
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=4
   local.tee $4
   i32.store offset=8
   local.get $0
   i32.const 16176
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16224
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=8
   local.tee $4
   i32.store offset=8
   local.get $4
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $0
   i32.const 16224
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 16336
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=12
   local.tee $4
   i32.store offset=8
   local.get $4
   call $assembly/helpers/jsonHelpers/jsonArrFromValueArray<assembly/types/feature/Feature>
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $0
   i32.const 16336
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   global.get $~lib/memory/__stack_pointer
   i32.const 19232
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.load offset=16
   local.tee $3
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#constructor
   local.tee $4
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $3
   call $~lib/map/Map<~lib/string/String,i64>#keys
   local.tee $6
   i32.store offset=4
   loop $for-loop|0
    local.get $1
    local.get $6
    i32.load offset=12
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     local.get $1
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     local.tee $7
     i32.store offset=8
     local.get $3
     local.get $7
     call $~lib/map/Map<~lib/string/String,i64>#get
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 22740
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $5
     i64.const 0
     i64.store
     local.get $5
     local.get $4
     i32.load
     local.tee $8
     i32.store
     call $~lib/assemblyscript-json/assembly/JSON/Value.Integer
     local.set $5
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store offset=4
     local.get $8
     local.get $7
     local.get $5
     call $~lib/map/Map<~lib/string/String,~lib/assemblyscript-json/assembly/JSON/Value>#set
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=8
   local.get $0
   i32.const 19232
   local.get $4
   call $~lib/assemblyscript-json/assembly/JSON/Obj#set<~lib/assemblyscript-json/assembly/JSON/Value>
   local.get $0
   call $~lib/assemblyscript-json/assembly/JSON/Obj#stringify@virtual
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/testDVCUserClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   local.get $0
   call $assembly/types/dvcUser/DVCUser#constructor
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $0
   call $assembly/types/dvcUser/DVCPopulatedUser#constructor
   local.tee $0
   i32.store offset=4
   local.get $0
   call $assembly/types/dvcUser/DVCPopulatedUser#stringify
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/testBucketedUserConfigClass (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig.bucketedUserConfigFromJSONString
   local.tee $0
   i32.store
   local.get $0
   call $assembly/types/bucketedUserConfig/BucketedUserConfig#stringify
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $export:assembly/test/testSortObjectsByString (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $0
   i32.store
   local.get $3
   local.get $1
   i32.store offset=4
   local.get $3
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 22740
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i32.const 0
   i32.store offset=8
   local.get $3
   i32.const 20960
   i32.store
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load offset=12
   i32.const 20960
   call $~lib/util/sort/SORT<assembly/helpers/arrayHelpers/SortingArrayItem<assembly/types/target/TargetDistribution>>
   local.get $3
   local.get $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 136
   i32.const 20992
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=8
   loop $for-loop|0
    local.get $2
    local.get $0
    i32.load offset=12
    i32.lt_s
    if
     local.get $0
     local.get $2
     call $~lib/array/Array<~lib/assemblyscript-regex/assembly/parser/node/Node>#__get
     i32.load offset=4
     local.set $4
     global.get $~lib/memory/__stack_pointer
     local.get $4
     i32.store
     local.get $3
     local.get $4
     call $~lib/array/Array<~lib/string/String>#push
     drop
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 15648
   i32.store
   local.get $1
   i32.const 15648
   call $~lib/string/String.__eq
   if
    local.get $3
    i32.load offset=4
    local.get $3
    i32.load offset=12
    call $~lib/util/bytes/REVERSE<assembly/types/target/TargetDistribution>
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 39152
  i32.const 39200
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 3600
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)
